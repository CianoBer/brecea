IF NOT EXISTS (SELECT 1 FROM SysColumns WHERE SysColumns.ID=(SELECT ID FROM SysObjects WHERE ID=object_id('EXTRACLIENTI') AND SysObjects.XType='U') AND SysColumns.Name='CODICEVECCHIO')
	ALTER TABLE EXTRACLIENTI ADD CODICEVECCHIO VARCHAR(10) DEFAULT''
GO
IF NOT EXISTS (SELECT 1 FROM SysColumns WHERE SysColumns.ID=(SELECT ID FROM SysObjects WHERE ID=object_id('EXTRACLIENTI') AND SysObjects.XType='U') AND SysColumns.Name='DATAINSERIMENTO')
	ALTER TABLE EXTRACLIENTI ADD DATAINSERIMENTO SMALLDATETIME
GO
IF NOT EXISTS (SELECT 1 FROM SysColumns WHERE SysColumns.ID=(SELECT ID FROM SysObjects WHERE ID=object_id('EXTRACLIENTI') AND SysObjects.XType='U') AND SysColumns.Name='CTRASMADOCUM')
	ALTER TABLE EXTRACLIENTI ADD CTRASMADOCUM SMALLINT NOT NULL DEFAULT 1
GO

IF NOT EXISTS (SELECT 1 FROM SysColumns WHERE SysColumns.ID=(SELECT ID FROM SysObjects WHERE ID=object_id('EXTRAFORNITORI') AND SysObjects.XType='U') AND SysColumns.Name='CODICEVECCHIO')
	ALTER TABLE EXTRAFORNITORI ADD CODICEVECCHIO VARCHAR(10) DEFAULT''
GO
IF NOT EXISTS (SELECT 1 FROM SysColumns WHERE SysColumns.ID=(SELECT ID FROM SysObjects WHERE ID=object_id('EXTRAFORNITORI') AND SysObjects.XType='U') AND SysColumns.Name='DATAINSERIMENTO')
	ALTER TABLE EXTRAFORNITORI ADD DATAINSERIMENTO SMALLDATETIME
GO
IF NOT EXISTS (SELECT 1 FROM SysColumns WHERE SysColumns.ID=(SELECT ID FROM SysObjects WHERE ID=object_id('EXTRAFORNITORI') AND SysObjects.XType='U') AND SysColumns.Name='FTRASMADOCUM')
	ALTER TABLE EXTRAFORNITORI ADD FTRASMADOCUM SMALLINT NOT NULL DEFAULT 1
GO

IF NOT EXISTS (SELECT 1 FROM SysColumns WHERE SysColumns.ID=(SELECT ID FROM SysObjects WHERE ID=object_id('EXTRAMAG') AND SysObjects.XType='U') AND SysColumns.Name='CODPIANIFICATORE')
	ALTER TABLE EXTRAMAG ADD CODPIANIFICATORE DECIMAL(5,0) DEFAULT 0
GO

IF NOT EXISTS (SELECT 1 FROM SYSOBJECTS WHERE ID = OBJECT_ID('MET_TABPIANIFICATORE') AND TYPE = 'U')
CREATE TABLE MET_TABPIANIFICATORE
(
	CODICE decimal(5,0) NOT NULL ,
	DESCRIZIONE varchar (25)  NULL ,
	UTENTEMODIFICA VARCHAR(25) NOT NULL,
	DATAMODIFICA DATETIME NOT NULL
	PRIMARY KEY(CODICE)
)
GO
GRANT  REFERENCES ,  SELECT ,  UPDATE ,  INSERT ,  DELETE  ON MET_TABPIANIFICATORE  TO Metodo98
GO



-------------------------------------------------
-- Aggiunte del 23/09/2008 - Gildo             --
-------------------------------------------------
-- Campi extra documenti per date e ubicazione --
-------------------------------------------------

	IF NOT EXISTS (SELECT 1 FROM SysColumns WHERE SysColumns.ID=(SELECT ID FROM SysObjects WHERE ID=object_id('ExtraRigheDoc') AND SysObjects.XType='U') AND SysColumns.Name='DataRich')
		ALTER TABLE ExtraRigheDoc ADD
			DataRich	datetime	NULL
	GO

	IF NOT EXISTS (SELECT 1 FROM SysColumns WHERE SysColumns.ID=(SELECT ID FROM SysObjects WHERE ID=object_id('ExtraRigheDoc') AND SysObjects.XType='U') AND SysColumns.Name='ChkConf')
		ALTER TABLE ExtraRigheDoc ADD
			ChkConf		smallint	NOT NULL	CONSTRAINT DF_ExtraRigheDoc_ChkConf DEFAULT 0
	GO

	IF NOT EXISTS (SELECT 1 FROM SysColumns WHERE SysColumns.ID=(SELECT ID FROM SysObjects WHERE ID=object_id('ExtraRigheDoc') AND SysObjects.XType='U') AND SysColumns.Name='DataConf')
		ALTER TABLE ExtraRigheDoc ADD
			DataConf	datetime	NULL
	GO

	IF NOT EXISTS (SELECT 1 FROM SysColumns WHERE SysColumns.ID=(SELECT ID FROM SysObjects WHERE ID=object_id('ExtraRigheDoc') AND SysObjects.XType='U') AND SysColumns.Name='UbiDesc')
		ALTER TABLE ExtraRigheDoc ADD
			UbiDesc		varchar(255)	NULL
	GO

-------------------------------------------------
-- Fine aggiunte del 23/09/2008 - Gildo        --
-------------------------------------------------



------------------------------------------------------------------
-- Aggiunte del 03/10/2008 - Gildo                              --
------------------------------------------------------------------
-- Campi extra righe documenti per descrizione estesa           --
------------------------------------------------------------------

	IF NOT EXISTS (SELECT 1 FROM SysColumns WHERE SysColumns.ID=(SELECT ID FROM SysObjects WHERE ID=object_id('ExtraRigheDoc') AND SysObjects.XType='U') AND SysColumns.Name='DescrEstesa')
		ALTER TABLE ExtraRigheDoc ADD
			DescrEstesa	varchar(3000)	NULL
	GO

------------------------------------------------------------------
-- Campi extra testa documenti per descrizione aggiuntiva porto --
------------------------------------------------------------------

	IF NOT EXISTS (SELECT 1 FROM SysColumns WHERE SysColumns.ID=(SELECT ID FROM SysObjects WHERE ID=object_id('ExtraTesteDoc') AND SysObjects.XType='U') AND SysColumns.Name='DesAggPorto')
		ALTER TABLE ExtraTesteDoc ADD
			DesAggPorto	varchar(255)	NULL
	GO

------------------------------------------------------------------
-- Fine aggiunte del 03/10/2008 - Gildo                         --
------------------------------------------------------------------



----------------------------------------------
-- Aggiunte del 27/10/2008 - DANIELE		--
----------------------------------------------
-- Personalizzazione EXTRAMAG 				--
----------------------------------------------

	IF NOT EXISTS (SELECT 1 FROM SysColumns WHERE SysColumns.ID=(SELECT ID FROM SysObjects WHERE ID=object_id('EXTRAMAG') AND SysObjects.XType='U') AND SysColumns.Name='DISEGNO')
		ALTER TABLE EXTRAMAG ADD DISEGNO VARCHAR(30) DEFAULT ''
	GO

----------------------------------------------
-- Fine aggiunte del 27/10/2008 - DANIELE 	--
----------------------------------------------



------------------------------------------
-- Aggiunte del 06/11/2008 - Gildo      --
------------------------------------------
-- Campo extra serie documento          --
------------------------------------------

	IF NOT EXISTS (SELECT 1 FROM SysColumns WHERE SysColumns.ID=(SELECT ID FROM SysObjects WHERE ID=object_id('ExtraParDoc') AND SysObjects.XType='U') AND SysColumns.Name='SerieDoc')
		ALTER TABLE ExtraParDoc ADD
			SerieDoc		varchar(1)		NULL
	GO

------------------------------------------
-- Fine aggiunte del 06/11/2008 - Gildo --
------------------------------------------



------------------------------------------
-- Aggiunte del 31/12/2007 - RGabriele      --
---------------------------------------------------------
-- Funzioni per recupero ubicazioni e ultimi documenti --
---------------------------------------------------------

	IF EXISTS(SELECT 1 FROM SysObjects WHERE ID=object_id('GR_FUNULTIMAUBICAZDOC') AND Type='FN')
		DROP FUNCTION GR_FUNULTIMAUBICAZDOC
	GO
	CREATE FUNCTION GR_FUNULTIMAUBICAZDOC
	(
		@CODART VARCHAR(80)
	)
	RETURNS VARCHAR(272)
	AS
	BEGIN
		DECLARE @UBIATERRA AS VARCHAR(255)
		DECLARE @RIFULTDOC AS VARCHAR(50)
		DECLARE @RESULT AS VARCHAR(272)

		SELECT TOP 1 @UBIATERRA=ERD.UBIDESC, @RIFULTDOC=(TD.NUMRIFDOC + ' - ' + CONVERT(VARCHAR(8), TD.DATARIFDOC, 3))
		FROM TESTEDOCUMENTI TD
			LEFT OUTER JOIN RIGHEDOCUMENTI RD
				ON TD.PROGRESSIVO=RD.IDTESTA
			LEFT OUTER JOIN EXTRARIGHEDOC ERD
				ON RD.IDTESTA=ERD.IDTESTA AND RD.IDRIGA=ERD.IDRIGA
			LEFT OUTER JOIN PARAMETRIDOC PD
				ON TD.TIPODOC = PD.CODICE
		WHERE CODART=@CODART
		AND PD.TIPO = 'B'
		AND PD.CLIFOR = 'F'
		AND ERD.UBIDESC <> ''
		ORDER BY TD.DATADOC DESC

		SET @RESULT=@UBIATERRA+','+@RIFULTDOC

		-- Return the result of the function
		RETURN ISNULL(@RESULT,',')

	END
	GO
	GRANT EXECUTE ON GR_FUNULTIMAUBICAZDOC TO METODO98
	GO

------------------------------------------------------------

	IF EXISTS(SELECT 1 FROM SysObjects WHERE ID=object_id('GR_FUNUBICAZDEFAULT') AND Type='FN')
		DROP FUNCTION GR_FUNUBICAZDEFAULT
	GO
	CREATE FUNCTION GR_FUNUBICAZDEFAULT
	(
		@CODART VARCHAR(80),
		@CODDEPOSITO VARCHAR(10)
	)
	RETURNS VARCHAR(10)
	AS
	BEGIN
		-- Declare the return variable here
		DECLARE @UBICAZIONE AS VARCHAR(10)

		-- Add the T-SQL statements to compute the return value here
		SELECT TOP 1 @UBICAZIONE=CODUBICAZIONE
		FROM UBICAZIONIARTICOLI
		WHERE CODICEART=@CODART
		AND CODDEPOSITO=@CODDEPOSITO
		ORDER BY NRRIGA

		-- Return the result of the function
		RETURN isnull(@UBICAZIONE,' ')

	END
	GO

	GRANT EXECUTE ON GR_FUNUBICAZDEFAULT TO METODO98
	GO
---------------------------------------------------------
-- Funzioni per recupero ubicazioni e ultimi documenti --
---------------------------------------------------------



---------------------------------------------------
-- Aggiunte del 13/01/2009 - Gildo               --
---------------------------------------------------
-- Vista personalizzata per AIOT vis. Disp. Art. --
---------------------------------------------------

	IF EXISTS(SELECT 1 FROM SysObjects WHERE ID=object_id('BCEA_VistaStoricoMagBase') AND Type='V')
		DROP VIEW BCEA_VistaStoricoMagBase
	GO

	CREATE VIEW BCEA_VistaStoricoMagBase AS
		SELECT	VSM.*,
				(SELECT TOP 1 UA.CodUbicazione FROM UbicazioniArticoli UA WHERE UA.CodiceArt=VSM.CodArt AND UA.CodDeposito=VSM.CodDeposito ORDER BY UA.NrRiga) AS CodUbiArt,
				(SELECT CASE WHEN VSM.TipoMov BETWEEN 1 AND 4 THEN ERD.UbiDesc ELSE '' END) AS UbiDesc

		FROM VistaStoricoMagBase VSM LEFT OUTER JOIN ExtraRigheDoc ERD ON VSM.IDTesta=ERD.IDTesta AND VSM.RigaDoc=ERD.IDRiga
	GO

	GRANT SELECT ON BCEA_VistaStoricoMagBase TO Metodo98
	GO

---------------------------------------------------
-- Fine aggiunte del 13/01/2009 - Gildo          --
---------------------------------------------------



---------------------------------------------------
-- Aggiunte del 15/01/2009 - RGabriele           --
---------------------------------------------------
-- Vista personalizzata per selezione clienti    --
---------------------------------------------------

/* 07/02/2018 - Remmata la crezione di questa vista, perchè rifatta successivamente, per riallineamento alla versione

IF EXISTS(SELECT 1 FROM SysObjects WHERE ID=object_id('BRECEA_VISTACLIENTI') AND Type='V')
	DROP VIEW BRECEA_VISTACLIENTI
GO

CREATE VIEW BRECEA_VISTACLIENTI AS
        SELECT AC.*, TN.DESCRIZIONE AS DSCNAZIONE
		FROM ANAGRAFICACF AC, TABNAZIONI TN
        WHERE (AC.CODNAZIONE=TN.CODICE)
GO

GRANT SELECT ON BRECEA_VISTACLIENTI TO METODO98
GO

*/

---------------------------------------------------
-- Fine Aggiunte del 15/01/2009 - RGabriele      --
---------------------------------------------------



---------------------------------------------------
-- Aggiunte del 16/02/2009 - RGabriele           --
---------------------------------------------------
-- Aggiunta campo extra depositi includimrp	     --
---------------------------------------------------
IF NOT EXISTS (SELECT 1 FROM SysColumns WHERE SysColumns.ID=(SELECT ID FROM SysObjects WHERE SysObjects.ID=object_id('EXTRADEPOSITI') AND SysObjects.Type='U') AND SysColumns.Name='PROPONIMRP')
ALTER TABLE EXTRADEPOSITI ADD PROPONIMRP INT DEFAULT 0  NOT NULL
GO

IF NOT EXISTS(SELECT 1 FROM SysObjects WHERE SysObjects.ID=object_id('PROPONIMRP_CHECK') AND SysObjects.Type='C')
ALTER TABLE EXTRADEPOSITI ADD CONSTRAINT PROPONIMRP_CHECK CHECK(PROPONIMRP In (0,1))
GO

---------------------------------------------------
-- modifica vista depositi pianficazione	     --
---------------------------------------------------

ALTER VIEW [dbo].[VISTADEPOSITIPROGPROD]
AS SELECT
	CODICE,DESCRIZIONE,(CASE WHEN PROPONIMRP=1 THEN 1 ELSE 0 END) AS DISPONIBILE,TIPODEPOSITO,DATAINIVALIDITA,DATAFINEVALIDITA
FROM
	ANAGRAFICADEPOSITI AD
	INNER JOIN EXTRADEPOSITI ED
		ON AD.CODICE=ED.CODDEPOSITO
GO

---------------------------------------------------
-- Fine Aggiunte del 16/02/2009 - RGabriele      --
---------------------------------------------------



------------------------------------------
-- Aggiunte del 18/02/2009 - Gildo      --
------------------------------------------
-- Campo extra origine in piede doc.    --
------------------------------------------

	IF NOT EXISTS (SELECT 1 FROM SysColumns WHERE SysColumns.ID=(SELECT SysObjects.ID FROM SysObjects WHERE SysObjects.ID=object_id('ExtraTesteDoc') AND SysObjects.Type='U') AND SysColumns.Name='Origine')
		ALTER TABLE ExtraTesteDoc ADD
			Origine						varchar(25)		NULL
	GO

------------------------------------------
-- Fine aggiunte del 18/02/2009 - Gildo --
------------------------------------------



-------------------------------------------------
-- Aggiunte del 05/03/2009 - RGabriele         --
-------------------------------------------------
-- Campi extra mag utente creatore			   --
-------------------------------------------------

	IF NOT EXISTS (SELECT 1 FROM SysColumns WHERE SysColumns.ID=(SELECT ID FROM SysObjects WHERE ID=object_id('ExtraMag') AND SysObjects.XType='U') AND SysColumns.Name='UtenteCreazione')
		ALTER TABLE ExtraMag ADD
			UtenteCreazione	varchar(25) default ''
	GO

	IF NOT EXISTS (SELECT 1 FROM SysColumns WHERE SysColumns.ID=(SELECT ID FROM SysObjects WHERE ID=object_id('ExtraMag') AND SysObjects.XType='U') AND SysColumns.Name='DataCreazione')
		ALTER TABLE ExtraMag ADD
			DataCreazione	datetime
	GO

-------------------------------------------------
-- TRIGGER utente creatore ANAGRAFICAARTICOLI  --
-------------------------------------------------
/*  CREATE TRIGGER "TI_UTENTE_CREAZIONE_AA" FOR TABLE "ANAGRAFICAARTICOLI"  */

IF EXISTS(SELECT * FROM SysObjects WHERE ID=object_id('TI_UTENTE_CREAZIONE_AA') AND Type='TR')
	DROP TRIGGER TI_UTENTE_CREAZIONE_AA
GO

CREATE TRIGGER [dbo].[TI_UTENTE_CREAZIONE_AA] ON [dbo].[EXTRAMAG] FOR INSERT AS
BEGIN
    DECLARE
       @NUMROWS  INT,
       @strData varchar(10),
       @ERRNO    INT,
       @ERRMSG   VARCHAR(255)

    SELECT  @NUMROWS = @@ROWCOUNT
    IF @NUMROWS = 0
       RETURN

	SET @strData=right('00' + cast(day(getdate()) as varchar(2)), 2) + '-' + right('00' + cast(month(getdate()) as varchar(2)), 2) + '-' + right('0000' + cast(year(getdate()) as varchar(4)), 4)

    /*  UPDATE EXTRAMAG UTENTE, DATA CREAZIONE */
    UPDATE EXTRAMAG
	SET UTENTECREAZIONE=(SELECT USERID FROM TABUTENTI WHERE USERDB = USER_NAME()),
		DATACREAZIONE=convert(datetime, @strData, 105)
    FROM   EXTRAMAG T2, INSERTED T1
    WHERE  T2.CODART = T1.CODART

    RETURN

/*  ERRORS HANDLING  */
ERROR:
    raiserror (@errmsg, 1, 1)
    ROLLBACK  TRANSACTION
END
GO

-------------------------------------------------
-- Fine aggiunte del 05/03/2009 - RGabriele    --
-------------------------------------------------



-------------------------------------------------
-- Aggiunte del 06/03/2009 -ADaniele,RGabriele --
-------------------------------------------------
-- Oggetti SQL per stampa pianificazione pers  --
-------------------------------------------------

-- TABELLA PER STAMPA PIANIFICAZIONE MATERIALI PER CODICE COMPOSTO

IF NOT EXISTS(SELECT 1 FROM SysObjects WHERE SysObjects.ID=object_id('BRECEA_TEMPSTPPIAN') AND SysObjects.Type='U')
	CREATE TABLE BRECEA_TEMPSTPPIAN
		(
		NRTERMINALE		decimal(5, 0)	NOT NULL,
		CODCOMPOSTO		varchar(50)		NOT NULL,
		CODCOMPONENTE	varchar(50)		NULL
		)

GO

GRANT REFERENCES, SELECT, UPDATE, INSERT, DELETE ON BRECEA_TEMPSTPPIAN TO METODO98
GO



-- Creazione Stored Procedure

-- STORED PROCEDURE CARICAMENTO TABELLA TEMPORANEA BREVCEA_TEMPSTPPIAN
-- con componenti distinta base esplosa

IF EXISTS(SELECT 1 FROM SysObjects WHERE SysObjects.ID=object_id('BRECEA_ESPLODIDBA') AND SysObjects.Type='P')
	DROP PROCEDURE BRECEA_ESPLODIDBA
GO

CREATE PROCEDURE BRECEA_ESPLODIDBA @PCODART VARCHAR(50),@PNRTERMINALE DECIMAL(5) AS
BEGIN

		DELETE FROM BRECEA_TEMPSTPPIAN WHERE NRTERMINALE = @PNRTERMINALE;

 			WITH MultilevelBOM(Composto, Componente) AS
			(
				SELECT AC.Artcomposto AS Composto, DB.Codartcomponente AS Componente
				FROM Distintaartcomposti AC
   					INNER JOIN DistintaBase DB on AC.Progressivo = DB.Rifprogressivo
				WHERE
				AC.Artcomposto = @PCODART AND
				AC.DbaStandard = 1
			UNION ALL
				SELECT ACR.Artcomposto AS Composto, DBR.Codartcomponente AS Componente
				FROM Distintaartcomposti ACR
   					INNER JOIN DistintaBase DBR on ACR.Progressivo = DBR.Rifprogressivo
						INNER JOIN MultilevelBOM MB ON ACR.Artcomposto= MB.Componente
				WHERE
				ACR.DbaStandard = 1
			)
			INSERT INTO BRECEA_TEMPSTPPIAN
				SELECT @PNRTERMINALE, Composto as CODCOMPOSTO, Componente as CODCOMPONENTE
					FROM MultilevelBOM

END
GO

GRANT EXECUTE ON BRECEA_ESPLODIDBA TO METODO98
GO

-- VISTA ELENCO ARTICOLI ESPLOSI, COMPOSTI E COMPONENTI

	IF EXISTS(SELECT 1 FROM SysObjects WHERE SysObjects.ID=object_id('BRECEA_VISTA_TEMPSTPPIAN') AND SysObjects.Type='V')
		DROP VIEW BRECEA_VISTA_TEMPSTPPIAN
	GO

CREATE VIEW BRECEA_VISTA_TEMPSTPPIAN AS
	SELECT DISTINCT NRTERMINALE, CODCOMPOSTO AS CODART FROM BRECEA_TEMPSTPPIAN
		UNION
	SELECT DISTINCT NRTERMINALE, CODCOMPONENTE AS CODART FROM BRECEA_TEMPSTPPIAN
GO

GRANT SELECT ON BRECEA_VISTA_TEMPSTPPIAN TO METODO98
GO

------------------------------------------------------
-- Fine aggiunte del 06/03/2009 -ADaniele,RGabriele --
------------------------------------------------------



------------------------------------------
-- Aggiunte del 09/03/2009 - Gildo      --
------------------------------------------
-- Nuova vista per analisi disp. AIOT   --
------------------------------------------

	IF EXISTS(SELECT 1 FROM SysObjects WHERE SysObjects.ID=object_id('BCEA_VistaAnalisiDisp') AND SysObjects.Type='V')
		DROP VIEW BCEA_VistaAnalisiDisp
	GO

	CREATE VIEW BCEA_VistaAnalisiDisp AS
		SELECT
			TMP.NrMovimento, TMP.CodArt, TMP.DataDisp, TMP.GGScoperto, TMP.IDSessione, TMP.OrdineLettura, TMP.Scaduto,
			TMP.Quantita AS QtaUM1, TMP.Quantita2UM AS QtaUM2, TMP.Situazione AS DispUM1, TMP.Situazione2UM AS DispUM2,
			SM.CodCausale, SM.CodClifor, SM.CodCommessa, SM.CodDeposito, SM.NRifPartita,
			VAA.Descrizione AS DesArt, VAA.Provenienza, VAA.TipoGestione, VAA.LivProduzione, VAA.ScortaMin,
			VAA.Categoria, VAA.CodCategoriaStat, VAA.Gruppo, VAA.UM1, VAA.UM2,
			AD.Disponibile, AD.TipoDeposito,

			(CASE WHEN TMP.NrMovimento<>0 THEN TCM.Descrizione ELSE 'GIACENZA' END) AS DesCausale,

			(CASE WHEN SM.TipoMov=0 THEN
				SM.Riferimenti
			WHEN (SM.TipoMov>=1 AND SM.TipoMov<=4) THEN
				(TD.TipoDoc + '/' + cast(TD.Esercizio AS varchar) + '/' + cast(TD.NumeroDoc AS varchar) + '/' + TD.Bis)
			WHEN (SM.TipoMov=5 OR SM.TipoMov=6) THEN
				(TOP1.TipoCom + '/' + cast(TOP1.Esercizio AS varchar) + '/' + cast(TOP1.NumeroCom AS varchar) + '/' + cast(SM.RigaDoc AS varchar))
			WHEN (SM.TipoMov=7 OR SM.TipoMov=8) THEN
				(TOP1.TipoCom + '/' + cast(TOP1.Esercizio AS varchar) + '/' + cast(TOP1.NumeroCom AS varchar) + '/' + cast(SM.RigaDoc AS varchar) + '/' + cast(SM.RigaComp AS varchar))
			WHEN (SM.TipoMov=9 OR SM.TipoMov=10) THEN
				(TOP2.TipoCom + '/' + cast(TOP2.Esercizio AS varchar) + '/' + cast(TOP2.NumeroCom AS varchar) + '/' + cast(SM.RigaDoc AS varchar))
			WHEN (SM.TipoMov=11 OR SM.TipoMov=12) THEN
				(TOP2.TipoCom + '/' + cast(TOP2.Esercizio AS varchar) + '/' + cast(TOP2.NumeroCom AS varchar) + '/' + cast(SM.RigaDoc AS varchar) + '/' + cast(SM.RigaComp AS varchar))
			ELSE
				''
			END) AS Riferimento,

			(CASE WHEN (SM.TipoMov=7 OR SM.TipoMov=8) THEN
				ROP.CodArt
			WHEN (SM.TipoMov=11 OR SM.TipoMov=12) THEN
				SMOP.CodArt
			ELSE
				''
			END) AS CodArtOrdProd,

			(CASE WHEN isnull(SM.TipoMov, 0) NOT BETWEEN 1 AND 4 THEN '  ' ELSE (CASE WHEN XRD.ChkConf=0 THEN 'No' ELSE 'Si' END) END) AS ConsConf

		FROM
			((TempAnalisiDispArticolo TMP LEFT OUTER JOIN
			(StoricoMag SM INNER JOIN AnagraficaDepositi AD ON SM.CodDeposito=AD.Codice) ON TMP.NrMovimento=SM.Progressivo)
			LEFT OUTER JOIN TabCausaliMag TCM ON SM.CodCausale=TCM.Codice
			LEFT OUTER JOIN TesteDocumenti TD ON SM.IDTesta=TD.Progressivo
			LEFT OUTER JOIN TesteOrdiniProd TOP1 ON SM.IDTesta=TOP1.Progressivo
			LEFT OUTER JOIN StoricoMovProd SMP ON SM.IDTesta=SMP.Progressivo
			LEFT OUTER JOIN TesteOrdiniProd TOP2 ON SMP.RifTesta=TOP2.Progressivo
			LEFT OUTER JOIN RigheOrdProd ROP ON SM.IDTesta=ROP.IDTesta AND SM.RigaDoc=ROP.IDRiga
			LEFT OUTER JOIN StoricoMovOrdProd SMOP ON SM.IDTesta=SMOP.RifProgressivo AND SM.RigaDoc=SMOP.RigaMovOrd
			LEFT OUTER JOIN ExtraRigheDoc AS XRD ON SM.IDTesta=XRD.IDTesta AND SM.RigaDoc=XRD.IDRiga)
			INNER JOIN VistaAnagraficaArticoli VAA ON TMP.CodArt=VAA.Codice
	GO

	GRANT SELECT ON BCEA_VistaAnalisiDisp TO Metodo98
	GO

------------------------------------------
-- Fine aggiunte del 09/03/2009 - Gildo --
------------------------------------------



--------------------------------------------
-- Aggiunte del 11/03/2009 - Gildo        --
--------------------------------------------
-- Nuova vista per lettere sollecito doc. --
--------------------------------------------

	IF EXISTS(SELECT 1 FROM SysObjects WHERE SysObjects.ID=object_id('BCEA_VistaStampaApChSollDoc') AND SysObjects.Type='V')
		DROP VIEW BCEA_VistaStampaApChSollDoc
	GO

	CREATE VIEW BCEA_VistaStampaApChSollDoc AS
		SELECT
			TD.CodCliFor, TD.DataDoc, TD.CodCambio, TD.ValCambio, TD.CodAgente1, TD.CodAgente2, TD.CodAgente3,
			TD.TotDocumento, TD.TotDocumentoRes, TD.TotDocumentoEuro, TD.TotDocumentoEuroRes,
			TD.NumRifDoc, TD.DataRifDoc,
			RD.*,
			CF.DscConto1, CF.DscConto2, CF.Indirizzo, CF.CAP, CF.Localita, CF.Provincia, CF.CodNazione, CF.Fax, CF.Telefono,
			(SELECT TN.Descrizione FROM TabNazioni TN WHERE TN.Codice=CF.CodNazione) AS DscNazione,
			cast(RD.IDTesta AS varchar) + '|' + cast(RD.IDRiga AS varchar) AS IDTestaRiga,
			ERD.DataRich, ERD.ChkConf, ERD.DataConf, ERD.UbiDesc, ERD.DescrEstesa
		FROM TesteDocumenti TD, RigheDocumenti RD, AnagraficaCF CF, ExtraRigheDoc ERD
		WHERE TD.Progressivo=RD.IDTesta AND TD.CodCliFor=CF.CodConto AND RD.IDTesta=ERD.IDTesta AND RD.IDRiga=ERD.IDRiga
	GO

	GRANT SELECT ON BCEA_VistaStampaApChSollDoc TO Metodo98
	GO

--------------------------------------------
-- Fine aggiunte del 11/03/2009 - Gildo   --
--------------------------------------------



------------------------------------------------------------------
-- Aggiunte del 09/04/2009 - Gildo                              --
------------------------------------------------------------------
-- Allungamento informazioni aggiuntive in descrizioni articoli --
------------------------------------------------------------------

	ALTER TABLE DescrArticoli ALTER COLUMN
		InformazioniAgg					varchar(3000)
	GO

------------------------------------------------------------------
-- Fine aggiunte del 09/04/2009 - Gildo                         --
------------------------------------------------------------------



-----------------------------------------------------------------
-- Aggiunte del 28/04/2009 - Gildo                             --
-----------------------------------------------------------------
-- Tabella temporanea per rischedulazione ordini di produzione --
-----------------------------------------------------------------
	IF EXISTS (SELECT 1 FROM SYSOBJECTS WHERE ID = OBJECT_ID('BCEA_TempRischOP') AND TYPE = 'U')
		DROP TABLE BCEA_TempRischOP
	GO
	CREATE TABLE dbo.BCEA_TempRischOP(
		ProgCC decimal(10, 0) NOT NULL,
		FlagSel smallint NOT NULL,
		RifComm varchar(30) NOT NULL,
		Riferimento varchar(20) NOT NULL,
		DataFine datetime NULL,--DATACONSEGNA
		UtenteModifica varchar(25) NOT NULL,
		DataModifica datetime NOT NULL,
		DeltaGGRisched int NULL,
	 CONSTRAINT PK_BCEA_TempRischOP PRIMARY KEY CLUSTERED
	(
		ProgCC ASC
	)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
	) ON [PRIMARY]
	GO
	ALTER TABLE BCEA_TempRischOP ADD  CONSTRAINT [DF_BCEA_TempRischOP_FlagSel]  DEFAULT ((0)) FOR [FlagSel]
	GO
	GRANT  REFERENCES ,  SELECT ,  UPDATE ,  INSERT ,  DELETE  ON BCEA_TempRischOP  TO Metodo98
	GO
-----------------------------------------------------------------
-- Fine aggiunte del 28/04/2009 - Gildo                        --
-----------------------------------------------------------------



-----------------------------------------------------------------
-- Aggiunte del 26/05/2009 - DANIELE                           --
-----------------------------------------------------------------
-- VISTE PER VISIONI DOCUMENTI                                 --
-----------------------------------------------------------------
/*
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'MET_VISTATESTEDOC'))
DROP VIEW MET_VISTATESTEDOC
GO
CREATE VIEW MET_VISTATESTEDOC AS
SELECT
	VTD.*,
	TN.DESCRIZIONE AS DSCNAZIONE,
	(CASE WHEN ARCF.STATOCONTABILITA+ARCF.STATOMAGAZZINO+ARCF.STATOORDINI+ARCF.STATOBOLLE+ARCF.STATOFATTURE+ARCF.STATONOTEACCREDITO>0 THEN 'BLOCCATO' ELSE '' END) AS STATOTOT,
	ARCF.STATOCONTABILITA+ARCF.STATOMAGAZZINO+ARCF.STATOORDINI+ARCF.STATOBOLLE+ARCF.STATOFATTURE+ARCF.STATONOTEACCREDITO AS VALSTATOTOT

FROM
	VISTATESTEDOC VTD
	LEFT OUTER JOIN TABNAZIONI TN ON TN.CODICE=VTD.CODNAZIONE
	LEFT OUTER JOIN ANAGRAFICARISERVATICF ARCF ON ARCF.CODCONTO=VTD.CODCLIFOR AND ARCF.ESERCIZIO=VTD.ESERCIZIO

GO
GRANT SELECT ON MET_VISTATESTEDOC TO METODO98
GO
*/

IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'MET_VISTADOCUMENTIBASE'))
DROP VIEW MET_VISTADOCUMENTIBASE
GO
CREATE VIEW MET_VISTADOCUMENTIBASE AS
    SELECT TD.PROGRESSIVO AS IDTESTA, TD.ESERCIZIO,
    TD.TIPODOC, TD.NUMERODOC, TD.BIS, TD.DATADOC,
    TD.DOCCHIUSO, TD.BLOCCATO, TD.CODCLIFOR,
    TD.NUMRIFDOC, TD.DATARIFDOC,
    TD.CODAGENTE1, TD.CODAGENTE2,
    TD.CODAGENTE3, TD.CODBANCAINCASSO,
    TD.NUMDESTDIVERSAMERCI, TD.CODPAGAMENTO,
    TD.CODLINGUA, TD.CODCAMBIO, TD.VALCAMBIO,
    TD.SCONTOFINALE, TD.CODCFFATT,
    TD.PRCPROVVAG1, TD.PRCPROVVFINALEAG1,
    TD.PRCPROVVAG2, TD.PRCPROVVFINALEAG2,
    TD.PRCPROVVAG3, TD.PRCPROVVFINALEAG3, TD.FLAGCONT,
    TD.ANNOTAZIONI AS ANNOTAZIONIPIEDE,
    PARAMETRIDOC.TIPO AS TIPOPAR,
    RD.IDRIGA AS PROGRIGADOC, RD.POSIZIONE,
    RD.TIPORIGA, RD.RIGACHIUSA, RD.RIGABLOCCATA,
    RD.CODART, RD.DESCRIZIONEART,
    RD.DATACONSEGNA, RD.NUMLISTINO, RD.UMGEST,
    VISTAARTICOLIUMBASE.UM1,
    VISTAARTICOLIUMBASE.UM2, RD.UMPREZZO,
    RD.SCONTORIGA, RD.SCONTIESTESI, RD.CODIVA,
    RD.PROVVAG1, RD.PROVVAG2, RD.PROVVAG3,
    RD.NUMCOLLI, RD.GENCONTROP, RD.NRRIFPARTITA,
    RD.PESONETTO, RD.PESOLORDO, RD.PESOIMBALLO,
    RD.SUPERFICIE, RD.VOLUME,RD.RIFCOMMCLI,
    RD.NOMECOMMESSAPROD, RD.VERSIONEDIBA,
    RD.CAUSALEMAG, RD.NRPEZZIIMBALLO,
    RD.CODIMBALLO, RD.NOMENCLCOMBINATA,
    RD.CONTOCDC, RD.CONTOCDCMOVCOLL,
    RD.CODDEPOSITO, RD.CODDEPOSITOCOLL,
    RD.CODDEPCOMP, RD.CODDEPCOMPCOLL,
    RD.VARIANTI, RD.ANNOTAZIONI,
    (CASE WHEN TD.CODCAMBIO=0 THEN RD.PREZZOUNITNETTO ELSE RD.PREZZOUNITNETTO/TD.VALCAMBIO/TC.CAMBIOEURO * TCAM.CAMBIOEURO END ) AS PREZZOUNITNETTO,
    (CASE WHEN TD.CODCAMBIO=0 THEN RD.PREZZOUNITLORDO ELSE RD.PREZZOUNITLORDO/TD.VALCAMBIO/TC.CAMBIOEURO * TCAM.CAMBIOEURO END ) AS PREZZOUNITLORDO,
    RD.PREZZOUNITNETTO AS PREZZOUNITNETTOVALUTA,
     RD.PREZZOUNITLORDO AS PREZZOUNITLORDOVALUTA,
     RD.PREZZOUNITNETTOEURO,
    RD.PREZZOUNITLORDOEURO,
    RD.UBICAZIONE,
    RD.UBICAZIONECOLL,
    RD.UBICAZIONECOMP,
    RD.UBICAZIONECOMPCOLL,
    (case when TD.CODCAMBIO=0 then TD.TOTPROVVAG1*TD.SEGNO else TD.TOTPROVVAG1/TD.VALCAMBIO/TC.CAMBIOEURO*TCAM.CAMBIOEURO*TD.SEGNO end) as TOTPROVVFINALEAG1,
    (case when TD.CODCAMBIO=0 then TD.TOTPROVVAG2*TD.SEGNO else TD.TOTPROVVAG2/TD.VALCAMBIO/TC.CAMBIOEURO*TCAM.CAMBIOEURO*TD.SEGNO end) as TOTPROVVFINALEAG2,
    (case when TD.CODCAMBIO=0 then TD.TOTPROVVAG3*TD.SEGNO else TD.TOTPROVVAG3/TD.VALCAMBIO/TC.CAMBIOEURO*TCAM.CAMBIOEURO*TD.SEGNO end) as TOTPROVVFINALEAG3,
    TD.TOTPROVVAG1*TD.SEGNO as TOTPROVVFINALEAG1VALUTA,
    TD.TOTPROVVAG2*TD.SEGNO as TOTPROVVFINALEAG2VALUTA,
    TD.TOTPROVVAG3*TD.SEGNO as TOTPROVVFINALEAG3VALUTA,
    TD.TOTPROVVAGEURO1*TD.SEGNO as TOTPROVVFINALEAG1EURO,
    TD.TOTPROVVAGEURO2*TD.SEGNO as TOTPROVVFINALEAG2EURO,
    TD.TOTPROVVAGEURO3*TD.SEGNO as TOTPROVVFINALEAG3EURO,
     (CASE WHEN TD.CODCAMBIO=0 THEN TD.TOTDOCUMENTO * TD.SEGNO ELSE TD.TOTDOCUMENTO/TD.VALCAMBIO/TC.CAMBIOEURO * TD.SEGNO * TCAM.CAMBIOEURO END) AS TOTDOCUMENTO,
     (CASE WHEN TD.CODCAMBIO=0 THEN TD.TOTIMPOSTA * TD.SEGNO ELSE TD.TOTIMPOSTA/TD.VALCAMBIO/TC.CAMBIOEURO * TD.SEGNO * TCAM.CAMBIOEURO END) AS TOTIMPOSTA,
    TD.TOTDOCUMENTOEURO * TD.SEGNO AS TOTDOCUMENTOEURO,
     TD.TOTIMPOSTAEURO * TD.SEGNO AS TOTIMPOSTAEURO,
     TD.TOTDOCUMENTO * TD.SEGNO AS TOTDOCVALUTA,
    TD.TOTIMPOSTA * TD.SEGNO AS TOTIMPOSTAVALUTA,
    RD.QTAGEST * TD.SEGNO AS QTAGEST,
    RD.QTAGESTRES * TD.SEGNO AS QTAGESTRES,
    RD.QTA1MAG * TD.SEGNO AS QTA1MAG,
    RD.QTA1MAGRES * TD.SEGNO AS QTA1MAGRES,
    RD.QTA2MAG * TD.SEGNO AS QTA2MAG,
    RD.QTA2MAGRES * TD.SEGNO AS QTA2MAGRES,
    RD.QTAPREZZO * TD.SEGNO AS QTAPREZZO,
    RD.QTAPREZZORES * TD.SEGNO AS QTAPREZZORES,
    RD.QTAGESTPRELEVATA * TD.SEGNO AS QTAGESTPRELEVATA,
    (CASE WHEN TD.CODCAMBIO=0 THEN RD.TOTLORDORIGA * TD.SEGNO ELSE RD.TOTLORDORIGA/TD.VALCAMBIO/TC.CAMBIOEURO * TCAM.CAMBIOEURO * TD.SEGNO END) AS TOTLORDORIGA,
    (CASE WHEN TD.CODCAMBIO=0 THEN RD.TOTNETTORIGA * TD.SEGNO ELSE RD.TOTNETTORIGA/TD.VALCAMBIO/TC.CAMBIOEURO * TCAM.CAMBIOEURO * TD.SEGNO END) AS TOTNETTORIGA,
    RD.TOTLORDORIGA * TD.SEGNO AS TOTLORDORIGAVALUTA,
     RD.TOTNETTORIGA * TD.SEGNO AS TOTNETTORIGAVALUTA,
     RD.TOTLORDORIGAEURO * TD.SEGNO AS TOTLORDORIGAEURO,
     RD.TOTNETTORIGAEURO * TD.SEGNO AS TOTNETTORIGAEURO,
    (CASE WHEN TD.CODCAMBIO=0 THEN RD.TOTPROVVAG1 * TD.SEGNO ELSE RD.TOTPROVVAG1/TD.VALCAMBIO/TC.CAMBIOEURO * TCAM.CAMBIOEURO * TD.SEGNO END) AS TOTPROVVAG1,
    (CASE WHEN TD.CODCAMBIO=0 THEN RD.TOTPROVVAG2 * TD.SEGNO ELSE RD.TOTPROVVAG2/TD.VALCAMBIO/TC.CAMBIOEURO * TCAM.CAMBIOEURO * TD.SEGNO END) AS TOTPROVVAG2,
    (CASE WHEN TD.CODCAMBIO=0 THEN RD.TOTPROVVAG3 * TD.SEGNO ELSE RD.TOTPROVVAG3/TD.VALCAMBIO/TC.CAMBIOEURO * TCAM.CAMBIOEURO * TD.SEGNO END) AS TOTPROVVAG3,
    RD.TOTPROVVAGEURO1 * TD.SEGNO AS TOTPROVVAG1EURO,
     RD.TOTPROVVAGEURO2 * TD.SEGNO AS TOTPROVVAG2EURO,
     RD.TOTPROVVAGEURO3 * TD.SEGNO AS TOTPROVVAG3EURO,
     RD.TOTPROVVAG1 * TD.SEGNO AS TOTPROVVAG1VALUTA,
     RD.TOTPROVVAG2 * TD.SEGNO AS TOTPROVVAG2VALUTA,
     RD.TOTPROVVAG3 * TD.SEGNO AS TOTPROVVAG3VALUTA,
     ANAGRAFICACF.DSCCONTO1,
    ANAGRAFICARISERVATICF.CODCATEGORIA AS CODCATEGORIACF,
    ANAGRAFICACF.CODNAZIONE ,
    ANAGRAFICARISERVATICF.CODSETTORE,
    ANAGRAFICARISERVATICF.CODZONA,
    ANAGRAFICAARTICOLI.GRUPPO,
    ANAGRAFICAARTICOLI.VARESPLICITE,
    ANAGRAFICAARTICOLI.CATEGORIA,
    ANAGRAFICAARTICOLI.CODCATEGORIASTAT,
    ANAGRAFICAARTICOLI.ARTTIPOLOGIA,
    ANAGRAFICAARTICOLI.CODICEPRIMARIO,
    ANAGRAFICAARTICOLI.DESCRIZIONE AS DSCART,
	ANAGRAFICAARTICOLI.AGGIORNAMAG,
    VISTAARTICOLIDSCBASE.CODARTICOLOBASE,
    VISTAARTICOLIDSCBASE.DSCARTICOLOBASE,
    TD.INCIDENZASCONTI,
    RD.RIFRELAZIONECF,
    (CASE WHEN TD.CODCAMBIO=0 THEN RD.TOTNETTORIGARES * TD.SEGNO ELSE RD.TOTNETTORIGARES/TD.VALCAMBIO/TC.CAMBIOEURO * TCAM.CAMBIOEURO * TD.SEGNO END) AS TOTNETTORIGARES,
    RD.TOTNETTORIGAEURORES * TD.SEGNO AS TOTNETTORIGAEURORES,
    RD.IDTESTARP,
    RD.IDRIGARP,
    RD.ANNOBOLLACLF,
    RD.NUMEROBOLLACLF,
    RD.OPERAZIONECLF,
    RD.STATOOPERAZIONECLF,
    RD.CAUSALEVERSAMENTOCLF,
    RD.CAUSALETRASFERIMENTOCLF,
    (case when TD.CODCAMBIO=0 then RD.IMPTOTPROVVRIGA else RD.IMPTOTPROVVRIGA/TD.VALCAMBIO/TC.CAMBIOEURO*TCAM.CAMBIOEURO end) as IMPTOTPROVVRIGALIT,
    RD.IMPTOTPROVVRIGA AS IMPTOTPROVVRIGAVALUTA,
    (case when TD.VALCAMBIO=0 then RD.IMPTOTPROVVRIGA else RD.IMPTOTPROVVRIGA/TD.VALCAMBIO end) AS IMPTOTPROVVRIGAEURO,
    TABNAZIONI.DESCRIZIONE AS DSCNAZIONE,
    ANAGRAFICARISERVATICF.STATOCONTABILITA+ANAGRAFICARISERVATICF.STATOMAGAZZINO+ANAGRAFICARISERVATICF.STATOORDINI+ANAGRAFICARISERVATICF.STATOBOLLE+ANAGRAFICARISERVATICF.STATOFATTURE+ANAGRAFICARISERVATICF.STATONOTEACCREDITO AS VALSTATOTOT,
    (CASE WHEN ANAGRAFICARISERVATICF.STATOCONTABILITA+ANAGRAFICARISERVATICF.STATOMAGAZZINO+ANAGRAFICARISERVATICF.STATOORDINI+ANAGRAFICARISERVATICF.STATOBOLLE+ANAGRAFICARISERVATICF.STATOFATTURE+ANAGRAFICARISERVATICF.STATONOTEACCREDITO>0 THEN 'BLOCCATO' ELSE '' END) AS STATOTOT,
    (SELECT DATARICH FROM EXTRARIGHEDOC WHERE IDTESTA=RD.IDTESTA AND IDRIGA=RD.IDRIGA) AS DATARICH,
    (SELECT DATACONF FROM EXTRARIGHEDOC WHERE IDTESTA=RD.IDTESTA AND IDRIGA=RD.IDRIGA) AS DATACONF
FROM
    ((((((TESTEDOCUMENTI TD INNER JOIN  RIGHEDOCUMENTI RD ON TD.PROGRESSIVO = RD.IDTESTA)
    INNER JOIN TABCAMBI AS TC ON TD.CODCAMBIO=TC.CODICE)
    INNER JOIN ANAGRAFICACF ON TD.CODCLIFOR = ANAGRAFICACF.CODCONTO)
    LEFT OUTER JOIN TABNAZIONI ON TABNAZIONI.CODICE=ANAGRAFICACF.CODNAZIONE)
    INNER JOIN PARAMETRIDOC ON TD.TIPODOC = PARAMETRIDOC.CODICE)
    INNER JOIN ANAGRAFICARISERVATICF ON ANAGRAFICACF.CODCONTO = ANAGRAFICARISERVATICF.CODCONTO)
    LEFT OUTER JOIN
    ((VISTAARTICOLIDSCBASE INNER JOIN ANAGRAFICAARTICOLI ON VISTAARTICOLIDSCBASE.Codice = ANAGRAFICAARTICOLI.CODICE)
    INNER JOIN VISTAARTICOLIUMBASE ON ANAGRAFICAARTICOLI.CODICE = VISTAARTICOLIUMBASE.codice)
    ON ANAGRAFICAARTICOLI.CODICE = RD.CODART,TABCAMBI TCAM, TABUTENTI
WHERE (TCAM.CODICE = 0)  and USERDB = USER_NAME() AND
    (ANAGRAFICARISERVATICF.ESERCIZIO = TD.ESERCIZIO)
    and (SUPERVISOR = 1 OR
    	(SUPERVISOR = 0 AND USERID IN (SELECT NOMEUTENTE FROM ACCESSIDOCUMENTI WHERE CODDOCUMENTO = TD.TIPODOC AND FLAGVISUALIZZA=1)))
    AND ((TD.CODCLIFOR=TABUTENTI.CODCLIFOR) OR (TABUTENTI.CODCLIFOR=''))
GO
GRANT SELECT ON MET_VISTADOCUMENTIBASE TO METODO98
GO

IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'MET_VISTADOCUMENTIRESBASE'))
DROP VIEW MET_VISTADOCUMENTIRESBASE
GO
CREATE VIEW MET_VISTADOCUMENTIRESBASE AS
SELECT TD.PROGRESSIVO AS IDTESTA, TD.ESERCIZIO,
	TD.TIPODOC, TD.NUMERODOC, TD.BIS, TD.DATADOC,
	TD.DOCCHIUSO, TD.BLOCCATO, TD.CODCLIFOR,
	TD.NUMRIFDOC, TD.DATARIFDOC, TD.CODAGENTE1, TD.CODAGENTE2,
	TD.CODAGENTE3, TD.CODBANCAINCASSO,
	TD.NUMDESTDIVERSAMERCI, TD.CODPAGAMENTO,
	TD.CODLINGUA, TD.CODCAMBIO, TD.VALCAMBIO,
	TD.SCONTOFINALE, TD.CODCFFATT,
	TD.PRCPROVVAG1, TD.PRCPROVVFINALEAG1,
	TD.PRCPROVVAG2, TD.PRCPROVVFINALEAG2,
	TD.PRCPROVVAG3, TD.PRCPROVVFINALEAG3,
	TD.ANNOTAZIONI AS ANNOTAZIONIPIEDE,
	PARAMETRIDOC.TIPO AS TIPOPAR,
	RD.IDRIGA AS PROGRIGADOC, RD.POSIZIONE,
	RD.TIPORIGA, RD.RIGACHIUSA, RD.RIGABLOCCATA,
	RD.CODART, RD.DESCRIZIONEART,
	RD.DATACONSEGNA, RD.NUMLISTINO, RD.UMGEST,
	VISTAARTICOLIUMBASE.UM1,
	VISTAARTICOLIUMBASE.UM2, RD.UMPREZZO,
	RD.SCONTORIGA, RD.SCONTIESTESI, RD.CODIVA,
	RD.PROVVAG1, RD.PROVVAG2, RD.PROVVAG3,
	RD.NUMCOLLI, RD.GENCONTROP, RD.NRRIFPARTITA,
	RD.PESONETTO, RD.PESOLORDO, RD.PESOIMBALLO,
	RD.SUPERFICIE, RD.VOLUME,RD.RIFCOMMCLI,
	RD.NOMECOMMESSAPROD, RD.VERSIONEDIBA,
	RD.CAUSALEMAG, RD.NRPEZZIIMBALLO,
	RD.CODIMBALLO, RD.NOMENCLCOMBINATA,
	RD.CONTOCDC, RD.CONTOCDCMOVCOLL,
	RD.CODDEPOSITO, RD.CODDEPOSITOCOLL,
	RD.CODDEPCOMP, RD.CODDEPCOMPCOLL,
	RD.VARIANTI, RD.ANNOTAZIONI,
	(CASE WHEN TD.CODCAMBIO=0 THEN RD.PREZZOUNITNETTO ELSE RD.PREZZOUNITNETTO/TD.VALCAMBIO/TC.CAMBIOEURO * TCAM.CAMBIOEURO END ) AS PREZZOUNITNETTO,
	(CASE WHEN TD.CODCAMBIO=0 THEN RD.PREZZOUNITLORDO ELSE RD.PREZZOUNITLORDO/TD.VALCAMBIO/TC.CAMBIOEURO * TCAM.CAMBIOEURO END ) AS PREZZOUNITLORDO,
	RD.PREZZOUNITNETTO AS PREZZOUNITNETTOVALUTA,
	RD.PREZZOUNITLORDO AS PREZZOUNITLORDOVALUTA,
	RD.PREZZOUNITNETTOEURO,
	RD.PREZZOUNITLORDOEURO,
	RD.UBICAZIONE,
	RD.UBICAZIONECOLL,
	RD.UBICAZIONECOMP,
	RD.UBICAZIONECOMPCOLL,
        (case when TD.CODCAMBIO=0 then TD.TOTPROVVAG1RES*TD.SEGNO else TD.TOTPROVVAG1RES/TD.VALCAMBIO/TC.CAMBIOEURO*TCAM.CAMBIOEURO*TD.SEGNO end) as TOTPROVVFINALEAG1,
        (case when TD.CODCAMBIO=0 then TD.TOTPROVVAG2RES*TD.SEGNO else TD.TOTPROVVAG2RES/TD.VALCAMBIO/TC.CAMBIOEURO*TCAM.CAMBIOEURO*TD.SEGNO end) as TOTPROVVFINALEAG2,
        (case when TD.CODCAMBIO=0 then TD.TOTPROVVAG3RES*TD.SEGNO else TD.TOTPROVVAG3RES/TD.VALCAMBIO/TC.CAMBIOEURO*TCAM.CAMBIOEURO*TD.SEGNO end) as TOTPROVVFINALEAG3,
        TD.TOTPROVVAG1RES*TD.SEGNO as TOTPROVVFINALEAG1VALUTA,
        TD.TOTPROVVAG2RES*TD.SEGNO as TOTPROVVFINALEAG2VALUTA,
        TD.TOTPROVVAG3RES*TD.SEGNO as TOTPROVVFINALEAG3VALUTA,
        TD.TOTPROVVAGEURO1RES*TD.SEGNO as TOTPROVVFINALEAG1EURO,
        TD.TOTPROVVAGEURO2RES*TD.SEGNO as TOTPROVVFINALEAG2EURO,
        TD.TOTPROVVAGEURO3RES*TD.SEGNO as TOTPROVVFINALEAG3EURO,
	(CASE WHEN TD.CODCAMBIO=0 THEN TD.TOTDOCUMENTORES * TD.SEGNO ELSE TD.TOTDOCUMENTORES/TD.VALCAMBIO/TC.CAMBIOEURO * TD.SEGNO * TCAM.CAMBIOEURO END) AS TOTDOCUMENTO,
	(CASE WHEN TD.CODCAMBIO=0 THEN TD.TOTIMPOSTARES * TD.SEGNO ELSE TD.TOTIMPOSTARES/TD.VALCAMBIO/TC.CAMBIOEURO * TD.SEGNO * TCAM.CAMBIOEURO END) AS TOTIMPOSTA,
	TD.TOTDOCUMENTOEURORES * TD.SEGNO AS TOTDOCUMENTOEURO,
	TD.TOTIMPOSTAEURORES * TD.SEGNO AS TOTIMPOSTAEURO,
	TD.TOTDOCUMENTORES * TD.SEGNO AS TOTDOCVALUTA,
	TD.TOTIMPOSTARES * TD.SEGNO AS TOTIMPOSTAVALUTA,
	RD.QTAGEST * TD.SEGNO AS QTAGEST,
	RD.QTAGESTRES * TD.SEGNO AS QTAGESTRES,
	RD.QTA1MAG * TD.SEGNO AS QTA1MAG,
	RD.QTA1MAGRES * TD.SEGNO AS QTA1MAGRES,
	RD.QTA2MAG * TD.SEGNO AS QTA2MAG,
	RD.QTA2MAGRES * TD.SEGNO AS QTA2MAGRES,
	RD.QTAPREZZO * TD.SEGNO AS QTAPREZZO,
	RD.QTAPREZZORES * TD.SEGNO AS QTAPREZZORES,
	RD.QTAGESTPRELEVATA * TD.SEGNO AS QTAGESTPRELEVATA,
	(CASE WHEN TD.CODCAMBIO=0 THEN RD.TOTLORDORIGARES * TD.SEGNO ELSE RD.TOTLORDORIGARES/TD.VALCAMBIO/TC.CAMBIOEURO * TCAM.CAMBIOEURO * TD.SEGNO END) AS TOTLORDORIGA,
	(CASE WHEN TD.CODCAMBIO=0 THEN RD.TOTNETTORIGARES * TD.SEGNO ELSE RD.TOTNETTORIGARES/TD.VALCAMBIO/TC.CAMBIOEURO * TCAM.CAMBIOEURO * TD.SEGNO END) AS TOTNETTORIGA,
	RD.TOTLORDORIGARES * TD.SEGNO AS TOTLORDORIGAVALUTA,
	RD.TOTNETTORIGARES * TD.SEGNO AS TOTNETTORIGAVALUTA,
	RD.TOTLORDORIGAEURORES * TD.SEGNO AS TOTLORDORIGAEURO,
	RD.TOTNETTORIGAEURORES * TD.SEGNO AS TOTNETTORIGAEURO,
	(CASE WHEN TD.CODCAMBIO=0 THEN RD.TOTPROVVAG1RES * TD.SEGNO ELSE RD.TOTPROVVAG1RES/TD.VALCAMBIO/TC.CAMBIOEURO * TCAM.CAMBIOEURO * TD.SEGNO END) AS TOTPROVVAG1,
	(CASE WHEN TD.CODCAMBIO=0 THEN RD.TOTPROVVAG2RES * TD.SEGNO ELSE RD.TOTPROVVAG2RES/TD.VALCAMBIO/TC.CAMBIOEURO * TCAM.CAMBIOEURO * TD.SEGNO END) AS TOTPROVVAG2,
	(CASE WHEN TD.CODCAMBIO=0 THEN RD.TOTPROVVAG3RES * TD.SEGNO ELSE RD.TOTPROVVAG3RES/TD.VALCAMBIO/TC.CAMBIOEURO * TCAM.CAMBIOEURO * TD.SEGNO END) AS TOTPROVVAG3,
	RD.TOTPROVVAGEURO1RES * TD.SEGNO AS TOTPROVVAG1EURO,
	RD.TOTPROVVAGEURO2RES * TD.SEGNO AS TOTPROVVAG2EURO,
	RD.TOTPROVVAGEURO3RES * TD.SEGNO AS TOTPROVVAG3EURO,
	RD.TOTPROVVAG1RES * TD.SEGNO AS TOTPROVVAG1VALUTA,
	RD.TOTPROVVAG2RES * TD.SEGNO AS TOTPROVVAG2VALUTA,
	RD.TOTPROVVAG3RES * TD.SEGNO AS TOTPROVVAG3VALUTA,
	ANAGRAFICACF.DSCCONTO1,
	ANAGRAFICARISERVATICF.CODCATEGORIA AS CODCATEGORIACF,
	ANAGRAFICACF.CODNAZIONE ,
	ANAGRAFICARISERVATICF.CODSETTORE,
	ANAGRAFICARISERVATICF.CODZONA,
	ANAGRAFICAARTICOLI.GRUPPO,
	ANAGRAFICAARTICOLI.VARESPLICITE,
	ANAGRAFICAARTICOLI.CATEGORIA,
	ANAGRAFICAARTICOLI.CODCATEGORIASTAT,
	ANAGRAFICAARTICOLI.ARTTIPOLOGIA,
	ANAGRAFICAARTICOLI.CODICEPRIMARIO,
	ANAGRAFICAARTICOLI.DESCRIZIONE AS DSCART,
        PARAMETRIDOC.TIPOCALCPROVVFINALI,
        TD.INCIDENZASCONTI,
	VISTAARTICOLIDSCBASE.CODARTICOLOBASE,
	VISTAARTICOLIDSCBASE.DSCARTICOLOBASE,
	RD.RIFRELAZIONECF,
    TABNAZIONI.DESCRIZIONE AS DSCNAZIONE,
    ANAGRAFICARISERVATICF.STATOCONTABILITA+ANAGRAFICARISERVATICF.STATOMAGAZZINO+ANAGRAFICARISERVATICF.STATOORDINI+ANAGRAFICARISERVATICF.STATOBOLLE+ANAGRAFICARISERVATICF.STATOFATTURE+ANAGRAFICARISERVATICF.STATONOTEACCREDITO AS VALSTATOTOT,
    (CASE WHEN ANAGRAFICARISERVATICF.STATOCONTABILITA+ANAGRAFICARISERVATICF.STATOMAGAZZINO+ANAGRAFICARISERVATICF.STATOORDINI+ANAGRAFICARISERVATICF.STATOBOLLE+ANAGRAFICARISERVATICF.STATOFATTURE+ANAGRAFICARISERVATICF.STATONOTEACCREDITO>0 THEN 'BLOCCATO' ELSE '' END) AS STATOTOT,
    (SELECT DATARICH FROM EXTRARIGHEDOC WHERE IDTESTA=RD.IDTESTA AND IDRIGA=RD.IDRIGA) AS DATARICH,
    (SELECT DATACONF FROM EXTRARIGHEDOC WHERE IDTESTA=RD.IDTESTA AND IDRIGA=RD.IDRIGA) AS DATACONF
FROM
	((((((TESTEDOCUMENTI TD INNER JOIN  RIGHEDOCUMENTI RD ON TD.PROGRESSIVO = RD.IDTESTA)
	INNER JOIN TABCAMBI AS TC ON TD.CODCAMBIO=TC.CODICE)
	INNER JOIN ANAGRAFICACF ON TD.CODCLIFOR = ANAGRAFICACF.CODCONTO)
	LEFT OUTER JOIN TABNAZIONI ON TABNAZIONI.CODICE=ANAGRAFICACF.CODNAZIONE)
	INNER JOIN PARAMETRIDOC ON TD.TIPODOC = PARAMETRIDOC.CODICE)
	INNER JOIN ANAGRAFICARISERVATICF ON ANAGRAFICACF.CODCONTO = ANAGRAFICARISERVATICF.CODCONTO)
	LEFT OUTER JOIN
	((VISTAARTICOLIDSCBASE INNER JOIN ANAGRAFICAARTICOLI ON VISTAARTICOLIDSCBASE.Codice = ANAGRAFICAARTICOLI.CODICE)
	INNER JOIN VISTAARTICOLIUMBASE ON ANAGRAFICAARTICOLI.CODICE = VISTAARTICOLIUMBASE.codice)
	ON ANAGRAFICAARTICOLI.CODICE = RD.CODART,
	TABCAMBI TCAM, TABUTENTI
WHERE
	(TCAM.CODICE = 0) AND USERDB = USER_NAME() AND (ANAGRAFICARISERVATICF.ESERCIZIO = TD.ESERCIZIO)
    AND (SUPERVISOR = 1 OR
    	(SUPERVISOR = 0 AND USERID IN (SELECT NOMEUTENTE FROM ACCESSIDOCUMENTI WHERE CODDOCUMENTO = TD.TIPODOC AND FLAGVISUALIZZA=1)))
    AND ((TD.CODCLIFOR=TABUTENTI.CODCLIFOR) OR (TABUTENTI.CODCLIFOR=''))
GO
GRANT SELECT ON MET_VISTADOCUMENTIRESBASE TO METODO98
GO

/* 07/02/2018 - Remmate le crezioni di queste viste, perchè rifatte successivamente, per riallineamento alla versione

IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'BRECEA_VISTACLIENTI'))
DROP VIEW BRECEA_VISTACLIENTI
GO
CREATE VIEW BRECEA_VISTACLIENTI AS
SELECT
	AC.*,
	TN.DESCRIZIONE AS DSCNAZIONE,
	ARCF.CODCONTOFATT,
	(CASE WHEN ARCF.STATOCONTABILITA+ARCF.STATOMAGAZZINO+ARCF.STATOORDINI+ARCF.STATOBOLLE+ARCF.STATOFATTURE+ARCF.STATONOTEACCREDITO>0 THEN 'BLOCCATO' ELSE '' END) AS STATOTOT,
	ARCF.STATOCONTABILITA+ARCF.STATOMAGAZZINO+ARCF.STATOORDINI+ARCF.STATOBOLLE+ARCF.STATOFATTURE+ARCF.STATONOTEACCREDITO AS VALSTATOTOT
FROM
	ANAGRAFICACF AC
	LEFT OUTER JOIN TABNAZIONI TN ON TN.CODICE=AC.CODNAZIONE
	LEFT OUTER JOIN ANAGRAFICARISERVATICF ARCF ON ARCF.CODCONTO=AC.CODCONTO AND ARCF.ESERCIZIO=(SELECT ESERCIZIOATTIVO FROM TABUTENTI WHERE USERDB = USER_NAME())
WHERE
	AC.TIPOCONTO='C'
GO
GRANT SELECT ON BRECEA_VISTACLIENTI TO METODO98
GO

IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'BRECEA_VISTACLIFOR'))
DROP VIEW BRECEA_VISTACLIFOR
GO
CREATE VIEW BRECEA_VISTACLIFOR AS
SELECT
	AF.TIPOCONTO, AF.CODCONTO, AF.DSCCONTO1, AF.DSCCONTO2, AF.CODMASTRO,
	AF.INDIRIZZO, AF.CAP, AF.LOCALITA, AF.PROVINCIA, AF.TELEFONO, AF.FAX, AF.TELEX,
	AF.CODFISCALE, AF.PARTITAIVA, AF.CODNAZIONE, AF.CODICEISO, AF.CODLINGUA, AF.NOTE,
	AF.UTENTEMODIFICA, AF.DATAMODIFICA, RF.ESERCIZIO, RF.CODSETTORE, RF.CODZONA,
	RF.CODCATEGORIA, RF.CODSPED, RF.PRCTRASPORTO, RF.INOLTROTRASP, RF.CODPAG,
	RF.MESEESCL1, RF.GGESCL1, RF.MESEESCL2, RF.GGESCL2,
	(SELECT CAB FROM BANCAAPPCF WHERE CODCONTO=RF.CODCONTO AND CODICE=BANCAANAGR) AS CAB,
	(SELECT ABI FROM BANCAAPPCF WHERE CODCONTO=RF.CODCONTO AND CODICE=BANCAANAGR) AS ABI,
	(SELECT CONTOCORRENTE FROM BANCAAPPCF WHERE CODCONTO=RF.CODCONTO AND CODICE=BANCAANAGR) AS CCDEBITORE,
	RF.CODBANCA,
	RF.BANCAANAGR, RF.CODAGENTE1, RF.CODAGENTE2, RF.CODAGENTE3, RF.PROVV1, RF.PROVV2,
	RF.PROVV3, RF.SCONTO1, RF.CODIVA, RF.DICHESIVA, RF.LISTINO, RF.CODCAMBIO,
	RF.DESTDIVMERCI, RF.DESTDIVDOCUMENTI, RF.SPESEDOCUM, RF.SPESEEFFETTO,
	RF.SPESETRASPORTO, RF.SPESEIMBALLO, RF.FIDO, RF.FIDOEURO, RF.PORTO,
	RF.TRASPACURA, RF.APPLSCONTORIGA, RF.APPLSCONTOFINALE, RF.CODCONTOFATT,
	RF.FATTFINEMESE, RF.NONRAGGRUPPDOC, RF.CODDEPOSITO,
	RF.CODDEPOSITOCOLL, RF.CODDEPCOMP, RF.CODDEPCOMPCOLL, RF.RIVIVAOMAGGI,
	RF.NRCONTROPCONT, RF.USAPRZPRVPART, RF.CODDEBITORE, RF.NOTE1,
	RF.STATOCONTABILITA, RF.STATOMAGAZZINO,RF.STATOORDINI, RF.STATOBOLLE, RF.STATOFATTURE, RF.STATONOTEACCREDITO, RF.STATOALTRO,
	RF.CODGRUPPOPREZZIPART, RF.CODGRUPPOPROVPART,RF.RAGGSCADENZE,
	TN.DESCRIZIONE AS DSCNAZIONE,AF.FLGBLACKLIST,
	(CASE WHEN RF.STATOCONTABILITA+RF.STATOMAGAZZINO+RF.STATOORDINI+RF.STATOBOLLE+RF.STATOFATTURE+RF.STATONOTEACCREDITO>0 THEN 'BLOCCATO' ELSE '' END) AS STATOTOT,
	RF.STATOCONTABILITA+RF.STATOMAGAZZINO+RF.STATOORDINI+RF.STATOBOLLE+RF.STATOFATTURE+RF.STATONOTEACCREDITO AS VALSTATOTOT
FROM
	ANAGRAFICACF AF
	LEFT OUTER JOIN TABNAZIONI TN ON TN.CODICE=AF.CODNAZIONE
	LEFT OUTER JOIN ANAGRAFICARISERVATICF RF ON RF.CODCONTO=AF.CODCONTO AND RF.ESERCIZIO=(SELECT ESERCIZIOATTIVO FROM TABUTENTI WHERE USERDB = USER_NAME())
GO
GRANT  SELECT  ON BRECEA_VISTACLIFOR  TO Metodo98
GO

IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'BRECEA_VISTAGENERICI'))
DROP VIEW BRECEA_VISTAGENERICI
GO
CREATE VIEW BRECEA_VISTAGENERICI AS
	SELECT ANAGRAFICAGENERICI.CODCONTO, ANAGRAFICAGENERICI.DSCCONTO1,
	ANAGRAFICAGENERICI.CODMASTRO, ANAGRAFICAGENERICI.DATAINIVALIDITA,
	ANAGRAFICAGENERICI.DATAFINEVALIDITA, ANAGRAFICAGENERICI.NOTE,
	ANAGRAFICAGENERICI.NOTE1,'' AS CODFISCALE,'' AS PARTITAIVA,
	'' AS CODBANCA,'' AS CODAGENTE1,'' AS CODAGENTE2,'' AS CODAGENTE3,0 AS CODCAMBIO,'' AS CODPAG,
	ANAGRAFICAGENERICI.GESTPARTITE,
	ANAGRAFICAGENERICI.CTRLQUADCDC,
	ANAGRAFICAGENERICI.UTENTEMODIFICA,
	ANAGRAFICAGENERICI.DATAMODIFICA,
	'' AS DSCNAZIONE,
	'' AS STATOTOT,
	0 AS VALSTATOTOT
FROM
	ANAGRAFICAGENERICI, TABESERCIZI
WHERE
	ANAGRAFICAGENERICI.DATAFINEVALIDITA >= TABESERCIZI.DATAINICONT
	AND ANAGRAFICAGENERICI.DATAINIVALIDITA <= TABESERCIZI.DATAFINECONT
	AND TABESERCIZI.CODICE = (SELECT ESERCIZIOATTIVO FROM TABUTENTI WHERE USERDB=USER_NAME())

GO
GRANT SELECT ON BRECEA_VISTAGENERICI TO Metodo98
GO

*/

-----------------------------------------------------------------
-- Fine aggiunte del 26/05/2009 - DANIELE                      --
-----------------------------------------------------------------



------------------------------------------------------------------------------
-- Aggiunte del 03/06/2009 - RGABRIELE										--
------------------------------------------------------------------------------
-- VISTA PER LEGAME DOCUMENTI DI INVIO IN C/LAVORAZIONE E ORDINE C/LAV FASE --
------------------------------------------------------------------------------

IF EXISTS(SELECT 1 FROM SysObjects WHERE ID=object_id('BRECEA_VISTA_LEGAMI_OCL_DCL') AND Type='V')
	DROP VIEW BRECEA_VISTA_LEGAMI_OCL_DCL
GO


CREATE VIEW DBO.BRECEA_VISTA_LEGAMI_OCL_DCL
AS
SELECT RDOCL.IDTESTA AS IDTESTAOCL, RDOCL.IDRIGA AS IDRIGAOCL, RDDCL.IDTESTA AS IDTESTADCL, RDDCL.IDRIGA AS IDRIGADCL
FROM RIGHEDOCUMENTI RDOCL
LEFT OUTER JOIN TABLEGAMIPRODUZIONE TLP8
	ON RDOCL.IDTESTA=TLP8.RIFTESTA
	AND RDOCL.IDRIGA=TLP8.RIFRIGA
	AND TLP8.TIPOLEGAME=8
LEFT OUTER JOIN VISTACOMPONENTIFASE CF
	ON TLP8.IDTESTA=CF.PROGRESSIVO
	AND TLP8.IDRIGA=CF.NUMEROFASE
LEFT OUTER JOIN TABLEGAMIPRODUZIONE TLP4
	ON CF.IDTESTACOMM=TLP4.IDTESTA
	AND CF.IDRIGACOMM=TLP4.IDRIGA
	AND CF.IDRIGADBA=TLP4.IDIMPEGNO
	AND TLP4.TIPOLEGAME=4
LEFT OUTER JOIN RIGHEDOCUMENTI RDDCL
	ON TLP4.RIFTESTA=RDDCL.IDTESTA
	AND TLP4.RIFRIGA=RDDCL.IDRIGA
WHERE RDDCL.IDTESTA IS NOT NULL

	UNION

SELECT RDOCL.IDTESTA AS IDTESTAOCL, RDOCL.IDRIGA AS IDRIGAOCL, RDDCL.IDTESTA AS IDTESTADCL, RDDCL.IDRIGA AS IDRIGADCL
FROM RIGHEDOCUMENTI RDOCL
LEFT OUTER JOIN TABLEGAMIPRODUZIONE TLP8
	ON RDOCL.IDTESTA=TLP8.RIFTESTA
	AND RDOCL.IDRIGA=TLP8.RIFRIGA
	AND TLP8.TIPOLEGAME=8
LEFT OUTER JOIN TABLEGAMIPRODUZIONE TLP9
	ON TLP9.IDTESTA=TLP8.IDTESTA
	AND TLP9.IDRIGA=TLP8.IDRIGA
	AND TLP9.TIPOLEGAME=9
LEFT OUTER JOIN RIGHEDOCUMENTI RDDCL
	ON TLP9.RIFTESTA=RDDCL.IDTESTA
	AND TLP9.RIFRIGA=RDDCL.IDRIGA
WHERE RDDCL.IDTESTA IS NOT NULL
GO

GRANT SELECT ON DBO.BRECEA_VISTA_LEGAMI_OCL_DCL TO METODO98
GO
-----------------------------------------------------------------
-- Fine aggiunte del 03/06/2009 - RGABRIELE                    --
-----------------------------------------------------------------



-----------------------------------------------------------------
-- Aggiunte del 03/06/2009 - DANIELE                           --
-----------------------------------------------------------------
-- PERS VARIE						       --
-----------------------------------------------------------------
IF NOT EXISTS (SELECT 1 FROM SYSOBJECTS WHERE ID = OBJECT_ID('BCEA_TABTIPITRASPORTO') AND TYPE = 'U')
CREATE TABLE BCEA_TABTIPITRASPORTO
(
	DESCRIZIONE VARCHAR (200) NOT NULL ,
	UTENTEMODIFICA VARCHAR(25) NOT NULL,
	DATAMODIFICA DATETIME NOT NULL
	PRIMARY KEY(DESCRIZIONE)
)
GO
GRANT  REFERENCES ,  SELECT ,  UPDATE ,  INSERT ,  DELETE  ON BCEA_TABTIPITRASPORTO  TO METODO98
GO

IF NOT EXISTS (SELECT 1 FROM SysColumns WHERE SysColumns.ID=(SELECT ID FROM SysObjects WHERE SysObjects.ID=object_id('EXTRARIGHEDOC') AND SysObjects.Type='U') AND SysColumns.Name='DSCTIPITRASPORTO')
	ALTER TABLE EXTRARIGHEDOC ADD DSCTIPITRASPORTO VARCHAR(200) NOT NULL DEFAULT ''
GO
IF NOT EXISTS (SELECT 1 FROM SysColumns WHERE SysColumns.ID=(SELECT ID FROM SysObjects WHERE SysObjects.ID=object_id('EXTRARIGHEDOC') AND SysObjects.Type='U') AND SysColumns.Name='NOMEMACCHINA')
	ALTER TABLE EXTRARIGHEDOC ADD NOMEMACCHINA VARCHAR(25) NOT NULL DEFAULT ''
GO
IF NOT EXISTS (SELECT 1 FROM SysColumns WHERE SysColumns.ID=(SELECT ID FROM SysObjects WHERE SysObjects.ID=object_id('EXTRARIGHEDOC') AND SysObjects.Type='U') AND SysColumns.Name='NUMORDINE')
	ALTER TABLE EXTRARIGHEDOC ADD NUMORDINE VARCHAR(25) NOT NULL DEFAULT ''
GO

IF NOT EXISTS (SELECT 1 FROM SysColumns WHERE SysColumns.ID=(SELECT ID FROM SysObjects WHERE SysObjects.ID=object_id('EXTRATESTEDOC') AND SysObjects.Type='U') AND SysColumns.Name='ANTICIPOVIAGGIO')
	ALTER TABLE EXTRATESTEDOC ADD ANTICIPOVIAGGIO DECIMAL(19,6) NOT NULL DEFAULT 0
GO
IF NOT EXISTS (SELECT 1 FROM SysColumns WHERE SysColumns.ID=(SELECT ID FROM SysObjects WHERE SysObjects.ID=object_id('EXTRATESTEDOC') AND SysObjects.Type='U') AND SysColumns.Name='RESOVIAGGIO')
	ALTER TABLE EXTRATESTEDOC ADD RESOVIAGGIO DECIMAL(19,6) NOT NULL DEFAULT 0
GO
IF NOT EXISTS (SELECT 1 FROM SysColumns WHERE SysColumns.ID=(SELECT ID FROM SysObjects WHERE SysObjects.ID=object_id('EXTRATESTEDOC') AND SysObjects.Type='U') AND SysColumns.Name='DIPENDENTE')
	ALTER TABLE EXTRATESTEDOC ADD DIPENDENTE VARCHAR(40) NOT NULL DEFAULT ''
GO

-----------------------------------------------------------------
-- PROCEDURA PER AGGIORNAMENTO STATO CLIENTI		       --
-----------------------------------------------------------------
IF EXISTS(SELECT 1 FROM SysObjects WHERE ID=object_id('BRECEA_VISTA_GIORNISCADENZA') AND Type='V')
	DROP VIEW BRECEA_VISTA_GIORNISCADENZA
GO
CREATE VIEW BRECEA_VISTA_GIORNISCADENZA
AS
SELECT
	CODCLIFOR,
	DATEDIFF(DD,DATASCADENZA,GETDATE()) AS GIORNI,
	ESITO
FROM
	TABSCADENZE
WHERE
	LEFT(CODCLIFOR,1)='C'
	AND ((ESITO IN (0,1) AND DATEDIFF(DD,DATASCADENZA,GETDATE())>60) OR (ESITO=3))
	AND IMPORTOSCEURO>50
GO
GRANT SELECT ON BRECEA_VISTA_GIORNISCADENZA TO METODO98
GO

IF OBJECT_ID ( 'AGGIORNASTATOCLIENTI', 'P' ) IS NOT NULL
    DROP PROCEDURE AGGIORNASTATOCLIENTI
GO
CREATE PROCEDURE AGGIORNASTATOCLIENTI AS
UPDATE ANAGRAFICARISERVATICF SET STATOORDINI=0,STATOBOLLE=0 WHERE ESERCIZIO=YEAR(GETDATE()) AND LEFT(CODCONTO,1)='C'

UPDATE ANAGRAFICARISERVATICF SET STATOORDINI=2,STATOBOLLE=2 WHERE ESERCIZIO=YEAR(GETDATE()) AND LEFT(CODCONTO,1)='C' AND CODCONTO IN
(SELECT DISTINCT CODCLIFOR FROM BRECEA_VISTA_GIORNISCADENZA)
GO
GRANT EXECUTE ON AGGIORNASTATOCLIENTI TO METODO98
GO
-----------------------------------------------------------------
-- Fine aggiunte del 03/06/2009 - DANIELE                      --
-----------------------------------------------------------------



-----------------------------------------------------------------
-- Aggiunte del 12/06/2009 - DANIELE                           --
-----------------------------------------------------------------
-- VSIONE FOGLI VIAGGIO					       --
-----------------------------------------------------------------
IF EXISTS(SELECT 1 FROM SYSOBJECTS WHERE ID=OBJECT_ID('BCEA_VISTADOCUMENTIBASE_FVA') AND TYPE='V')
	DROP VIEW BCEA_VISTADOCUMENTIBASE_FVA
GO
CREATE VIEW BCEA_VISTADOCUMENTIBASE_FVA AS
SELECT
	VDB.TIPODOC,
	VDB.NUMERODOC,
	VDB.DATADOC,
	VDB.CODCLIFOR,
	VDB.DSCCONTO1,
	VDB.CODICEPRIMARIO,
	VDB.DSCART,
	VDB.DATARICH,
	VDB.DATACONF
FROM
	MET_VISTADOCUMENTIBASE VDB
WHERE
	VDB.TIPODOC='FVA'
GROUP BY
	VDB.TIPODOC,
	VDB.NUMERODOC,
	VDB.DATADOC,
	VDB.CODCLIFOR,
	VDB.DSCCONTO1,
	VDB.CODICEPRIMARIO,
	VDB.DSCART,
	VDB.DATARICH,
	VDB.DATACONF
GO
GRANT SELECT ON BCEA_VISTADOCUMENTIBASE_FVA TO METODO98
GO
-----------------------------------------------------------------
-- IMPORTANTISSIMO
-- RILANCIARE ANCHE LA VISTA MET_VISTADOCUMENTIBASE
-- SOLO LA PRIMA VOLTA
-----------------------------------------------------------------
-- Fine aggiunte del 12/06/2009 - DANIELE                      --
-----------------------------------------------------------------



-----------------------------------------------------------------
-- Aggiunte del 22/06/2009 - DANIELE                           --
-----------------------------------------------------------------
-- PERS VARIE						       --
-----------------------------------------------------------------
IF NOT EXISTS (SELECT 1 FROM SysColumns WHERE SysColumns.ID=(SELECT ID FROM SysObjects WHERE ID=object_id('ExtraParDoc') AND SysObjects.XType='U') AND SysColumns.Name='FOGLIOVIAGGIO')
	ALTER TABLE EXTRAPARDOC ADD FOGLIOVIAGGIO smallint DEFAULT 0
GO
-----------------------------------------------------------------
-- Fine aggiunte del 22/06/2009 - DANIELE                      --
-----------------------------------------------------------------



-----------------------------------------------------------------
-- Aggiunte del 29/06/2009 - DANIELE                           --
-----------------------------------------------------------------
-- PERS MISSIONI					       --
-----------------------------------------------------------------
IF EXISTS (SELECT 1 FROM SYSOBJECTS WHERE ID = OBJECT_ID('MET_VISTAGIACENZEDEP') AND TYPE = 'V')
DROP VIEW MET_VISTAGIACENZEDEP
GO
CREATE VIEW MET_VISTAGIACENZEDEP AS
SELECT
	CODART,
	CODDEPOSITO,
	SUM(CARICO)+SUM(RESODASCARICO)-SUM(SCARICO)-SUM(RESODACARICO) AS GIACENZA
FROM
	VISTAGIACENZETOT
WHERE
	CODDEPOSITO='100'
GROUP BY
	CODART,
	CODDEPOSITO
GO
GRANT SELECT ON MET_VISTAGIACENZEDEP TO  METODO98
GO

IF EXISTS (SELECT 1 FROM SYSOBJECTS WHERE ID = OBJECT_ID('MET_UBICAZIONIDEP020') AND TYPE = 'V')
DROP VIEW MET_UBICAZIONIDEP020
GO
CREATE VIEW MET_UBICAZIONIDEP020 AS
SELECT
	*
FROM
	UBICAZIONIARTICOLI
WHERE
	CODDEPOSITO='020'
GO
GRANT SELECT ON MET_UBICAZIONIDEP020 TO  METODO98
GO

-----------------------------------------------------------------
-- Fine aggiunte del 29/06/2009 - DANIELE                      --
-----------------------------------------------------------------



---------------------------------------------
-- Aggiunte del 07/07/2009 - Gildo         --
---------------------------------------------
-- Campi extra cod. art. e nome produttore --
---------------------------------------------

	IF NOT EXISTS (SELECT 1 FROM SysColumns WHERE SysColumns.ID=(SELECT ID FROM SysObjects WHERE SysObjects.ID=object_id('ExtraMag') AND SysObjects.XType='U') AND SysColumns.Name='CodArtProd')
		ALTER TABLE ExtraMag ADD
			CodArtProd					varchar(25)		NULL
	GO

	IF NOT EXISTS (SELECT 1 FROM SysColumns WHERE SysColumns.ID=(SELECT ID FROM SysObjects WHERE SysObjects.ID=object_id('ExtraMag') AND SysObjects.XType='U') AND SysColumns.Name='NomeProd')
		ALTER TABLE ExtraMag ADD
			NomeProd					varchar(80)		NULL
	GO

---------------------------------------------
-- Fine aggiunte del 07/07/2009 - Gildo    --
---------------------------------------------



-----------------------------------------------------------------
-- Aggiunte del 07/09/2009 - DANIELE                           --
-----------------------------------------------------------------
-- PERS MISSIONI					       --
-----------------------------------------------------------------
IF EXISTS (SELECT 1 FROM SYSOBJECTS WHERE ID = OBJECT_ID('MET_VISTA_RIGHEDOCEVASIMISS') AND TYPE = 'V')
	DROP VIEW MET_VISTA_RIGHEDOCEVASIMISS
GO
CREATE VIEW MET_VISTA_RIGHEDOCEVASIMISS AS
SELECT	DISTINCT
	TDM.PROGRESSIVO AS IDTESTA,
	(CASE WHEN ISNULL(RDM.IDRIGA,0)=0 THEN 0 ELSE RDM.IDRIGA END) AS IDRIGA,
	TDM.RIFPROGRTESTAMISS AS IDMISSIONE,
	TDM.PROGRESSDOC AS IDTESTADOC,
	RD.IDRIGA AS IDRIGADOC,
	(CASE WHEN ISNULL(RDM.IDRIGA, 0) = 0 THEN 'I' ELSE 'E' END) AS STATO,
	(CASE WHEN ISNULL(RDM.RIGACHIUSA,0)=0 THEN 0 ELSE RDM.RIGACHIUSA END) AS RIGACHIUSA,
	(CASE WHEN RDM.CODART IS NULL THEN RD.CODART ELSE RDM.CODART END) AS CODART,
	(CASE WHEN RDM.DESCART IS NULL THEN RD.DESCRIZIONEART ELSE RDM.DESCART END) AS DESCART,
	(CASE WHEN RDM.UM IS NULL THEN RD.UMGEST ELSE RDM.UM END) AS UM,
	(CASE WHEN ISNULL(RDM.QTAORD,0)=0 THEN RD.QTAGEST ELSE RDM.QTAORD END) AS QTAORD,
	(CASE WHEN ISNULL(RDM.QTARESIDUA,0)=0 THEN RD.QTAGESTRES ELSE RDM.QTARESIDUA END) AS QTARESIDUA,
	(CASE WHEN ISNULL(RDM.QTACONSEG,0)=0 THEN 0 ELSE RDM.QTACONSEG END) AS QTACONSEG,
	(CASE WHEN RDM.NRRIFPARTITA IS NULL THEN RD.NRRIFPARTITA ELSE RDM.NRRIFPARTITA END) AS NRRIFPARTITA,
	(CASE WHEN RDM.DATACONSEGNA IS NULL THEN RD.DATACONSEGNA ELSE RDM.DATACONSEGNA END) AS DATACONSEGNA,
	(CASE WHEN ISNULL(RDM.IDRIGAPADRE,0)=0 THEN 0 ELSE RDM.IDRIGAPADRE END) AS IDRIGAPADRE,
	(CASE WHEN RDM.CODUBICAZIONE IS NULL THEN RD.UBICAZIONE ELSE RDM.CODUBICAZIONE END) AS CODUBICAZIONE,
	(CASE WHEN ISNULL(RDM.TIPOUBICAZIONE,0)=0 THEN 0 ELSE RDM.TIPOUBICAZIONE END) AS TIPOUBICAZIONE,
	(CASE WHEN RDM.UTENTEMODIFICA IS NULL THEN 'INEVASO' ELSE RDM.UTENTEMODIFICA END) AS UTENTEMODIFCA,
	(CASE WHEN RDM.DATAMODIFICA IS NULL THEN GETDATE() ELSE RDM.DATAMODIFICA END) AS DATAMODIFICA,
	(CASE WHEN RDM.UMPREZZO IS NULL THEN RD.UMPREZZO ELSE RDM.UMPREZZO END) AS UMPREZZO,
	(CASE WHEN ISNULL(RDM.QTAPREZZOCONS,0)=0 THEN 0 ELSE RDM.QTAPREZZOCONS END) AS QTAPREZZOCONS,
	(CASE WHEN ISNULL(RDM.GIACENZA,0)=0 THEN 0 ELSE RDM.GIACENZA END) AS GIACENZA,
	(CASE WHEN ISNULL(RDM.CHKSEL,0)=0 THEN 0 ELSE RDM.CHKSEL END) AS CHKSEL
FROM
	TABTESTEDOCUMENTIMISS AS TDM
	LEFT OUTER JOIN RIGHEDOCUMENTI RD ON TDM.PROGRESSDOC = RD.IDTESTA
	LEFT OUTER JOIN TABRIGHEDOCUMENTIMISS AS RDM ON TDM.PROGRESSIVO = RDM.IDTESTA AND RD.IDRIGA = RDM.IDRIGADOC
WHERE
	(CASE WHEN RDM.CODART IS NULL THEN RD.CODART ELSE RDM.CODART END)<>''
GO
GRANT SELECT ON MET_VISTA_RIGHEDOCEVASIMISS TO METODO98
GO
-----------------------------------------------------------------
-- Fine aggiunte del 07/09/2009 - DANIELE                      --
-----------------------------------------------------------------



----------------------------------------------
-- Aggiunte del 31/12/2009 - RGabriele      --
----------------------------------------------------
-- Funzioni per stampe valorizzazioni rettifiche  --
----------------------------------------------------

/*FUNZIONE PER VALORIZZAZIONE ARTICOLO*/
IF EXISTS(SELECT 1 FROM SysObjects WHERE ID=object_id('BCEA_VALARTICOLO') AND Type='FN')
	DROP FUNCTION BCEA_VALARTICOLO
GO

CREATE FUNCTION [dbo].[BCEA_VALARTICOLO](@CODART AS nVARCHAR(50), @TIPOVAL AS INT, @NRLISTINO AS INT, @TIPOUM AS INT, @ESERCIZIO AS INT)
	RETURNS DECIMAL(19,6)
AS
	BEGIN
		DECLARE @VALART AS DECIMAL(19,6)
		DECLARE @PREZZO AS DECIMAL(19,4)
		DECLARE @UM AS VARCHAR(3)

		IF @TIPOUM=0
			BEGIN
				SET @TIPOUM=1
			END
		ELSE
			BEGIN
				SET @TIPOUM=2
			END

		IF @TIPOVAL=0 --UPA
			BEGIN
				-- DETERMINO L'UM PER LA QUALE VALORIZZARE
				DECLARE CUR_UM CURSOR SCROLL SCROLL_LOCKS FOR
				SELECT UM FROM ARTICOLIUMPREFERITE WHERE TIPOUM=@TIPOUM AND CODART=@CODART
				OPEN CUR_UM
					FETCH NEXT FROM CUR_UM INTO @UM
				CLOSE CUR_UM
				DEALLOCATE CUR_UM

				-- DETERMINO IL COSTO ULTIMO
				DECLARE CUR_STORICO_PREZZI CURSOR SCROLL SCROLL_LOCKS FOR
					SELECT TOP 1 ROUND((PRZ.PREZZOEURO*FC.FATTORE),4) AS PREZZO
					FROM STORICOPREZZIARTICOLO PRZ LEFT OUTER JOIN ARTICOLIFATTORICONVERSIONE FC
						ON FC.CODART=PRZ.CODARTICOLO AND FC.UM2=PRZ.UM
					WHERE PRZ.CODARTICOLO=@CODART
						AND PRZ.TIPOPREZZO = 'F'
						AND PRZ.ULTIMO=1
						AND FC.UM1=@UM
					ORDER BY DATA DESC
				OPEN CUR_STORICO_PREZZI
					FETCH NEXT FROM CUR_STORICO_PREZZI INTO @VALART
					IF @@FETCH_STATUS<>0 SELECT @VALART = 0

  				CLOSE CUR_STORICO_PREZZI
				DEALLOCATE CUR_STORICO_PREZZI
			END
		ELSE
			BEGIN
				IF @TIPOVAL=1 --PMP
					BEGIN
						IF @TIPOUM=1 --PRIMA UM
							BEGIN
								SELECT @VALART=(CASE WHEN SUM(QTACARICO)<>0 THEN  ROUND(SUM(VALORECARICOEURO)/SUM(QTACARICO),4) ELSE 0 END)
								FROM VISTAINVENTARIO
								WHERE ESERCIZIO=@ESERCIZIO AND CODART=@CODART
							END
						ELSE --SECONDA UM
							BEGIN
								SELECT @VALART=(CASE WHEN SUM(QTACARICO2UM)<>0 THEN ROUND(SUM(VALORECARICOEURO)/SUM(QTACARICO2UM),4) ELSE 0 END)
								FROM VISTAINVENTARIO
								WHERE ESERCIZIO=@ESERCIZIO AND CODART=@CODART
							END
					END
				ELSE --TIPOVAL=2 LISTINO
					BEGIN

						-- DETERMINO L'UM CON CUI VALORIZZARE
						DECLARE CUR_UM CURSOR SCROLL SCROLL_LOCKS FOR
						SELECT UM FROM ARTICOLIUMPREFERITE WHERE TIPOUM=@TIPOUM AND CODART=@CODART
						OPEN CUR_UM
							FETCH NEXT FROM CUR_UM INTO @UM
						CLOSE CUR_UM
						DEALLOCATE CUR_UM

						-- DETERMINO IL COSTO LISTINO
						SELECT @VALART=ROUND((LST.PREZZOEURO*FC.FATTORE),4)
						FROM LISTINIARTICOLI LST LEFT OUTER JOIN ARTICOLIFATTORICONVERSIONE FC
							ON FC.CODART=LST.CODART AND FC.UM2=LST.UM
						WHERE LST.CODART=@CODART
							AND LST.NRLISTINO = @NRLISTINO
							AND FC.UM1=@UM
					END

			END

		RETURN @VALART
	END
GO

GRANT EXECUTE ON [dbo].[BCEA_VALARTICOLO] TO METODO98
GO

/*TABELLA TEMPORANEA PER STAMPA RETTIFICHE VALORIZZATE*/
IF NOT EXISTS (SELECT 1 FROM SYSOBJECTS WHERE ID = OBJECT_ID('BCEA_TEMP_STPVALRETTINV') AND TYPE = 'U')
CREATE TABLE [dbo].[BCEA_TEMP_STPVALRETTINV](
	[NRTERMINALE] [smallint] NOT NULL,
	[NOMEIMPOSTAZIONE] [varchar](50) NOT NULL,
	[CRITERIOVAL] INT NOT NULL,
	[NRLISTINO] INT NULL,
	[UMVAL] SMALLINT NULL,
	[ESERCIZIO] SMALLINT NULL,
	[UTENTEMODIFICA] [varchar](25) NOT NULL,
	[DATAMODIFICA] [datetime] NOT NULL,
 CONSTRAINT [PK_BCEA_TEMP_STPVALRETTINV] PRIMARY KEY CLUSTERED
(
	[NRTERMINALE] ASC
) ON [PRIMARY]
) ON [PRIMARY]

GO

GRANT INSERT, DELETE, UPDATE, SELECT ON [dbo].[BCEA_TEMP_STPVALRETTINV] TO METODO98
GO

/*FUNZIONE PER CALCOLO GIACENZA ARTICOLO*/
IF EXISTS(SELECT 1 FROM SysObjects WHERE ID=object_id('BCEA_GIACARTICOLOUMBASE') AND Type='FN')
	DROP FUNCTION BCEA_GIACARTICOLOUMBASE
GO

CREATE FUNCTION [dbo].[BCEA_GIACARTICOLOUMBASE](@CODART AS nVARCHAR(50),@DEPOSITO AS VARCHAR(10), @DATAINV DATETIME)
	RETURNS DECIMAL(19,6)
AS
	BEGIN
		DECLARE @VALART AS DECIMAL(19,6)

		SELECT @VALART=isnull(SUM(Carico - Scarico + ResoDaScarico - ResoDaCarico),0)
		FROM VISTAINVENTARIO
		WHERE CODART = @CODART AND CODDEPOSITO= @DEPOSITO AND DATAMOV <= @DATAINV

		RETURN @VALART
	END
GO

GRANT EXECUTE ON [dbo].[BCEA_GIACARTICOLOUMBASE] TO METODO98
GO

------------------------------------------------------
-- Fine aggiunte del 31/12/2009 - RGabriele         --
------------------------------------------------------



-------------------------------------------
-- Aggiunte del 01/02/2010 - Gildo       --
-------------------------------------------
-- Personalizzazione numero copie in DDT --
-------------------------------------------

	IF NOT EXISTS (SELECT 1 FROM SysColumns WHERE SysColumns.ID=(SELECT SysObjects.ID FROM SysObjects WHERE SysObjects.ID=object_id('ExtraParDoc') AND SysObjects.Type='U') AND SysColumns.Name='NumCopie')
		ALTER TABLE ExtraParDoc ADD
			NumCopie					smallint		NULL	CONSTRAINT DF_ExtraParDoc_NumCopie DEFAULT 1
	GO

	UPDATE ExtraParDoc SET NumCopie=1 WHERE NumCopie IS NULL OR NumCopie=0
	GO

-------------------------------------------
-- Fine aggiunte del 01/02/2010 - Gildo  --
-------------------------------------------



--------------------------------------------------
-- Aggiunte del 29/03/2010 - Gildo              --
--------------------------------------------------
-- Aggiunta campo extra articoli lotto standard --
--------------------------------------------------

	IF NOT EXISTS (SELECT 1 FROM Sys.Objects SO INNER JOIN Sys.Columns SC ON SO.Object_ID=SC.Object_ID WHERE SO.Name='ExtraMag' AND SO.Type='U' AND SC.Name='LottoSTD')
		ALTER TABLE ExtraMag ADD
			LottoSTD					decimal(16, 6)		NOT NULL	CONSTRAINT DF_ExtraMag_LottoSTD DEFAULT 0
	GO

--------------------------------------------------
-- Creazione viste per lavagna AIOT             --
--------------------------------------------------

	IF EXISTS (SELECT 1 FROM Sys.Objects SO WHERE SO.Name='BCEA_VistaArtGenerati' AND SO.Type='V')
		DROP VIEW BCEA_VistaArtGenerati
	GO

	CREATE VIEW BCEA_VistaArtGenerati AS
		SELECT	AA.Codice, AA.Descrizione, AA.Gruppo, AA.Categoria, AA.CodCategoriaStat,
				AUM.UM AS UM1,
				isnull((SELECT sum(VI.ValoreCaricoEuro)/sum(VI.QtaCarico) FROM VistaInventario VI WHERE VI.CodArt=AA.Codice AND VI.Esercizio=(SELECT TU.EsercizioAttivo FROM TabUtenti TU WHERE TU.UserDB=cast(user_name() AS varchar(25))) GROUP BY VI.CodArt HAVING sum(VI.QtaCarico)<>0), 0) AS PrzMedio,
				VUP.PrezzoEuro AS PrzUltAcq, VUP.Data AS DataUltAcq
		FROM AnagraficaArticoli AA
			INNER JOIN ArticoliUMPreferite AUM ON AA.Codice=AUM.CodArt AND AUM.TipoUM=1
			LEFT OUTER JOIN VistaUltimoPrezzoAcquisto VUP ON AA.Codice=VUP.CodArticolo
		WHERE AA.ArtTipologia=0
	GO

	GRANT SELECT ON BCEA_VistaArtGenerati TO Metodo98
	GO



	IF EXISTS (SELECT 1 FROM Sys.Objects SO WHERE SO.Name='BCEA_StoricoPrezzi' AND SO.Type='V')
		DROP VIEW BCEA_StoricoPrezzi
	GO

	CREATE VIEW BCEA_StoricoPrezzi AS
		SELECT	SP.CodArticolo, SP.PrezzoEuro, SP.UM, SP.Quantita, SP.Data, SP.CodCliFor, SP.CodPagamento, SP.TipoPrezzo, SP.RifStoricoMag,
				AA.Descrizione AS DesArticolo,
				(ACF.DscConto1 + ' ' + ACF.DscConto2) AS DesCliFor,
				SM.Riferimenti,
				TP.Descrizione AS DesPagamento
		FROM StoricoPrezziArticolo SP
			LEFT OUTER JOIN AnagraficaArticoli AA ON SP.CodArticolo=AA.Codice
			LEFT OUTER JOIN AnagraficaCF ACF ON SP.CodCliFor=ACF.CodConto
			LEFT OUTER JOIN StoricoMag SM ON SP.RifStoricoMag=SM.Progressivo
			LEFT OUTER JOIN TabPagamenti TP ON SP.CodPagamento=TP.Codice
		WHERE SP.TipoPrezzo='F'
	GO

	GRANT SELECT ON BCEA_StoricoPrezzi TO Metodo98
	GO



	IF EXISTS (SELECT 1 FROM Sys.Objects SO WHERE SO.Name='BCEA_CostiSTD' AND SO.Type='V')
		DROP VIEW BCEA_CostiSTD
	GO

	CREATE VIEW BCEA_CostiSTD AS
		SELECT	TCP.Progressivo, TCP.Articolo, TCP.IDCosto, TCP.Descrizione AS DesCosto, TCP.UMRif, TCP.DataCalcolo, TCP.IDDistinta,
				(TCP.CP_MaterialeEuro + TCP.CA_MaterialeEuro + TCP.CP_LavInternaEuro + TCP.CA_LavInternaEuro + TCP.CP_LavEsternaEuro + TCP.CA_LavEsternaEuro + TCP.CP_IndVariabileEuro + TCP.CA_IndVariabileEuro + TCP.CP_IndFissoEuro + TCP.CA_IndFissoEuro) AS CostoPieno,
				AA.Descrizione AS DesArticolo,
				EM.LottoSTD
		FROM TabCostiProdotto TCP
			INNER JOIN ParamCostiProdotto PCP ON TCP.IDCosto=PCP.IDCosto
			LEFT OUTER JOIN AnagraficaArticoli AA ON TCP.Articolo=AA.Codice
			LEFT OUTER JOIN ExtraMag EM ON TCP.Articolo=EM.CodArt
		WHERE PCP.Flg_GestCosti=1
	GO

	GRANT SELECT ON BCEA_CostiSTD TO Metodo98
	GO

--------------------------------------------------
-- Fine aggiunte del 29/03/2010 - Gildo         --
--------------------------------------------------



----------------------------------------------------
-- Aggiunte del 31/03/2010 - Gildo                --
----------------------------------------------------
-- Aggiunta campi extra righe doc. costo standard --
----------------------------------------------------

	IF NOT EXISTS (SELECT 1 FROM Sys.Objects SO INNER JOIN Sys.Columns SC ON SO.Object_ID=SC.Object_ID WHERE SO.Name='ExtraRigheDoc' AND SO.Type='U' AND SC.Name='CostoSTD')
		ALTER TABLE ExtraRigheDoc ADD
			CostoSTD					decimal(19, 6)		NOT NULL	CONSTRAINT DF_ExtraRigheDoc_CostoSTD DEFAULT 0
	GO

	IF NOT EXISTS (SELECT 1 FROM Sys.Objects SO INNER JOIN Sys.Columns SC ON SO.Object_ID=SC.Object_ID WHERE SO.Name='ExtraRigheDoc' AND SO.Type='U' AND SC.Name='Scostamento')
		ALTER TABLE ExtraRigheDoc ADD
			Scostamento					decimal(19, 6)		NOT NULL	CONSTRAINT DF_ExtraRigheDoc_Scostamento DEFAULT 0
	GO

----------------------------------------------------
-- Fine aggiunte del 31/03/2010 - Gildo           --
----------------------------------------------------



------------------------------------------
-- Aggiunte del 14/07/2010 - RGabriele  --
---------------------------------------------
-- Vista componenti urgenti per stampa BAM --
---------------------------------------------

--VISTA COMPONENTI URGENTI

IF EXISTS(SELECT 1 FROM SysObjects WHERE ID=object_id('BCEA_VistaComponentiUrgenti') AND Type='V')
	DROP VIEW BCEA_VistaComponentiUrgenti
GO

CREATE VIEW BCEA_VistaComponentiUrgenti AS
	SELECT
		ROP.RifCommCli AS RifCommCliC,
		TORP.TIPOCOM AS TIPOCOMC,
		TORP.ESERCIZIO AS ESERCIZIOC,
		TORP.NUMEROCOM AS NUMEROCOMC,
		ROP.IDRIGA AS POSIZIONEC,
		ROP.CODART AS CODARTORDC,
		ROP.DESCRIZIONEART AS DSCARTORDC,
		ROP.QTAGESTIONERES AS QTAGESTIONERESC,
		IOP.IDTESTA,
		IOP.IDRIGA,
		IOP.IDIMPEGNO,
		IOP.CODART AS CODARTIMPC,
		IOP.DATAIMPEGNORICH AS DATAIMPEGNORICHC,
		IOP.QTAGESTIONERES AS QTAGESTIONEIMPRESC, RLT.QTAGESTIONERES,
		(CASE WHEN STATOIMPEGNO IN (0,1) AND QTAGESTIONETRASF=0 AND RLT.QTAGESTIONERES<>0 THEN 'Lista Trasf.' --Impegno aperto o prelevato non trasferito e lista di trasferimento.
			  WHEN STATOIMPEGNO IN (0,1) AND QTAGESTIONETRASF>0 AND RLT.QTAGESTIONERES<>0 THEN 'Trasf. Parz.+Lista Trasf.' --Impegno aperto o prelevato e lista di trasferimento.
			  WHEN STATOIMPEGNO=0 AND QTAGESTIONETRASF=0 THEN 'Aperto' --Impegno aperto ma non ho trasferito
			  WHEN STATOIMPEGNO=1 AND  QTAGESTIONETRASF=0 THEN 'In Prelievo' --impegno prelevato ma non ho trasferito
			  ELSE 'Trasferito Parz.' END) AS STATOIMPEGNOC	--impegno aperto o prelevato e ho traferito qualcosa
	FROM TESTEORDINIPROD TORP
	LEFT OUTER JOIN RIGHEORDPROD ROP
		ON TORP.PROGRESSIVO=ROP.IDTESTA
	LEFT OUTER JOIN IMPEGNIORDPROD IOP
		ON ROP.IDTESTA=IOP.IDTESTA AND ROP.IDRIGA=IOP.IDRIGA
	LEFT OUTER JOIN RIGHELISTATRASF RLT
		ON RLT.RIFTESTACOMM=IOP.IDTESTA
		AND RLT.RIFRIGAORD=IOP.IDRIGA
		AND RLT.RIFRIGAIMP=IOP.IDIMPEGNO
		AND RLT.STATORIGA IN (1,2)
		AND RLT.CODART<>''
	WHERE STATOIMPEGNO<>2
	AND STATOORDINE<>3
	AND QTAGESTIONETRASF<IOP.QTAGESTIONE
	AND ((SELECT SUM(QTAGESTIONEVERS) FROM IMPEGNIORDPROD WHERE IDTESTA=ROP.IDTESTA AND IDRIGA=ROP.IDRIGA)<>0
		OR
		(SELECT SUM(QTAGESTIONERES)
		FROM RIGHELISTATRASF
		WHERE RIFTESTACOMM=IOP.IDTESTA
		AND RIFRIGAORD=IOP.IDRIGA
		AND STATORIGA IN (1,2) --Conciliata o trasferita
		AND CODART <> '')<>0)
GO

GRANT SELECT ON BCEA_VistaComponentiUrgenti TO Metodo98
GO

--FUNZIONE PER CALCOLO SITUAZIONE ARTICOLO

IF EXISTS(SELECT 1 FROM SysObjects WHERE ID=object_id('BCEA_SITARTICOLOUMBASE') AND Type='FN')
	DROP FUNCTION BCEA_SITARTICOLOUMBASE
GO

CREATE FUNCTION [dbo].[BCEA_SITARTICOLOUMBASE](@CODART VARCHAR(50), @TIPODATO INT)
	RETURNS DECIMAL(19,6)
AS
	BEGIN
		DECLARE @RESULT AS DECIMAL(19,6)
		DECLARE @GIACART AS DECIMAL(19,6)
		DECLARE @ORDART AS DECIMAL(19,6)
		DECLARE @IMPART AS DECIMAL(19,6)

		SELECT @GIACART=isnull(SUM(Carico - Scarico + ResoDaScarico - ResoDaCarico),0),
			   @ORDART=isnull(SUM(Ordinato),0),
			   @IMPART=isnull(SUM(Impegnato),0)
		FROM VISTAINVENTARIO
		WHERE CODART = @CODART
		AND CODDEPOSITO IN (SELECT CODICE FROM ANAGRAFICADEPOSITI WHERE DISPONIBILE=1)

		IF @TIPODATO=0 --GIACENZA
			BEGIN
				SET @RESULT=@GIACART
			END
		ELSE
			BEGIN
				IF @TIPODATO=1 --ORDINATO
					BEGIN
						SET @RESULT=@ORDART
					END
				ELSE
					BEGIN
						IF @TIPODATO=2 --IMPEGNATO
							BEGIN
								SET @RESULT=@IMPART
							END
						ELSE
							BEGIN --DISPONIBILE
								SET @RESULT=@GIACART+@ORDART-@IMPART
							END
					END
			END
		RETURN @RESULT
	END

GO

GRANT EXECUTE ON [dbo].[BCEA_SITARTICOLOUMBASE] TO METODO98
GO

---------------------------------------------
-- Fine aggiunte del 14/07/2010 - RGabriele --
----------------------------------------------



------------------------------------------
-- Aggiunte del 01/09/2010 - RDaniele
---------------------------------------------
-- Vista descrizioni in lingua
	IF EXISTS(SELECT 1 FROM SYSOBJECTS WHERE ID=OBJECT_ID('MET_VISTADESCRARTICOLI') AND TYPE='V')
		DROP VIEW MET_VISTADESCRARTICOLI
	GO
	CREATE VIEW MET_VISTADESCRARTICOLI AS
	SELECT
			AA.CODICE,
			TL.CODICE AS LINGUA,
			(CASE WHEN
				(SELECT DESCRIZIONEAGG FROM DESCRARTICOLI WHERE CODICEART=AA.CODICE AND LINGUA=TL.CODICE) IS NULL OR
				(SELECT DESCRIZIONEAGG FROM DESCRARTICOLI WHERE CODICEART=AA.CODICE AND LINGUA=TL.CODICE)=''
			THEN
				AA.DESCRIZIONE
			ELSE
				(SELECT DESCRIZIONEAGG FROM DESCRARTICOLI WHERE CODICEART=AA.CODICE AND LINGUA=TL.CODICE)
			END) AS DESCRSTAMPA,
			AA.DESCRIZIONE,
			(CASE WHEN
				(SELECT DESCRIZIONEAGG FROM DESCRARTICOLI WHERE CODICEART=AA.CODICE AND LINGUA=TL.CODICE) IS NULL OR
				(SELECT DESCRIZIONEAGG FROM DESCRARTICOLI WHERE CODICEART=AA.CODICE AND LINGUA=TL.CODICE)=''
			THEN
				''
			ELSE
				(SELECT DESCRIZIONEAGG FROM DESCRARTICOLI WHERE CODICEART=AA.CODICE AND LINGUA=TL.CODICE)
			END) AS DESCRLINGUA,
			ISNULL((SELECT INFORMAZIONIAGG FROM DESCRARTICOLI WHERE CODICEART=AA.CODICE AND LINGUA=TL.CODICE), '') AS INFORMAZIONIAGGIUNTIVE
		FROM
			ANAGRAFICAARTICOLI AA,TABLINGUE TL
	GO
	GRANT SELECT ON MET_VISTADESCRARTICOLI TO METODO98
	GO


	IF EXISTS(SELECT 1 FROM SYSOBJECTS WHERE ID=OBJECT_ID('MET_VISTADESCRARTICOLI_PREPIVOT') AND TYPE='V')
		DROP VIEW MET_VISTADESCRARTICOLI_PREPIVOT
	GO
	CREATE VIEW MET_VISTADESCRARTICOLI_PREPIVOT AS
	SELECT
		CODICE,DESCRIZIONE AS DSCLINGUA0,
		(CASE WHEN LINGUA=3 THEN DESCRLINGUA ELSE '' END) AS DSCLINGUA3,
		(CASE WHEN LINGUA=4 THEN DESCRLINGUA ELSE '' END) AS DSCLINGUA4,
		(CASE WHEN LINGUA=5 THEN DESCRLINGUA ELSE '' END) AS DSCLINGUA5
	FROM
		MET_VISTADESCRARTICOLI
	WHERE
		LINGUA IN (3,4,5)
	GO
	GRANT SELECT ON MET_VISTADESCRARTICOLI_PREPIVOT TO METODO98
	GO


	IF EXISTS(SELECT 1 FROM SYSOBJECTS WHERE ID=OBJECT_ID('MET_VISTADESCRARTICOLI_PIVOT') AND TYPE='V')
		DROP VIEW MET_VISTADESCRARTICOLI_PIVOT
	GO
	CREATE VIEW MET_VISTADESCRARTICOLI_PIVOT AS
	SELECT
		CODICE,
		MAX(DSCLINGUA0) AS DSCLINGUA0,
		MAX(DSCLINGUA3) AS DSCLINGUA3,
		MAX(DSCLINGUA4) AS DSCLINGUA4,
		MAX(DSCLINGUA5) AS DSCLINGUA5
	FROM
		MET_VISTADESCRARTICOLI_PREPIVOT
	GROUP BY
		CODICE
	GO
	GRANT SELECT ON MET_VISTADESCRARTICOLI_PIVOT TO METODO98
	GO

-- extramag
	IF NOT EXISTS (SELECT 1 FROM SysColumns WHERE SysColumns.ID=(SELECT ID FROM SysObjects WHERE ID=object_id('EXTRAMAG') AND SysObjects.XType='U') AND SysColumns.Name='DURATAPREVISTAORE')
		ALTER TABLE EXTRAMAG ADD DURATAPREVISTAORE DECIMAL(5,0) DEFAULT 0
	GO

---------------------------------------------
-- Fine aggiunte del 01/09/2010 - RDaniele
----------------------------------------------



------------------------------------------
-- Aggiunte del 07/09/2010 - RDaniele
---------------------------------------------
-- Vista componenti ciclo
	IF  EXISTS (SELECT * FROM SYS.VIEWS WHERE OBJECT_ID = OBJECT_ID(N'MET_VISTACOMPONENTICICLO'))
		DROP VIEW MET_VISTACOMPONENTICICLO
	GO
	CREATE VIEW MET_VISTACOMPONENTICICLO AS
	SELECT
		VBL.PROGRESSIVO,
		VBL.IDTESTACOMM,
		VBL.IDRIGACOMM,
		VBL.NUMEROFASE,
		CC.IDRIGADBA,
		OP.CODART,
		OP.DESCRIZIONEART,
		OP.UMGEST,
		OP.QTAGESTIONE,
		OP.SEQASSEMBLAGGIO
	FROM
		VISTABOLLELAVORAZIONE VBL
		LEFT OUTER JOIN TABCOMPONENTIDBACICLOORD CC ON CC.PROGRESSIVO=VBL.PROGRESSIVO AND CC.NUMEROFASE=VBL.NUMEROFASE
		INNER JOIN IMPEGNIORDPROD OP ON OP.IDTESTA=VBL.IDTESTACOMM AND OP.IDRIGA=VBL.IDRIGACOMM AND OP.IDIMPEGNO=CC.IDRIGADBA
	GO
	GRANT SELECT ON MET_VISTACOMPONENTICICLO TO METODO98
	GO

--CREAZIONE FUNZIONI E VISTAVARIANTI
	DROP FUNCTION CODICETIPOLOGIA
	GO
	CREATE FUNCTION CODICETIPOLOGIA (@VARESPL VARCHAR(150),@POSIZIONE SMALLINT)
	RETURNS VARCHAR(10)
	BEGIN
		DECLARE @CONT SMALLINT
		DECLARE @CODTIP VARCHAR(10)
		DECLARE @P SMALLINT
		DECLARE @STRTMP VARCHAR(150)

		SET @CONT = 0
		SET @STRTMP =  @VARESPL
		SET @CODTIP = ''
		WHILE @CONT < @POSIZIONE
			BEGIN
				SET @P = CHARINDEX('=', @STRTMP,1)
				SET @CONT = @CONT + 1
				IF @P > 0
					BEGIN
					IF @CONT < @POSIZIONE
						SET @STRTMP = SUBSTRING(@STRTMP, @P+1, LEN(@STRTMP) - @P)
					ELSE
						SET @CODTIP = SUBSTRING(@STRTMP, 1,  @P-1)
					END
			END
		IF @CONT > 1
			IF @P > 0
				BEGIN
					SET @P = CHARINDEX(';', @STRTMP,1)
					IF @P > 0
						BEGIN
						SET @STRTMP = SUBSTRING(@STRTMP,@P+1,LEN(@STRTMP) - @P)

						SET @P = CHARINDEX('=', @STRTMP,1)
						IF @P > 0
							SET @STRTMP = SUBSTRING(@STRTMP, 1,  @P-1)
						END
						SET @CODTIP = @STRTMP
				END
			ELSE
				SET @CODTIP = ''
		RETURN (@CODTIP)
	END
	GO
	GRANT EXECUTE ON CODICETIPOLOGIA TO METODO98
	GO

	DROP FUNCTION CODICEVARIANTE
	GO
	CREATE FUNCTION CODICEVARIANTE (@VARESPL VARCHAR(150), @POSIZIONE SMALLINT)
	RETURNS VARCHAR(8)
	BEGIN
		DECLARE @CONT SMALLINT
		DECLARE @CODVAR VARCHAR(8)
		DECLARE @P SMALLINT
		DECLARE @STRTMP VARCHAR(150)

		SET @CONT = 0
		SET @STRTMP =  @VARESPL
		WHILE @CONT < @POSIZIONE
			BEGIN
				SET @P = CHARINDEX('=', @STRTMP,1)
				IF @P > 0
					SET @STRTMP = SUBSTRING(@STRTMP, @P+1, LEN(@STRTMP) - @P)
				SET @CONT = @CONT + 1
			END
		SET @CODVAR=''
		IF @P > 0
			SET @P = CHARINDEX(';', @STRTMP,1)
			IF @P > 0
				SET @CODVAR = SUBSTRING(@STRTMP,1,@P-1)
		RETURN (@CODVAR)
	END
	GO
	GRANT EXECUTE ON CODICEVARIANTE TO METODO98
	GO

	DROP FUNCTION CONTA
	GO
	CREATE FUNCTION CONTA(@STRING1 VARCHAR(255),@STRING2 CHAR(1))
	RETURNS SMALLINT
	AS
	BEGIN
	  DECLARE @IRES SMALLINT;
	  DECLARE @Q SMALLINT;
	  SET @IRES=0
	  SET @Q=CHARINDEX(@STRING2,@STRING1)
	  WHILE @Q>0
		 BEGIN
		SET @IRES=@IRES+1
		   SET @Q=CHARINDEX(@STRING2,@STRING1,@Q+1)
	  END
	  RETURN (@IRES)
	END
	GO
	GRANT EXECUTE ON CONTA TO METODO98
	GO

	DROP VIEW MET_VISTAVARIANTI
	GO
	CREATE VIEW MET_VISTAVARIANTI
	AS SELECT
		AA.CODICEPRIMARIO,
		AA1.DESCRIZIONE AS DSCPRIMARIO,
		AA.CODICE,
		AA.DESCRIZIONE,
		AA.GRUPPO,
		AA.CATEGORIA,
		AA.CODCATEGORIASTAT,
		AA.VARESPLICITE,
		DBO.CONTA(AA.VARESPLICITE,'=') XXX,
		DBO.CODICETIPOLOGIA(AA.VARESPLICITE,1) CT1,
		(SELECT DESCRIZIONE FROM TABTIPOLOGIE WHERE TIPOLOGIA=DBO.CODICETIPOLOGIA(AA.VARESPLICITE,1)) DT1,
		DBO.CODICEVARIANTE(AA.VARESPLICITE,1) CV1,
		(SELECT DESCRIZIONE FROM TABVARIANTI WHERE TIPOLOGIA=DBO.CODICETIPOLOGIA(AA.VARESPLICITE,1) AND VARIANTE=DBO.CODICEVARIANTE(AA.VARESPLICITE,1)) DV1,
		(CASE WHEN DBO.CODICETIPOLOGIA(AA.VARESPLICITE,1)='ATT' THEN
			(SELECT A FROM TABVARIANTI WHERE TIPOLOGIA=DBO.CODICETIPOLOGIA(AA.VARESPLICITE,1) AND VARIANTE=DBO.CODICEVARIANTE(AA.VARESPLICITE,1)) ELSE
		'' END) CATSTAT,
		(CASE WHEN DBO.CODICETIPOLOGIA(AA.VARESPLICITE,1)='ATT' THEN
			(SELECT B FROM TABVARIANTI WHERE TIPOLOGIA=DBO.CODICETIPOLOGIA(AA.VARESPLICITE,1) AND VARIANTE=DBO.CODICEVARIANTE(AA.VARESPLICITE,1)) ELSE
		'' END) PREZZOCAT,
		DBO.CODICETIPOLOGIA(AA.VARESPLICITE,2) CT2,
		(SELECT DESCRIZIONE FROM TABTIPOLOGIE WHERE TIPOLOGIA=DBO.CODICETIPOLOGIA(AA.VARESPLICITE,2)) DT2,
		DBO.CODICEVARIANTE(AA.VARESPLICITE,2) CV2,
		(SELECT DESCRIZIONE FROM TABVARIANTI WHERE TIPOLOGIA=DBO.CODICETIPOLOGIA(AA.VARESPLICITE,2) AND VARIANTE=DBO.CODICEVARIANTE(AA.VARESPLICITE,2)) DV2,
		DBO.CODICETIPOLOGIA(AA.VARESPLICITE,3) CT3,
		(SELECT DESCRIZIONE FROM TABTIPOLOGIE WHERE TIPOLOGIA=DBO.CODICETIPOLOGIA(AA.VARESPLICITE,3)) DT3,
		DBO.CODICEVARIANTE(AA.VARESPLICITE,3) CV3,
		(SELECT DESCRIZIONE FROM TABVARIANTI WHERE TIPOLOGIA=DBO.CODICETIPOLOGIA(AA.VARESPLICITE,3) AND VARIANTE=DBO.CODICEVARIANTE(AA.VARESPLICITE,3)) DV3,
		DBO.CODICETIPOLOGIA(AA.VARESPLICITE,4) CT4,
		(SELECT DESCRIZIONE FROM TABTIPOLOGIE WHERE TIPOLOGIA=DBO.CODICETIPOLOGIA(AA.VARESPLICITE,4)) DT4,
		DBO.CODICEVARIANTE(AA.VARESPLICITE,4) CV4,
		(SELECT DESCRIZIONE FROM TABVARIANTI WHERE TIPOLOGIA=DBO.CODICETIPOLOGIA(AA.VARESPLICITE,4) AND VARIANTE=DBO.CODICEVARIANTE(AA.VARESPLICITE,4)) DV4,
		DBO.CODICETIPOLOGIA(AA.VARESPLICITE,5) CT5,
		(SELECT DESCRIZIONE FROM TABTIPOLOGIE WHERE TIPOLOGIA=DBO.CODICETIPOLOGIA(AA.VARESPLICITE,5)) DT5,
		DBO.CODICEVARIANTE(AA.VARESPLICITE,5) CV5,
		(SELECT DESCRIZIONE FROM TABVARIANTI WHERE TIPOLOGIA=DBO.CODICETIPOLOGIA(AA.VARESPLICITE,5) AND VARIANTE=DBO.CODICEVARIANTE(AA.VARESPLICITE,5)) DV5,
		DBO.CODICETIPOLOGIA(AA.VARESPLICITE,6) CT6,
		(SELECT DESCRIZIONE FROM TABTIPOLOGIE WHERE TIPOLOGIA=DBO.CODICETIPOLOGIA(AA.VARESPLICITE,6)) DT6,
		DBO.CODICEVARIANTE(AA.VARESPLICITE,6) CV6,
		(SELECT DESCRIZIONE FROM TABVARIANTI WHERE TIPOLOGIA=DBO.CODICETIPOLOGIA(AA.VARESPLICITE,6) AND VARIANTE=DBO.CODICEVARIANTE(AA.VARESPLICITE,6)) DV6,
		DBO.CODICETIPOLOGIA(AA.VARESPLICITE,7) CT7,
		(SELECT DESCRIZIONE FROM TABTIPOLOGIE WHERE TIPOLOGIA=DBO.CODICETIPOLOGIA(AA.VARESPLICITE,7)) DT7,
		DBO.CODICEVARIANTE(AA.VARESPLICITE,7) CV7,
		(SELECT DESCRIZIONE FROM TABVARIANTI WHERE TIPOLOGIA=DBO.CODICETIPOLOGIA(AA.VARESPLICITE,7) AND VARIANTE=DBO.CODICEVARIANTE(AA.VARESPLICITE,7)) DV7,
		DBO.CODICETIPOLOGIA(AA.VARESPLICITE,8) CT8,
		(SELECT DESCRIZIONE FROM TABTIPOLOGIE WHERE TIPOLOGIA=DBO.CODICETIPOLOGIA(AA.VARESPLICITE,8)) DT8,
		DBO.CODICEVARIANTE(AA.VARESPLICITE,8) CV8,
		(SELECT DESCRIZIONE FROM TABVARIANTI WHERE TIPOLOGIA=DBO.CODICETIPOLOGIA(AA.VARESPLICITE,8) AND VARIANTE=DBO.CODICEVARIANTE(AA.VARESPLICITE,8)) DV8,
		DBO.CODICETIPOLOGIA(AA.VARESPLICITE,9) CT9,
		(SELECT DESCRIZIONE FROM TABTIPOLOGIE WHERE TIPOLOGIA=DBO.CODICETIPOLOGIA(AA.VARESPLICITE,9)) DT9,
		DBO.CODICEVARIANTE(AA.VARESPLICITE,9) CV9,
		(SELECT DESCRIZIONE FROM TABVARIANTI WHERE TIPOLOGIA=DBO.CODICETIPOLOGIA(AA.VARESPLICITE,9) AND VARIANTE=DBO.CODICEVARIANTE(AA.VARESPLICITE,9)) DV9,
		DBO.CODICETIPOLOGIA(AA.VARESPLICITE,10) CT10,
		(SELECT DESCRIZIONE FROM TABTIPOLOGIE WHERE TIPOLOGIA=DBO.CODICETIPOLOGIA(AA.VARESPLICITE,10)) DT10,
		DBO.CODICEVARIANTE(AA.VARESPLICITE,10) CV10,
		(SELECT DESCRIZIONE FROM TABVARIANTI WHERE TIPOLOGIA=DBO.CODICETIPOLOGIA(AA.VARESPLICITE,10) AND VARIANTE=DBO.CODICEVARIANTE(AA.VARESPLICITE,10)) DV10
	FROM
		ANAGRAFICAARTICOLI AA LEFT OUTER JOIN ANAGRAFICAARTICOLI AA1 ON AA.CODICEPRIMARIO=AA1.CODICE
	WHERE
		AA.CODICEPRIMARIO IS NOT NULL
	GO
	GRANT SELECT ON MET_VISTAVARIANTI TO METODO98
	GO
--FINE CREAZIONE FUNZIONI E VISTAVARIANTI

-- VISTA MOVIMENTI CDC
	IF EXISTS(SELECT 1 FROM SYSOBJECTS WHERE ID=OBJECT_ID('MET_VISTAMOVIMENTICDC') AND TYPE='V')
		DROP VIEW MET_VISTAMOVIMENTICDC
	GO
	CREATE VIEW MET_VISTAMOVIMENTICDC AS
	SELECT
		CDC.*,
		TCDC.DESCRIZIONE AS DSCCDC,
		AG.DSCCONTO1 AS DSCGENERICO,
		CAST(CDC.CODCONTOCC AS VARCHAR)+' - '+TCDC.DESCRIZIONE AS GRPCDC,
		CDC.CODGENERICO+' - '+AG.DSCCONTO1 AS GRPGEN
	FROM
		VISTAMOVIMENTICDC CDC
		LEFT OUTER JOIN TABCENTRICOSTO TCDC ON TCDC.CODICE=CDC.CODCONTOCC
		LEFT OUTER JOIN ANAGRAFICAGENERICI AG ON AG.CODCONTO=CDC.CODGENERICO
	GO
	GRANT SELECT ON MET_VISTAMOVIMENTICDC TO METODO98
	GO
-- TABELLA LISTINO CDC
	IF NOT EXISTS (SELECT 1 FROM SYSOBJECTS WHERE ID = OBJECT_ID('MET_TABCATSTAT_CDC') AND TYPE = 'U')
	CREATE TABLE MET_TABCATSTAT_CDC
	(
		CODICE DECIMAL(5,0) NOT NULL DEFAULT 0,
		VALORE DECIMAL(19,6) DEFAULT 0,
		UTENTEMODIFICA VARCHAR(25) NOT NULL,
		DATAMODIFICA DATETIME NOT NULL
		PRIMARY KEY(CODICE)
	)
	GO
	GRANT  REFERENCES ,  SELECT ,  UPDATE ,  INSERT ,  DELETE  ON MET_TABCATSTAT_CDC  TO METODO98
	GO

---------------------------------------------
-- Fine aggiunte del 07/09/2010 - RDaniele
----------------------------------------------



--NO SE SA CHI A GA FATTA
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'BRECEA_VISTADATAULTIMOACQ'))
	DROP VIEW BRECEA_VISTADATAULTIMOACQ
GO

CREATE VIEW BRECEA_VISTADATAULTIMOACQ AS
SELECT
	CODARTICOLO,
	MAX(DATA) AS DATAULTIMOACQ
FROM
	STORICOPREZZIARTICOLO
WHERE
	TIPOPREZZO = 'F'
GROUP BY
	CODARTICOLO
GO
GRANT SELECT ON BRECEA_VISTADATAULTIMOACQ TO METODO98
GO



------------------------------------------
-- Aggiunte del 13/10/2010 - RDaniele
---------------------------------------------
-- GESTIONE DESCRIZIONI RIFERIMENTO DOCUMENTO IN LINGUA

	IF NOT EXISTS(SELECT 1 FROM SysObjects WHERE SysObjects.ID=object_id('MET_PARDOCLINGUA') AND SysObjects.Type='U')
		CREATE TABLE MET_PARDOCLINGUA
		(
			LINGUA			DECIMAL(5,0)	NOT NULL	DEFAULT 0,
			RIFDOCITA		VARCHAR(50)		NOT NULL	DEFAULT '',
			TIPODOC			VARCHAR(3)		NOT NULL	DEFAULT '',
			RIFDOCLINGUA	VARCHAR(50)					DEFAULT '',
			RIFDATALINGUA	VARCHAR(10)					DEFAULT '',
			UTENTEMODIFICA	VARCHAR(25)		NOT NULL,
			DATAMODIFICA	DATETIME		NOT NULL,
			PRIMARY KEY(LINGUA,RIFDOCITA,TIPODOC)
		)
	GO
	GRANT DELETE, INSERT, REFERENCES, SELECT, UPDATE ON MET_PARDOCLINGUA TO METODO98
	GO

	IF EXISTS(SELECT 1 FROM SysObjects WHERE ID=object_id('MET_VISTAPARDOCLINGUA') AND Type='V')
		DROP VIEW MET_VISTAPARDOCLINGUA
	GO
	CREATE VIEW MET_VISTAPARDOCLINGUA AS
	SELECT
		MP.*,
		RTRIM(LTRIM(MP.RIFDOCITA))+' '+P.DESCRIZIONE AS DESCRDOC
	FROM
		MET_PARDOCLINGUA AS MP
		LEFT OUTER JOIN PARAMETRIDOC AS P ON P.CODICE=MP.TIPODOC
	GO
	GRANT SELECT ON MET_VISTAPARDOCLINGUA TO METODO98
	GO


	IF EXISTS(SELECT 1 FROM SysObjects WHERE ID=object_id('MET_VISTARIGHEDOCRIF') AND Type='V')
		DROP VIEW MET_VISTARIGHEDOCRIF
	GO
	CREATE VIEW MET_VISTARIGHEDOCRIF AS
	SELECT
		R.IDTESTA,
		R.IDRIGA,
		R.TIPODOC,
		(SELECT CODLINGUA FROM TESTEDOCUMENTI AS T WHERE R.IDTESTA=T.PROGRESSIVO) AS LINGUA,
		(CASE WHEN CHARINDEX('NR.',R.DESCRIZIONEART)>0 THEN SUBSTRING(R.DESCRIZIONEART,1,(CHARINDEX('NR.',R.DESCRIZIONEART)-1)) ELSE '' END) AS RIFDOCDACERCARE,
		R.DESCRIZIONEART
	FROM
		RIGHEDOCUMENTI AS R
	WHERE
		R.TIPORIGA='R'
	GO
	GRANT SELECT ON MET_VISTARIGHEDOCRIF TO METODO98
	GO

	IF EXISTS(SELECT 1 FROM SysObjects WHERE ID=object_id('MET_VISTARIGHEDOCRIFDOCUMENTO') AND Type='V')
		DROP VIEW MET_VISTARIGHEDOCRIFDOCUMENTO
	GO
	CREATE VIEW MET_VISTARIGHEDOCRIFDOCUMENTO AS
	SELECT
		MV.*,
		MP.RIFDOCITA,
		MP.RIFDOCLINGUA,
		MP.RIFDATALINGUA,
		(CASE WHEN MV.LINGUA=0 OR MP.RIFDOCITA IS NULL THEN MV.DESCRIZIONEART ELSE
			REPLACE(REPLACE(MV.DESCRIZIONEART,'DEL',MP.RIFDATALINGUA),MV.RIFDOCDACERCARE,MP.RIFDOCLINGUA)
		END) AS RIFDOCUMENTO
	FROM
		MET_VISTARIGHEDOCRIF MV
		LEFT OUTER JOIN MET_VISTAPARDOCLINGUA MP ON MV.LINGUA=MP.LINGUA AND MV.RIFDOCDACERCARE=MP.DESCRDOC
	GO
	GRANT SELECT ON MET_VISTARIGHEDOCRIFDOCUMENTO TO METODO98
	GO

---------------------------------------------
-- Fine aggiunte del 13/10/2010 - RDaniele
----------------------------------------------



------------------------------------------
-- Aggiunte del 15/10/2010 - RDaniele
---------------------------------------------
-- PROCEDURA DI CONTROLLO COMPONENTI DA FILE EXCEL
IF NOT EXISTS(SELECT 1 FROM SysObjects WHERE SysObjects.ID=object_id('MET_RICAMBICLIENTI') AND SysObjects.Type='U')
CREATE TABLE MET_RICAMBICLIENTI
(
	CODCLIFOR VARCHAR(7) DEFAULT '',
	COMPOSTO VARCHAR(80) DEFAULT '',
	COMPONENTE VARCHAR(80) DEFAULT '',
	FLGCOMPOSTO SMALLINT DEFAULT 0,
	FLGCOMPONENTE SMALLINT DEFAULT 0,
	ALTERNATIVO VARCHAR(80) DEFAULT '',
	FLGALTERNATIVO SMALLINT DEFAULT 0,
	VERRICAMBIO VARCHAR(15) DEFAULT ''
	PRIMARY KEY (CODCLIFOR,COMPOSTO,COMPONENTE)
)
GO
GRANT REFERENCES,SELECT,UPDATE,INSERT,DELETE ON MET_RICAMBICLIENTI TO METODO98
GO

IF EXISTS(SELECT 1 FROM SysObjects WHERE ID=object_id('MET_VISTAMACCHINECLI') AND Type='V')
	DROP VIEW MET_VISTAMACCHINECLI
GO
CREATE VIEW MET_VISTAMACCHINECLI AS
SELECT
    T.CODCLIFOR,
    R.CODART
FROM
    TESTEDOCUMENTI AS T INNER JOIN
    RIGHEDOCUMENTI AS R ON T.PROGRESSIVO = R.IDTESTA
WHERE
	T.TIPODOC IN (SELECT CODICE FROM PARAMETRIDOC AS P WHERE P.TIPO IN ('O','B','F') AND CLIFOR='C')
GROUP BY
	T.CODCLIFOR,R.CODART
GO
GRANT SELECT ON MET_VISTAMACCHINECLI TO METODO98
GO

IF NOT EXISTS(SELECT 1 FROM SysObjects WHERE SysObjects.ID=object_id('MET_TEMPESPLODIDBA') AND SysObjects.Type='U')
	CREATE TABLE MET_TEMPESPLODIDBA
		(
		MATRMACCHINA		VARCHAR(50)	NOT NULL,
		CODCOMPOSTO		varchar(50)	NOT NULL,
		CODCOMPONENTE	varchar(50)	NULL
		)
GO
GRANT REFERENCES, SELECT, UPDATE, INSERT, DELETE ON MET_TEMPESPLODIDBA TO METODO98
GO

IF EXISTS(SELECT 1 FROM SysObjects WHERE SysObjects.ID=object_id('MET_ESPLODIDBA') AND SysObjects.Type='P')
	DROP PROCEDURE MET_ESPLODIDBA
GO
CREATE PROCEDURE MET_ESPLODIDBA @PCODART VARCHAR(50) AS
BEGIN

		DELETE FROM MET_TEMPESPLODIDBA;

 			WITH MultilevelBOM(MATRMACCHINA,Composto, Componente) AS
			(
				SELECT @PCODART AS MATRMACCHINA,AC.Artcomposto AS Composto, DB.Codartcomponente AS Componente
				FROM Distintaartcomposti AC
   					INNER JOIN DistintaBase DB on AC.Progressivo = DB.Rifprogressivo
				WHERE
				AC.Artcomposto = @PCODART AND
				AC.DbaStandard = 1
			UNION ALL
				SELECT @PCODART AS MATRMACCHINA,ACR.Artcomposto AS Composto, DBR.Codartcomponente AS Componente
				FROM Distintaartcomposti ACR
   					INNER JOIN DistintaBase DBR on ACR.Progressivo = DBR.Rifprogressivo
						INNER JOIN MultilevelBOM MB ON ACR.Artcomposto= MB.Componente
				WHERE
				ACR.DbaStandard = 1
			)			INSERT INTO MET_TEMPESPLODIDBA
				SELECT MATRMACCHINA, Composto as CODCOMPOSTO, Componente as CODCOMPONENTE
					FROM MultilevelBOM
END
GO
GRANT EXECUTE ON MET_ESPLODIDBA TO METODO98
GO
---------------------------------------------
-- Fine aggiunte del 15/10/2010 - RDaniele
----------------------------------------------



-----------------------------------------------------------------------
-- Aggiunte del 11/11/2010 - Gildo                                   --
-----------------------------------------------------------------------
-- Creazione viste per stampa controllo avanzamento commesse clienti --
-----------------------------------------------------------------------

	IF EXISTS (SELECT 1 FROM Sys.Objects SO WHERE SO.Name='BCEA_VistaAvanzRipresa' AND SO.Type='V')
		DROP VIEW BCEA_VistaAvanzRipresa
	GO

	CREATE VIEW BCEA_VistaAvanzRipresa AS
		SELECT	STA.*,
				(SELECT TOP 1 DM.Dipendente FROM DipendentiMovimento DM WHERE DM.RifProgressivo=STA.Progressivo ORDER BY DM.Posizione) AS CodDip,
				EXA.NoteLav
		FROM StoricoAvanzamenti STA
			INNER JOIN BCEA_TabCausaliLav TCL ON STA.CodCausale=TCL.Codice
			LEFT OUTER JOIN ExtraAvanzamenti EXA ON STA.Progressivo=EXA.RifProgressivo
		WHERE TCL.FlgNoteObbl=1
	GO

	GRANT SELECT ON BCEA_VistaAvanzRipresa TO Metodo98
	GO



	IF EXISTS (SELECT 1 FROM Sys.Objects SO WHERE SO.Name='BCEA_VistaAvanzSitMat' AND SO.Type='V')
		DROP VIEW BCEA_VistaAvanzSitMat
	GO

	CREATE VIEW BCEA_VistaAvanzSitMat AS
		SELECT	VBL.AnnoBolla, VBL.NumeroBolla,
				VIP.*,
				(SELECT TOP 1 VOP.TipoCom + '/' + cast(VOP.Esercizio AS varchar) + '/' + cast(VOP.NumeroCom AS varchar) + '/' + cast(VOP.IDRiga AS varchar) FROM VistaOrdiniCommesseProd VOP WHERE VOP.CodArtOrd=VIP.CodArtImp AND VOP.RifCommCli=VIP.RifCommCli ORDER BY VOP.IDTesta, VOP.IDRiga) AS RifOrdImp,
				(SELECT TOP 1 ROP1.StatoOrdine FROM RigheOrdProd ROP1 WHERE ROP1.CodArt=VIP.CodArtImp AND ROP1.RifCommCli=VIP.RifCommCli ORDER BY ROP1.IDTesta, ROP1.IDRiga) AS StatoOrdImp,
				(SELECT TOP 1 (SELECT sum(IOP.QtaGestioneRes) FROM ImpegniOrdProd IOP WHERE IOP.IDTesta=ROP2.IDTesta AND IOP.IDRiga=ROP2.IDRiga) FROM RigheOrdProd ROP2 WHERE ROP2.CodArt=VIP.CodArtImp AND ROP2.RifCommCli=VIP.RifCommCli ORDER BY ROP2.IDTesta, ROP2.IDRiga) AS QtaResImp
		FROM VistaBolleLavorazione VBL
			INNER JOIN TabComponentiDBACicloOrd CDC ON VBL.Progressivo=CDC.Progressivo AND VBL.NumeroFase=CDC.NumeroFase
			INNER JOIN VistaImpegniCommesseProd VIP ON VBL.IDTestaComm=VIP.IDTesta AND VBL.IDRigaComm=VIP.IDRiga AND CDC.IDRigaDBA=VIP.IDImpegno
	GO

	GRANT SELECT ON BCEA_VistaAvanzSitMat TO Metodo98
	GO

-----------------------------------------------------------------------
-- Fine Aggiunte del 11/11/2010 - Gildo                              --
-----------------------------------------------------------------------



--------------------------------------------------------------------------
-- Aggiunte del 18/11/2010 - Daniele A.                                 --
--------------------------------------------------------------------------
-- Creazione indice per otimizzazione tempi calcolo consuntivi commessa --
--------------------------------------------------------------------------

	IF NOT EXISTS (SELECT 1 FROM Sys.Objects SO INNER JOIN Sys.Indexes SI ON SO.Object_ID=SI.Object_ID WHERE SO.Name='RigheDocumenti' AND SO.Type='U' AND SI.Name='RigheDoc_RifCommCli' AND SI.Type=2 AND SI.Is_Primary_Key=0)
		CREATE NONCLUSTERED INDEX RigheDoc_RifCommCli ON RigheDocumenti (RifCommCli)
			WITH (
				PAD_INDEX=OFF,
				STATISTICS_NORECOMPUTE=OFF,
				SORT_IN_TEMPDB=OFF,
				IGNORE_DUP_KEY=OFF,
				DROP_EXISTING=OFF,
				ONLINE=OFF,
				ALLOW_ROW_LOCKS=ON,
				ALLOW_PAGE_LOCKS=OFF
				)
	GO

--------------------------------------------------------------------------
-- Fine Aggiunte del 18/11/2010 - Daniele A.                            --
--------------------------------------------------------------------------



-----------------------------------------------------------------------
-- Aggiunte del 18/11/2010 - Gildo                                   --
-----------------------------------------------------------------------
-- Creazione viste per stampa controllo avanzamento commesse clienti --
-----------------------------------------------------------------------

	IF EXISTS (SELECT 1 FROM Sys.Objects SO WHERE SO.Name='BCEA_VistaConsCCliExcel1' AND SO.Type='V')
		DROP VIEW BCEA_VistaConsCCliExcel1
	GO

	CREATE VIEW BCEA_VistaConsCCliExcel1 AS
		SELECT	VC.RifComm,
				0 AS Tipo,
				VC.VoceBase,
				isnull(TV.Descrizione, '') AS DesVoce,
				cast(0 AS decimal(16, 6)) AS TotOre,
				cast(isnull(VC.ConsuntivatoTotEuro, 0) AS decimal(19, 6)) AS Consumato,
				cast(isnull(VC.RiservatoTotEuro, 0) AS decimal(19, 6)) AS Riservato,
				cast(isnull(VC.OrdinatoTotEuro, 0) AS decimal(19, 6)) AS Ordinato,
				cast(isnull(VC.PrevistoTotEuro, 0) AS decimal(19, 6)) AS Previsto,
				cast(isnull(VC.CostoTotEuro, 0) AS decimal(19, 6)) AS TotCosti
		FROM VistaRiepilogoConsComm VC
			LEFT OUTER JOIN TabCommCliVociCostoBase TV ON VC.VoceBase=TV.VoceBase AND TV.TipoVoce=0
		WHERE VC.TipoCosto='CMAT' AND VC.TipoRec IN ('A', 'B')
	UNION ALL
		SELECT	VC.RifComm,
				1 AS Tipo,
				VC.VoceBase,
				isnull(TV.Descrizione, '') AS DesVoce,
				cast(0 AS decimal(16, 6)) AS TotOre,
				cast(isnull(VC.ConsuntivatoTotEuro, 0) AS decimal(19, 6)) AS Consumato,
				cast(isnull(VC.RiservatoTotEuro, 0) AS decimal(19, 6)) AS Riservato,
				cast(isnull(VC.OrdinatoTotEuro, 0) AS decimal(19, 6)) AS Ordinato,
				cast(isnull(VC.PrevistoTotEuro, 0) AS decimal(19, 6)) AS Previsto,
				cast(isnull(VC.CostoTotEuro, 0) AS decimal(19, 6)) AS TotCosti
		FROM VistaRiepilogoConsComm VC
			LEFT OUTER JOIN TabCommCliVociCostoBase TV ON VC.VoceBase=TV.VoceBase AND TV.TipoVoce=0
		WHERE VC.TipoCosto='CMAT' AND VC.TipoRec NOT IN ('A', 'B', 'K', 'N')
	UNION ALL
		SELECT	VC.RifComm,
				2 AS Tipo,
				VC.VoceBase,
				isnull(TV.Descrizione, '') AS DesVoce,
				cast(0 AS decimal(16, 6)) AS TotOre,
				cast(isnull(VC.ConsuntivatoTotEuro, 0) AS decimal(19, 6)) AS Consumato,
				cast(isnull(VC.RiservatoTotEuro, 0) AS decimal(19, 6)) AS Riservato,
				cast(isnull(VC.OrdinatoTotEuro, 0) AS decimal(19, 6)) AS Ordinato,
				cast(isnull(VC.PrevistoTotEuro, 0) AS decimal(19, 6)) AS Previsto,
				cast(isnull(VC.CostoTotEuro, 0) AS decimal(19, 6)) AS TotCosti
		FROM VistaRiepilogoConsComm VC
			LEFT OUTER JOIN TabCommCliVociCostoBase TV ON VC.VoceBase=TV.VoceBase AND TV.TipoVoce=2
		WHERE VC.TipoCosto='LEST' AND VC.TipoRec NOT IN ('A', 'B', 'K', 'N')
	UNION ALL
		SELECT	VC.RifComm,
				3 AS Tipo,
				VC.VoceBase,
				isnull(TV.Descrizione, '') AS DesVoce,
				cast(isnull(STA.OreMacchina, 0) AS decimal(16, 6)) AS TotOre,
				cast(isnull(VC.ConsuntivatoTotEuro, 0) AS decimal(19, 6)) AS Consumato,
				cast(isnull(VC.RiservatoTotEuro, 0) AS decimal(19, 6)) AS Riservato,
				cast(isnull(VC.OrdinatoTotEuro, 0) AS decimal(19, 6)) AS Ordinato,
				cast(isnull(VC.PrevistoTotEuro, 0) AS decimal(19, 6)) AS Previsto,
				cast(isnull(VC.CostoTotEuro, 0) AS decimal(19, 6)) AS TotCosti
		FROM VistaRiepilogoConsComm VC
			LEFT OUTER JOIN TabCommCliVociCostoBase TV ON VC.VoceBase=TV.VoceBase AND TV.TipoVoce=1
			LEFT OUTER JOIN CCBilancioConsLavInt CLI ON VC.IDCommCli=CLI.IDCommCli AND VC.NrRiga=CLI.NrRiga
			LEFT OUTER JOIN StoricoAvanzamenti STA ON CLI.IDStoricoAvanz=STA.Progressivo
		WHERE VC.TipoCosto='LINT' AND VC.IDTabella='LINT' AND VC.TipoRec NOT IN ('A', 'B', 'K', 'N')
	UNION ALL
		SELECT	VC.RifComm,
				3 AS Tipo,
				VC.VoceBase,
				isnull(TV.Descrizione, '') AS DesVoce,
				cast(isnull(RD.QtaGest, 0) AS decimal(16, 6)) AS TotOre,
				cast(isnull(VC.ConsuntivatoTotEuro, 0) AS decimal(19, 6)) AS Consumato,
				cast(isnull(VC.RiservatoTotEuro, 0) AS decimal(19, 6)) AS Riservato,
				cast(isnull(VC.OrdinatoTotEuro, 0) AS decimal(19, 6)) AS Ordinato,
				cast(isnull(VC.PrevistoTotEuro, 0) AS decimal(19, 6)) AS Previsto,
				cast(isnull(VC.CostoTotEuro, 0) AS decimal(19, 6)) AS TotCosti
		FROM VistaRiepilogoConsComm VC
			LEFT OUTER JOIN TabCommCliVociCostoBase TV ON VC.VoceBase=TV.VoceBase AND TV.TipoVoce=1
			LEFT OUTER JOIN RigheDocumenti RD ON VC.RifTesta=RD.IDTesta AND VC.RifRiga=RD.IDRiga
		WHERE VC.TipoCosto='LINT' AND VC.IDTabella='LINTDOC' AND VC.TipoRec NOT IN ('A', 'B', 'K', 'N')
	UNION ALL
		SELECT	VC.RifComm,
				3 AS Tipo,
				VC.VoceBase,
				isnull(TV.Descrizione, '') AS DesVoce,
				cast(0 AS decimal(16, 6)) AS TotOre,
				cast(isnull(VC.ConsuntivatoTotEuro, 0) AS decimal(19, 6)) AS Consumato,
				cast(isnull(VC.RiservatoTotEuro, 0) AS decimal(19, 6)) AS Riservato,
				cast(isnull(VC.OrdinatoTotEuro, 0) AS decimal(19, 6)) AS Ordinato,
				cast(isnull(VC.PrevistoTotEuro, 0) AS decimal(19, 6)) AS Previsto,
				cast(isnull(VC.CostoTotEuro, 0) AS decimal(19, 6)) AS TotCosti
		FROM VistaRiepilogoConsComm VC
			LEFT OUTER JOIN TabCommCliVociCostoBase TV ON VC.VoceBase=TV.VoceBase AND TV.TipoVoce=1
		WHERE VC.TipoCosto='LINT' AND VC.IDTabella<>'LINT' AND VC.IDTabella<>'LINTDOC' AND VC.TipoRec NOT IN ('A', 'B', 'K', 'N')
	UNION ALL
		SELECT	VC.RifComm,
				4 AS Tipo,
				VC.VoceBase,
				isnull(TV.Descrizione, '') AS DesVoce,
				cast(0 AS decimal(16, 6)) AS TotOre,
				cast(isnull(VC.ConsuntivatoTotEuro, 0) AS decimal(19, 6)) AS Consumato,
				cast(isnull(VC.RiservatoTotEuro, 0) AS decimal(19, 6)) AS Riservato,
				cast(isnull(VC.OrdinatoTotEuro, 0) AS decimal(19, 6)) AS Ordinato,
				cast(isnull(VC.PrevistoTotEuro, 0) AS decimal(19, 6)) AS Previsto,
				cast(isnull(VC.CostoTotEuro, 0) AS decimal(19, 6)) AS TotCosti
		FROM VistaRiepilogoConsComm VC
			LEFT OUTER JOIN TabCommCliVociCostoBase TV ON VC.VoceBase=TV.VoceBase AND TV.TipoVoce=3
		WHERE VC.TipoCosto='CDIR' AND VC.TipoRec NOT IN ('A', 'B', 'K', 'N')
	GO

	GRANT SELECT ON BCEA_VistaConsCCliExcel1 TO Metodo98
	GO



	IF EXISTS (SELECT 1 FROM Sys.Objects SO WHERE SO.Name='BCEA_VistaConsCCliExcel2' AND SO.Type='V')
		DROP VIEW BCEA_VistaConsCCliExcel2
	GO

	CREATE VIEW BCEA_VistaConsCCliExcel2 AS
		SELECT	RifComm,
				Tipo,
				(CASE Tipo
					WHEN 0 THEN 'Ricavi'
					WHEN 1 THEN 'Costi Materiali'
					WHEN 2 THEN 'Costi Lavorazioni Esterne'
					WHEN 3 THEN 'Costi Lavorazioni Interne'
					WHEN 4 THEN 'Altri Costi Diretti'
					ELSE ''
				END) AS DesCosto,
				VoceBase,
				DesVoce,
				(CASE sum(TotOre) WHEN 0 THEN NULL ELSE cast(sum(TotOre) AS decimal(16, 6)) END) AS TotOre,
				(CASE sum(TotOre) WHEN 0 THEN NULL ELSE 'H' END) AS UMEff,
				cast(sum(Consumato) AS decimal(19, 6)) AS Consumato,
				cast(sum(Riservato) AS decimal(19, 6)) AS Riservato,
				cast(sum(Ordinato) AS decimal(19, 6)) AS Ordinato,
				cast(sum(Previsto) AS decimal(19, 6)) AS Previsto,
				cast(sum(TotCosti) AS decimal(19, 6)) AS TotCosti
		FROM BCEA_VistaConsCCliExcel1
		GROUP BY RifComm, Tipo, VoceBase, DesVoce
	GO

	GRANT SELECT ON BCEA_VistaConsCCliExcel2 TO Metodo98
	GO

-----------------------------------------------------------------------
-- Fine Aggiunte del 18/11/2010 - Gildo                              --
-----------------------------------------------------------------------



----------------------------------------------
-- Aggiunte del 19/11/2010 - Gildo          --
----------------------------------------------
-- Creazione campo extra codici abbonamento --
----------------------------------------------

	IF NOT EXISTS (SELECT 1 FROM Sys.Objects SO INNER JOIN Sys.Columns SC ON SO.Object_ID=SC.Object_ID WHERE SO.Name='ExtraClienti' AND SO.Type='U' AND SC.Name='CodAbbon')
		ALTER TABLE ExtraClienti ADD
			CodAbbon					varchar(30)			NULL
	GO

	IF NOT EXISTS (SELECT 1 FROM Sys.Objects SO INNER JOIN Sys.Columns SC ON SO.Object_ID=SC.Object_ID WHERE SO.Name='ExtraTesteDoc' AND SO.Type='U' AND SC.Name='CodAbbon')
		ALTER TABLE ExtraTesteDoc ADD
			CodAbbon					varchar(30)			NULL
	GO



	IF EXISTS (SELECT 1 FROM Sys.Objects SO WHERE SO.Name='BCEA_VistaExtraCliFor' AND SO.Type='V')
		DROP VIEW BCEA_VistaExtraCliFor
	GO

	CREATE VIEW BCEA_VistaExtraCliFor AS
		SELECT	CodConto,
				UtenteModifica,
				DataModifica,
				CodiceVecchio,
				DataInserimento,
				CodAbbon
		FROM ExtraClienti
	UNION
		SELECT	CodConto,
				UtenteModifica,
				DataModifica,
				CodiceVecchio,
				DataInserimento,
				cast('' AS varchar(30)) AS CodAbbon
		FROM ExtraFornitori
	GO

	GRANT SELECT ON BCEA_VistaExtraCliFor TO Metodo98
	GO

----------------------------------------------
-- Fine Aggiunte del 19/11/2010 - Gildo     --
----------------------------------------------



--------------------------------------------------------
-- Aggiunte del 10/01/2011 - DANIELE R.
--------------------------------------------------------
-- tabella log consuntivo commessa
	IF NOT EXISTS(SELECT 1 FROM SysObjects WHERE SysObjects.ID=object_id('MET_LOGCONSCOMMESSE') AND SysObjects.Type='U')
		CREATE TABLE MET_LOGCONSCOMMESSE
			(
			COMMESSA		VARCHAR(30)	NOT NULL,
			DATAESECUZIONE	DATETIME	NOT NULL,
			UTENTEMODIFICA	VARCHAR(25)	NOT NULL,
			DATAMODIFICA	DATETIME	NOT NULL,
			PRIMARY KEY (COMMESSA,DATAESECUZIONE)
			)

	GO
	GRANT REFERENCES, SELECT, UPDATE, INSERT, DELETE ON MET_LOGCONSCOMMESSE TO METODO98
	GO

-- vista per stampa Progpg99.rpt
	IF EXISTS (SELECT 1 FROM Sys.Objects SO WHERE SO.Name='MET_VISTAORDINIQUADRO_RES' AND SO.Type='V')
		DROP VIEW MET_VISTAORDINIQUADRO_RES
	GO
	CREATE VIEW MET_VISTAORDINIQUADRO_RES AS
		SELECT
			T.CODCLIFOR,
			A.DSCCONTO1,
			T.ESERCIZIO,
			T.TIPODOC,
			T.NUMERODOC,
			T.BIS,
			T.DATADOC,
			R.IDTESTA,
			R.IDRIGA,
			R.CODART,
			R.UMGEST,
			R.QTAGESTRES
		FROM
			TESTEDOCUMENTI AS T
			INNER JOIN RIGHEDOCUMENTI AS R ON T.PROGRESSIVO=R.IDTESTA
			INNER JOIN ANAGRAFICACF AS A ON A.CODCONTO=T.CODCLIFOR
		WHERE
			R.TIPODOC='AQF' AND R.QTAGESTRES>0
	GO
	GRANT SELECT ON MET_VISTAORDINIQUADRO_RES TO METODO98
	GO
--------------------------------------------------------
-- Fine Aggiunte del 10/01/2011 - DANIELE R.
--------------------------------------------------------



--------------------------------------------------------
-- Aggiunte del 15/03/2011 - DANIELE R.
--------------------------------------------------------
-- IMPORT DOCUMENTI DA EXCEL (HDP)
	IF NOT EXISTS (SELECT 1 FROM SYSOBJECTS WHERE ID = OBJECT_ID('MET_IMPORTORE') AND TYPE = 'U')
	CREATE TABLE MET_IMPORTORE
	(
		TIPODOC			VARCHAR(3)		NOT NULL	DEFAULT ''	,
		ESERCIZIO		DECIMAL(5,0)	NOT NULL	DEFAULT 0	,
		DATADOC			DATETIME								,
		CODFOR			VARCHAR(7)		NOT NULL	DEFAULT ''	,
		ARTICOLO		VARCHAR(50)		NOT NULL	DEFAULT ''	,
		QTA				DECIMAL(16,6)	NOT NULL	DEFAULT 0	,
		PREZZO			DECIMAL(19,6)	NOT NULL	DEFAULT 0	,
		RIFCOMM			VARCHAR(30)		NOT NULL	DEFAULT ''	,
		DATACONS		DATETIME								,
		CCOSTO			VARCHAR(10)		NOT NULL	DEFAULT''	,
		UTENTEMODIFICA	VARCHAR(25)		NOT NULL				,
		DATAMODIFICA	DATETIME NOT	NULL
	)
	GO
	GRANT REFERENCES, SELECT, UPDATE, INSERT, DELETE  ON MET_IMPORTORE TO METODO98
	GO

	IF EXISTS(SELECT 1 FROM SysObjects WHERE ID=object_id('MET_VISTAARTICOLICDC_ORE') AND Type='V')
		DROP VIEW MET_VISTAARTICOLICDC_ORE
	GO
	CREATE VIEW MET_VISTAARTICOLICDC_ORE AS
	SELECT
		A.CODICE,
		A.CODCATEGORIASTAT,
		MTC.VALORE
	FROM
		ANAGRAFICAARTICOLI AS A
		INNER JOIN MET_TABCATSTAT_CDC AS MTC ON A.CODCATEGORIASTAT=MTC.CODICE
	GO
	GRANT SELECT ON MET_VISTAARTICOLICDC_ORE TO METODO98
	GO
--------------------------------------------------------
-- Fine Aggiunte del 15/03/2011 - DANIELE R.
--------------------------------------------------------



--------------------------------------------------------
-- Aggiunte del 05/05/2011 - DANIELE R.
--------------------------------------------------------
DROP VIEW MET_TROVAALTERNATIVO
GO
CREATE VIEW MET_TROVAALTERNATIVO AS
	WITH TROVAALTERNATIVO(LIVELLO, COD, ARTICOLO, ALTERNATIVO,ESAURITO) AS
	(
		SELECT 0 AS LIVELLO, A.CODICEART AS COD, A.CODICEART AS ARTICOLO, A.ARTALTERNATIVO AS ALTERNATIVO, A2.ESAURITO
		FROM
			ANAGRAFICAARTICOLIPROD A
			INNER JOIN ANAGRAFICAARTICOLICOMM AS A2 ON A.CODICEART=A2.CODICEART AND A.ESERCIZIO=A2.ESERCIZIO
		WHERE
			--A.CODICEART = '1840001' AND
			A.ARTALTERNATIVO<>'' AND
			A.ESERCIZIO=(SELECT ESERCIZIOATTIVO FROM TABUTENTI WHERE USERDB=USER_NAME()) AND
			A2.ESAURITO=1 AND
			A.ARTALTERNATIVO<>A.CODICEART
	UNION ALL
		SELECT MB.LIVELLO+1 AS LIVELLO, MB.COD, B.CODICEART AS ARTICOLO, B.ARTALTERNATIVO AS ALTERNATIVO,B2.ESAURITO
			FROM ANAGRAFICAARTICOLIPROD B
			INNER JOIN TROVAALTERNATIVO MB ON B.CODICEART= MB.ALTERNATIVO
			INNER JOIN ANAGRAFICAARTICOLICOMM AS B2 ON B.CODICEART=B2.CODICEART AND B.ESERCIZIO=B2.ESERCIZIO
		WHERE
			B.ESERCIZIO=(SELECT ESERCIZIOATTIVO FROM TABUTENTI WHERE USERDB=USER_NAME()) AND
			B2.ESAURITO=1 AND
			B.ARTALTERNATIVO<>B.CODICEART AND
			MB.LIVELLO<99
	)
SELECT LIVELLO, COD, ARTICOLO, ALTERNATIVO,ESAURITO
FROM TROVAALTERNATIVO
GO
GRANT SELECT ON MET_TROVAALTERNATIVO TO METODO98
GO

IF NOT EXISTS (SELECT 1 FROM SysColumns WHERE SysColumns.ID=(SELECT ID FROM SysObjects WHERE ID=object_id('EXTRAMAG') AND SysObjects.XType='U') AND SysColumns.Name='VERRICAMBIO')
	ALTER TABLE EXTRAMAG ADD VERRICAMBIO VARCHAR(15) DEFAULT ''
GO
UPDATE EXTRAMAG SET VERRICAMBIO='' WHERE VERRICAMBIO='' OR VERRICAMBIO IS NULL
GO

--------------------------------------------------------
-- Fine Aggiunte del 05/05/2011 - DANIELE R.
--------------------------------------------------------



--------------------------------------------------------
-- Aggiunte del 23/06/2011 - DANIELE R.
--------------------------------------------------------
IF EXISTS (SELECT * FROM SYSOBJECTS WHERE NAME = N'CONVERTISCONTO')
	DROP FUNCTION CONVERTISCONTO
GO
CREATE FUNCTION CONVERTISCONTO (@SCONTO AS VARCHAR(20)) RETURNS DECIMAL(16,6) AS
BEGIN
	DECLARE @POS AS SMALLINT
	DECLARE @SC AS DECIMAL(16,6)
	DECLARE @SC1 AS DECIMAL(16,6)
	DECLARE @TEMP AS DECIMAL(16,6)

	SET @SC = 0

	IF (LEN(@SCONTO)>0)
	BEGIN
		SET @SCONTO = REPLACE(REPLACE(REPLACE(REPLACE(@SCONTO,',','.'),'(+','('),'(','-'),')','')
		SET @POS = CHARINDEX('+',@SCONTO)
		IF (@POS > 1)
			BEGIN
				WHILE (@POS > 1)
				BEGIN
					SET @TEMP = CAST(SUBSTRING(@SCONTO,1,@POS-1) AS DECIMAL(16,6))
					SET @SC = @SC + (1 - @SC / 100) * @TEMP
					SET @SCONTO = RIGHT(@SCONTO,LEN(@SCONTO)-@POS)
					SET @POS = CHARINDEX('+',@SCONTO)
				END
				SET @TEMP = CAST(@SCONTO AS DECIMAL(16,6))
				SET @SC = @SC + (1 - @SC / 100) * @TEMP
			END
		ELSE
			BEGIN
				SET @TEMP = CAST(@SCONTO AS DECIMAL(16,6))
				SET @SC = (1 - @SC / 100) * @TEMP
			END
	END
	RETURN @SC
END
GO
GRANT EXECUTE ON CONVERTISCONTO TO METODO98
GO

DROP VIEW MET_VISTALISTINI_CLIFOR_ULTPREZZO_PARTENZA
GO
CREATE VIEW MET_VISTALISTINI_CLIFOR_ULTPREZZO_PARTENZA AS
SELECT
	V.CODCONTO AS CODCLIFOR,
	V.DSCCONTO1 AS DESCRIZIONECLIFOR,
	V.CODCAMBIO,
	T.DESCRIZIONE AS DESCRIZIONEVALUTA,
	V.LISTINO,
	T2.DESCRIZIONE AS DESCRIZIONELISTINO,
	V.CODPAG,
	T3.DESCRIZIONE AS DESCRIZIONEPAGAMENTO,
	E.CODPIANIFICATORE,
	ISNULL(A.GRUPPO,0) AS GRUPPOARTICOLI,
	ISNULL(A.CATEGORIA,0) AS CATEGORIAARTICOLI,
	ISNULL(A.CODCATEGORIASTAT,0) AS CATEGORIASTATARTICOLI,
	L.CODART,
	L.DATAMODIFICA,
	A.DESCRIZIONE AS DESCRIZIONEARTICOLO,
	L.UM AS UMLISTINO,
	L.PREZZO AS PREZZOVALLISTINO,
	L.PREZZOEURO AS PREZZOEUROLISTINO,
	S.UM AS UMULTCOSTO,
	S.PREZZOEURO AS PREZZOEUROULTCOSTO,
	S.DATA AS DATAULTCOSTO,
	S.CODCLIFOR AS CLIFORULTCOSTO,
	REPLACE(REPLACE(REPLACE((CASE WHEN ISNULL(REPLACE((SELECT TOP 1 V1.SCONTO_UNICO FROM VISTAGESTIONEPREZZI AS V1 WHERE V1.CODCLIFOR=V.CODCONTO AND V1.CODART=L.CODART ORDER BY V1.CODCLIFOR,V1.CODART),',','.'),'')='0' THEN '' ELSE
	ISNULL(REPLACE((SELECT TOP 1 V1.SCONTO_UNICO FROM VISTAGESTIONEPREZZI AS V1 WHERE V1.CODCLIFOR=V.CODCONTO AND V1.CODART=L.CODART ORDER BY V1.CODCLIFOR,V1.CODART),',','.'),'') END),'(+','('),'(','-'),')','') AS SCONTOUNICO,
	REPLACE(REPLACE(REPLACE((CASE WHEN ISNULL(REPLACE((SELECT TOP 1 V1.SCONTO_AGGIUNTIVO FROM VISTAGESTIONEPREZZI AS V1 WHERE V1.CODCLIFOR=V.CODCONTO AND V1.CODART=L.CODART ORDER BY V1.CODCLIFOR,V1.CODART),',','.'),'')='0' THEN '' ELSE
	ISNULL(REPLACE((SELECT TOP 1 V1.SCONTO_AGGIUNTIVO FROM VISTAGESTIONEPREZZI AS V1 WHERE V1.CODCLIFOR=V.CODCONTO AND V1.CODART=L.CODART ORDER BY V1.CODCLIFOR,V1.CODART),',','.'),'') END),'(+','('),'(','-'),')','') AS SCONTOAGGIUNTIVO
FROM
	VISTACLIFOR AS V
	LEFT OUTER JOIN TABCAMBI AS T ON V.CODCAMBIO=T.CODICE
	LEFT OUTER JOIN TABLISTINI AS T2 ON V.LISTINO=T2.NRLISTINO
	LEFT OUTER JOIN TABPAGAMENTI AS T3 ON V.CODPAG=T3.CODICE
	LEFT OUTER JOIN LISTINIARTICOLI AS L ON V.LISTINO=L.NRLISTINO
	LEFT OUTER JOIN ANAGRAFICAARTICOLI AS A ON L.CODART=A.CODICE
	LEFT OUTER JOIN EXTRAMAG AS E ON A.CODICE=E.CODART
	LEFT OUTER JOIN STORICOPREZZIARTICOLO AS S ON L.CODART=S.CODARTICOLO AND S.TIPOPREZZO='F' AND S.ULTIMO=1
GO
GRANT SELECT ON MET_VISTALISTINI_CLIFOR_ULTPREZZO_PARTENZA TO METODO98
GO

DROP VIEW MET_VISTALISTINI_CLIFOR_ULTPREZZO
GO
CREATE VIEW MET_VISTALISTINI_CLIFOR_ULTPREZZO AS
SELECT
	*,
	(CASE WHEN SCONTOUNICO='' OR SCONTOUNICO='0' OR SCONTOUNICO IS NULL THEN 0 ELSE DBO.CONVERTISCONTO(SCONTOUNICO) END) AS PERCSCONTOUNICO,
	(CASE WHEN SCONTOAGGIUNTIVO='' OR SCONTOAGGIUNTIVO='0' OR SCONTOAGGIUNTIVO IS NULL THEN 0 ELSE DBO.CONVERTISCONTO(SCONTOAGGIUNTIVO) END) AS PERCSCONTOAGG
FROM
	MET_VISTALISTINI_CLIFOR_ULTPREZZO_PARTENZA AS M
GO
GRANT SELECT ON MET_VISTALISTINI_CLIFOR_ULTPREZZO TO METODO98
GO

IF NOT EXISTS (SELECT 1 FROM SysColumns WHERE SysColumns.ID=(SELECT ID FROM SysObjects WHERE ID=object_id('EXTRAPARDOC') AND SysObjects.XType='U') AND SysColumns.Name='AGGPRZSC')
	ALTER TABLE EXTRAPARDOC ADD AGGPRZSC SMALLINT DEFAULT 0
GO
IF NOT EXISTS(SELECT 1 FROM SysObjects WHERE SysObjects.ID=object_id('AGGPRZSC_CHECK') AND SysObjects.Type='C')
	ALTER TABLE EXTRAPARDOC ADD CONSTRAINT AGGPRZSC_CHECK CHECK(AGGPRZSC In (0,1))
GO
UPDATE EXTRAPARDOC SET AGGPRZSC=0 WHERE AGGPRZSC='' OR AGGPRZSC IS NULL
GO
--------------------------------------------------------
-- Fine Aggiunte del 23/06/2011 - DANIELE R.
--------------------------------------------------------



--------------------------------------------------------
-- Aggiunte del 04/08/2011 - DANIELE R.
--------------------------------------------------------
--DROP TABLE MET_TEMPESPLODIDBA_1
IF NOT EXISTS(SELECT 1 FROM SysObjects WHERE SysObjects.ID=object_id('MET_TEMPESPLODIDBA_1') AND SysObjects.Type='U')
	CREATE TABLE MET_TEMPESPLODIDBA_1
		(
		ARTCOMPOSTO		VARCHAR(50)	NOT NULL,
		LEADTIME		SMALLINT NULL,
		)
GO
GRANT REFERENCES, SELECT, UPDATE, INSERT, DELETE ON MET_TEMPESPLODIDBA_1 TO METODO98
GO

IF EXISTS(SELECT 1 FROM SysObjects WHERE SysObjects.ID=object_id('MET_ESPLODIDBA_1') AND SysObjects.Type='P')
	DROP PROCEDURE MET_ESPLODIDBA_1
GO
CREATE PROCEDURE MET_ESPLODIDBA_1 @PCODART VARCHAR(50) AS
BEGIN

 WITH MultilevelBOM(MATRMACCHINA,Composto,Componente,TLEADTIMECOMPOSTO,TLEADTIMECOMPONENTE,TLEADTIMECUMULATO) AS
(
	SELECT @PCODART AS MATRMACCHINA,AC.Artcomposto AS Composto, DB.Codartcomponente AS Componente, ISNULL(AAP.LEADTIME,0) AS TLEADTIMECOMPOSTO, ISNULL(AAP1.LEADTIME,0) AS TLEADTIMECOMPONENTE, (ISNULL(AAP.LEADTIME,0)+ISNULL(AAP1.LEADTIME,0)) AS TLEADTIMECUMULATO
	FROM Distintaartcomposti AC
		INNER JOIN MET_VISTALEADTIME_PROD AAP ON ac.Artcomposto=AAP.CODICEART
		INNER JOIN DistintaBase DB on AC.Progressivo = DB.Rifprogressivo
		INNER JOIN MET_VISTALEADTIME_PROD AAP1 ON DB.Codartcomponente=AAP1.CODICEART
	WHERE
	AC.Artcomposto = @PCODART AND
	AC.DbaStandard = 1 AND AAP.PROVENIENZA<>0
UNION ALL
	SELECT @PCODART AS MATRMACCHINA,ACR.Artcomposto AS Composto, DBR.Codartcomponente AS Componente, ISNULL(AAP.LEADTIME,0) AS TLEADTIMECOMPOSTO, ISNULL(AAP1.LEADTIME,0) AS TLEADTIMECOMPONENTE, (ISNULL(MB.TLEADTIMECUMULATO,0)+ISNULL(AAP1.LEADTIME,0)) AS TLEADTIMECUMULATO
	FROM Distintaartcomposti ACR
		INNER JOIN MET_VISTALEADTIME_PROD AAP ON ACR.Artcomposto=AAP.CODICEART
		INNER JOIN DistintaBase DBR on ACR.Progressivo = DBR.Rifprogressivo
		INNER JOIN MET_VISTALEADTIME_PROD AAP1 ON DBR.Codartcomponente=AAP1.CODICEART
		INNER JOIN MultilevelBOM MB ON ACR.Artcomposto= MB.Componente
	WHERE
	ACR.DbaStandard = 1 AND AAP.PROVENIENZA<>0
)
	UPDATE EXTRAMAG SET LTCUMULATO=ISNULL((SELECT MAX(TLEADTIMECUMULATO) FROM MultilevelBOM),0) FROM EXTRAMAG WHERE EXTRAMAG.CODART=@PCODART
END
GO
GRANT EXECUTE ON MET_ESPLODIDBA_1 TO METODO98
GO

DROP VIEW MET_VISTALEADTIME_PROD
GO
CREATE VIEW MET_VISTALEADTIME_PROD AS
SELECT
	A.CODICEART,
	A.PROVENIENZA,
	ISNULL((CASE A.PROVENIENZA
	WHEN 0 THEN A.TAPPRONTACQ
	WHEN 1 THEN A.TAPPRONTPROD
	WHEN 2 THEN A.TAPPRONTLAV
	ELSE 0 END),0) AS LEADTIME
FROM
	ANAGRAFICAARTICOLIPROD AS A
WHERE
	ESERCIZIO=(SELECT ESERCIZIOATTIVO FROM TABUTENTI WHERE USERDB=USER_NAME())
GO
GRANT SELECT ON MET_VISTALEADTIME_PROD TO METODO98
GO

IF NOT EXISTS (SELECT 1 FROM SysColumns WHERE SysColumns.ID=(SELECT ID FROM SysObjects WHERE ID=object_id('EXTRAMAG') AND SysObjects.XType='U') AND SysColumns.Name='LTCUMULATO')
	ALTER TABLE EXTRAMAG ADD LTCUMULATO SMALLINT NOT NULL DEFAULT 0
GO

DROP VIEW MET_VISTALEADTIME_CUMULATO
GO
CREATE VIEW MET_VISTALEADTIME_CUMULATO AS
SELECT
	A.CODICEART,
	A.PROVENIENZA,
	ISNULL((CASE A.PROVENIENZA
	WHEN 0 THEN A.TAPPRONTACQ
	ELSE E.LTCUMULATO END ),0) AS LEADTIMECUMULATO
FROM
	ANAGRAFICAARTICOLIPROD AS A INNER JOIN EXTRAMAG AS E ON A.CODICEART=E.CODART
WHERE
	ESERCIZIO=(SELECT ESERCIZIOATTIVO FROM TABUTENTI WHERE USERDB=USER_NAME())
GO
GRANT SELECT ON MET_VISTALEADTIME_CUMULATO TO METODO98
GO
--------------------------------------------------------
-- Fine Aggiunte del 04/08/2011 - DANIELE R.
--------------------------------------------------------



--------------------------------------------------------
-- Aggiunte del 24/10/2011 - DANIELE R.
--------------------------------------------------------
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[MET_DATAFINERICH]') AND xtype IN (N'FN', N'IF', N'TF'))
	DROP FUNCTION MET_DATAFINERICH
GO
CREATE FUNCTION MET_DATAFINERICH(@GGANTICIPO INT,@DATAINIZIORICH DATETIME)
RETURNS DATETIME
AS
BEGIN

DECLARE @DATAFINERICH AS DATETIME

IF @GGANTICIPO>=0
	SELECT
		@DATAFINERICH=ISNULL(MAX(DATACAL), @DATAINIZIORICH)
	FROM
		CALPRODUZIONE
	WHERE
		DATACAL IN (SELECT TOP(ABS(@GGANTICIPO)) DATACAL FROM CALPRODUZIONE WHERE DATACAL > @DATAINIZIORICH AND FESTIVO = 0 ORDER BY DATACAL ASC)
ELSE
	SELECT
		@DATAFINERICH=ISNULL(MIN(DATACAL), @DATAINIZIORICH)
	FROM
		CALPRODUZIONE
	WHERE
		DATACAL IN (SELECT TOP(ABS(@GGANTICIPO)) DATACAL FROM CALPRODUZIONE WHERE DATACAL < @DATAINIZIORICH AND FESTIVO = 0 ORDER BY DATACAL DESC)

RETURN(@DATAFINERICH)
END
GO
GRANT EXECUTE ON MET_DATAFINERICH TO METODO98
GO

DROP VIEW MET_VISTA_RICALCDATAFINERICH
GO
CREATE VIEW MET_VISTA_RICALCDATAFINERICH AS
SELECT
	T.ESERCIZIO,
	R.IDTESTA,
	R.IDRIGA,
	R.CODART,
	R.DATAINIZIORICH,
	R.DATAFINERICH,
	T2.GGANTICIPO,
	DBO.MET_DATAFINERICH(T2.GGANTICIPO,R.DATAINIZIORICH) AS NEWDATAFINERICH
FROM
	TABVINCOLIPRODUZIONE AS T2,
	TESTEORDINIPROD AS T
	INNER JOIN RIGHEORDPROD AS R ON T.PROGRESSIVO=R.IDTESTA
WHERE
	R.CODART IN (SELECT CODICEART FROM ANAGRAFICAARTICOLIPROD AS A WHERE A.PROVENIENZA=1 AND ISNULL(A.TAPPRONTPROD,0)=0 AND ISNULL(A.TAPPROVVPROD,0)=0 AND ESERCIZIO=T.ESERCIZIO)
GO
GRANT SELECT ON MET_VISTA_RICALCDATAFINERICH TO METODO98
GO
--------------------------------------------------------
-- Fine Aggiunte del 24/10/2011 - DANIELE R.
--------------------------------------------------------



-------------------------------------------------
-- Aggiunte del 23/09/2008 - Gildo             --
-------------------------------------------------

/* 07/02/2018 - Remmata la crezione di questa vista, perchè rifatte successivamente, per riallineamento alla versione

	IF  EXISTS(SELECT 1 FROM sys.views SV WHERE SV.Name='BRECEA_VistaClienti')
		DROP VIEW BRECEA_VistaClienti
	GO

	CREATE VIEW BRECEA_VistaClienti AS
		SELECT AC.*,
			TN.Descrizione AS DscNazione,
			ARCF.Esercizio, ARCF.CodContoFatt,
			(CASE WHEN ARCF.StatoContabilita+ARCF.StatoMagazzino+ARCF.StatoOrdini+ARCF.StatoBolle+ARCF.StatoFatture+ARCF.StatoNoteAccredito>0 THEN 'BLOCCATO' ELSE '' END) AS StatoTot,
			ARCF.StatoContabilita+ARCF.StatoMagazzino+ARCF.StatoOrdini+ARCF.StatoBolle+ARCF.StatoFatture+ARCF.StatoNoteAccredito AS ValStatoTot
		FROM AnagraficaCF AC
			LEFT OUTER JOIN TabNazioni TN ON AC.CodNazione=TN.Codice
			LEFT OUTER JOIN AnagraficaRiservatiCF ARCF ON AC.CodConto=ARCF.CodConto AND ARCF.Esercizio=(SELECT EsercizioAttivo FROM TabUtenti WHERE UserDB=cast(user_name() AS varchar(25)))
		WHERE AC.TipoConto='C'
	GO

	GRANT SELECT ON BRECEA_VistaClienti TO Metodo98
	GO

*/

-------------------------------------------------
-- Fine aggiunte del 23/09/2008 - Gildo        --
-------------------------------------------------



--------------------------------------------------------
-- Aggiunte del 16/02/2012 - DANIELE R.
--------------------------------------------------------
IF  EXISTS(SELECT 1 FROM sys.views SV WHERE SV.Name='MET_VISTAGIACENZETOT')
	DROP VIEW MET_VISTAGIACENZETOT
GO
CREATE VIEW MET_VISTAGIACENZETOT AS
SELECT
		STMAG.CODART,
        SUM(STMAG.QTA1UM*STMAG.ORDINATO) AS ORDINATO,
        SUM(STMAG.QTA1UM*STMAG.IMPEGNATO) AS IMPEGNATO,
        SUM(STMAG.QTA2UM*STMAG.ORDINATO2UM) AS ORDINATO2UM,
        SUM(STMAG.QTA2UM*STMAG.IMPEGNATO2UM) AS IMPEGNATO2UM,
        SUM(CASE WHEN STMAG.GIACENZA=1 and STMAG.RESO = 0 THEN STMAG.QTA1UM ELSE 0 END) AS CARICO,
        SUM(CASE WHEN STMAG.GIACENZA2UM=1 and STMAG.RESO = 0 THEN STMAG.QTA2UM ELSE 0 END) AS CARICO2UM,
        SUM(CASE WHEN STMAG.GIACENZA=-1 and STMAG.RESO = 0 THEN STMAG.QTA1UM ELSE 0 END) AS SCARICO,
        SUM(CASE WHEN STMAG.GIACENZA2UM=-1 and STMAG.RESO = 0 THEN STMAG.QTA2UM ELSE 0 END) AS SCARICO2UM,
        SUM(CASE WHEN STMAG.GIACENZA=-1 and STMAG.RESO = 1 THEN STMAG.QTA1UM ELSE 0 END) AS RESODACARICO,
        SUM(CASE WHEN STMAG.GIACENZA2UM=-1 and STMAG.RESO = 1 THEN STMAG.QTA2UM ELSE 0 END) AS RESODACARICO2UM,
        SUM(CASE WHEN STMAG.GIACENZA=1 and STMAG.RESO = 1 THEN STMAG.QTA1UM ELSE 0 END) AS RESODASCARICO,
        SUM(CASE WHEN STMAG.GIACENZA2UM=1 and STMAG.RESO = 1 THEN STMAG.QTA2UM ELSE 0 END) AS RESODASCARICO2UM
FROM
	STORICOMAG STMAG
	INNER JOIN ANAGRAFICADEPOSITI AD ON STMAG.CODDEPOSITO=AD.CODICE AND AD.DISPONIBILE=1
GROUP BY
	CODART
GO
GRANT SELECT ON MET_VISTAGIACENZETOT TO METODO98
GO
--------------------------------------------------------
-- Fine Aggiunte del 16/02/2012 - DANIELE R.
--------------------------------------------------------



--------------------------------------------------------
-- Aggiunte del 29/03/2012 - DANIELE R.
--------------------------------------------------------
	IF NOT EXISTS (SELECT 1 FROM SYSOBJECTS WHERE ID = OBJECT_ID('MET_ASSOCIAMATRICOLE') AND TYPE = 'U')
	CREATE TABLE MET_ASSOCIAMATRICOLE
	(
		RIFCOMMCLI VARCHAR(30) NOT NULL,
		CODART VARCHAR(50) NOT NULL,
		CODMATRICOLA VARCHAR(30) NOT NULL,
		TIPOCOMPONENTE SMALLINT NOT NULL CONSTRAINT DF_MET_ASSOCIAMATRICOLE_TIPOCOMPONENTE DEFAULT 0,
		STATOMATRICOLA SMALLINT NOT NULL CONSTRAINT DF_MET_ASSOCIAMATRICOLE_STATOMATRICOLA DEFAULT 0,
		GARANZIAATTIVA SMALLINT NOT NULL CONSTRAINT DF_MET_ASSOCIAMATRICOLE_GARANZIAATTIVA DEFAULT 0,
		DATAINIZIOGARANZIA DATETIME NULL,
		NOTEESTESE VARCHAR(255) NULL,
		UTENTEMODIFICA VARCHAR(25) NOT NULL,
		DATAMODIFICA DATETIME NOT NULL,

		CONSTRAINT PK_Met_AssociaMatricole PRIMARY KEY
			(RIFCOMMCLI, CODART, CODMATRICOLA)
	)
	GO
	GRANT REFERENCES, SELECT, UPDATE, INSERT, DELETE ON MET_ASSOCIAMATRICOLE TO METODO98
	GO

	IF  EXISTS(SELECT 1 FROM sys.views SV WHERE SV.Name='MET_VISTA_MATRICOLE')
		DROP VIEW MET_VISTA_MATRICOLE
	GO
	CREATE VIEW MET_VISTA_MATRICOLE AS
		SELECT DISTINCT
			RD.CodArt,
			RDM.CODMATRICOLA,
			AA.Descrizione AS DescrArt
		FROM RigheDocumenti RD
			INNER JOIN RIGHEDOCMATRICOLE RDM ON RD.IDTesta=RDM.IDTesta AND RD.IDRiga=RDM.IDRiga
			INNER JOIN AnagraficaArticoli AA ON RD.CodArt=AA.Codice
	GO
	GRANT SELECT ON MET_VISTA_MATRICOLE TO METODO98
	GO
--------------------------------------------------------
-- Fine Aggiunte del 29/03/2012 - DANIELE R.
--------------------------------------------------------



--------------------------------------------------------
-- Aggiunte del 22/05/2012 - DANIELE R.
--------------------------------------------------------
	IF  EXISTS(SELECT 1 FROM sys.views SV WHERE SV.Name='MET_VISTAOREDIP_TRASF')
		DROP VIEW MET_VISTAOREDIP_TRASF
	GO
	CREATE VIEW MET_VISTAOREDIP_TRASF AS
	SELECT
		T.TIPODOC,
		T.PROGRESSIVO,
		T.NUMRIFDOC,
		R.RIFCOMMCLI,
		R.CONTOCDC,
		ac.CliFatt,
		R.DATACONSEGNA,
		A2.CODICE,
		A2.DESCRIZIONE,
		(CASE WHEN T2.B='I' THEN SUM(R.QTAGEST) ELSE 0 END) AS INSTALLAZIONE,
		(CASE WHEN T2.B='A' THEN SUM(R.QTAGEST) ELSE 0 END) AS ASSISTENZA,
		(CASE WHEN T2.B='G' THEN SUM(R.QTAGEST) ELSE 0 END) AS GARANZIA,
		(CASE WHEN T2.B='D' THEN SUM(R.QTAGEST) ELSE 0 END) AS DIARIA,
		(CASE WHEN T2.B='VI' THEN SUM(R.QTAGEST) ELSE 0 END) AS VIAGGIOINSTALLAZIONE,
		(CASE WHEN T2.B='VA' THEN SUM(R.QTAGEST) ELSE 0 END) AS VIAGGIOASSISTENZA,
		(CASE WHEN T2.B='VG' THEN SUM(R.QTAGEST) ELSE 0 END) AS VIAGGIOGARANZIA
	FROM
		TESTEDOCUMENTI AS T
		INNER JOIN RIGHEDOCUMENTI AS R ON T.PROGRESSIVO=R.IDTESTA
		INNER JOIN ANAGRAFICAARTICOLI AS A ON A.CODICE=R.CODART
		INNER JOIN ANAGRAFICAARTICOLI AS A2 ON A2.CODICE=A.CODICEPRIMARIO
		INNER JOIN MET_VISTAVARIANTI AS MV ON MV.CODICE=R.CODART
		INNER JOIN TABVARIANTI AS T2 ON T2.VARIANTE=MV.CV1
		LEFT OUTER JOIN AnagraficaCommesse AS AC ON ac.RifComm=r.RIFCOMMCLI
	WHERE
		R.TIPODOC = 'HDP' AND T2.B<>''
	GROUP BY
		T.TIPODOC,
		T.PROGRESSIVO,
		T.NUMRIFDOC,
		R.RIFCOMMCLI,
		R.CONTOCDC,
		ac.CliFatt,
		R.DATACONSEGNA,
		A2.CODICE,
		A2.DESCRIZIONE,
		T2.B
	GO
	GRANT SELECT ON MET_VISTAOREDIP_TRASF TO METODO98
	GO

	IF  EXISTS(SELECT 1 FROM sys.views SV WHERE SV.Name='MET_VISTAOREDIP_TRASF_TOT')
		DROP VIEW MET_VISTAOREDIP_TRASF_TOT
	GO
	CREATE VIEW MET_VISTAOREDIP_TRASF_TOT AS
	SELECT
		TIPODOC,
		PROGRESSIVO,
		NUMRIFDOC,
		RIFCOMMCLI,
		CONTOCDC,
		CliFatt,
		DATACONSEGNA,
		CODICE,
		DESCRIZIONE,
		SUM(INSTALLAZIONE) AS INSTALLAZIONE,
		SUM(ASSISTENZA) AS ASSISTENZA,
		SUM(GARANZIA) AS GARANZIA,
		SUM(DIARIA) AS DIARIA,
		SUM(VIAGGIOINSTALLAZIONE) AS VIAGGIOINSTALLAZIONE,
		SUM(VIAGGIOASSISTENZA) AS VIAGGIOASSISTENZA,
		SUM(VIAGGIOGARANZIA) AS VIAGGIOGARANZIA,
		SUM(INSTALLAZIONE)+SUM(ASSISTENZA)+SUM(GARANZIA)+SUM(VIAGGIOINSTALLAZIONE)+SUM(VIAGGIOASSISTENZA)+SUM(VIAGGIOGARANZIA) AS TOTORE
	FROM
		MET_VISTAOREDIP_TRASF
	GROUP BY
		TIPODOC,
		PROGRESSIVO,
		NUMRIFDOC,
		RIFCOMMCLI,
		CONTOCDC,
		CliFatt,
		DATACONSEGNA,
		CODICE,
		DESCRIZIONE
	GO
	GRANT SELECT ON MET_VISTAOREDIP_TRASF_TOT TO METODO98
	GO
--------------------------------------------------------
-- Fine Aggiunte del 22/05/2012 - DANIELE R.
--------------------------------------------------------



--------------------------------------------------------
-- Aggiunte del 28/05/2012 - Gildo             --
--------------------------------------------------------
-- Aggiunta indice univoco tabella matricole commesse --
--------------------------------------------------------

	IF NOT EXISTS (SELECT 1 FROM Sys.Indexes SI WHERE SI.Name='IX_Met_AssociaMatricole_ArtMatr')
		CREATE UNIQUE NONCLUSTERED INDEX IX_Met_AssociaMatricole_ArtMatr ON Met_AssociaMatricole
			(CodArt, CodMatricola)
	GO

--------------------------------------------------------
-- Creazione viste per AIOT Matricole                 --
--------------------------------------------------------

	IF EXISTS (SELECT 1 FROM Sys.Objects SO WHERE SO.Name='Met_Vista_MatrCommCli' AND SO.Type='V')
		DROP VIEW Met_Vista_MatrCommCli
	GO

	CREATE VIEW Met_Vista_MatrCommCli AS
		SELECT	MAM.RifCommCli, AC.Progressivo AS ProgCommCli,
				MAM.CodArt, AA.Descrizione AS DescrArt,
				MAM.CodMatricola,
				MAM.TipoComponente,
				MAM.StatoMatricola,
				MAM.GaranziaAttiva,
				MAM.DataInizioGaranzia,
				MAM.NoteEstese
		FROM Met_AssociaMatricole MAM
			INNER JOIN AnagraficaCommesse AC ON MAM.RifCommCli=AC.RifComm
			INNER JOIN AnagraficaArticoli AA ON MAM.CodArt=AA.Codice
	GO

	GRANT SELECT ON Met_Vista_MatrCommCli TO Metodo98
	GO



	IF EXISTS (SELECT 1 FROM Sys.Objects SO WHERE SO.Name='Met_Vista_RigDocMatr' AND SO.Type='V')
		DROP VIEW Met_Vista_RigDocMatr
	GO

	CREATE VIEW Met_Vista_RigDocMatr AS
		SELECT	VDB.*,
				RDM.CodMatricola
		FROM MET_VistaDocumentiBase VDB
			INNER JOIN RigheDocMatricole RDM ON VDB.IDTesta=RDM.IDTesta AND VDB.ProgRigaDoc=RDM.IDRiga
	GO

	GRANT SELECT ON Met_Vista_RigDocMatr TO Metodo98
	GO

--------------------------------------------------------
-- Fine aggiunte del 28/05/2012 - Gildo               --
--------------------------------------------------------



--------------------------------------------------------
-- Aggiunte del 12/07/2012 - Ciano
-- integrazione Pdm
--------------------------------------------------------
IF NOT EXISTS(SELECT SYSCOLUMNS.NAME FROM SYSCOLUMNS WHERE SYSCOLUMNS.ID=(SELECT ID FROM SYSOBJECTS WHERE ID=object_id('extramag') AND SYSOBJECTS.XTYPE='U') AND SYSCOLUMNS.NAME='Revisione')
	ALTER TABLE EXTRAMAG ADD Revisione INT
GO
--------------------------------------------------------
-- Fine Aggiunte del 12/07/2012 - Ciano
--------------------------------------------------------



---------------------------------------------------------
-- Aggiunte del 30/07/2012 - Gildo                     --
---------------------------------------------------------
-- Aggiunta campo extra Origine in parametri documenti --
---------------------------------------------------------

	IF NOT EXISTS (SELECT 1 FROM Sys.Objects SO INNER JOIN Sys.Columns SC ON SO.Object_ID=SC.Object_ID WHERE SO.Name='ExtraParDoc' AND SO.Type='U' AND SC.Name='Origine')
		ALTER TABLE ExtraParDoc ADD
			Origine						varchar(25)			NULL
	GO

---------------------------------------------------------
-- Fine aggiunte del 30/07/2012 - Gildo                --
---------------------------------------------------------



/*
ciano - modifica trigger esistente per conflitti record generati da PDM - 03/08/2012
*/
ALTER trigger [dbo].[TI_UTENTE_CREAZIONE_AA] ON [dbo].[EXTRAMAG] FOR INSERT AS
BEGIN
    DECLARE
       @NUMROWS  INT,
       @strData varchar(10),
       @ERRNO    INT,
       @ERRMSG   VARCHAR(255)

    SELECT  @NUMROWS = @@ROWCOUNT
    IF @NUMROWS = 0
       RETURN

	SET @strData=right('00' + cast(day(getdate()) as varchar(2)), 2) + '-' + right('00' + cast(month(getdate()) as varchar(2)), 2) + '-' + right('0000' + cast(year(getdate()) as varchar(4)), 4)

    /*  UPDATE EXTRAMAG UTENTE, DATA CREAZIONE */
    UPDATE EXTRAMAG
	SET UTENTECREAZIONE=(SELECT USERID FROM TABUTENTI WHERE USERDB = USER_NAME()),
		DATACREAZIONE=convert(datetime, @strData, 105)
    FROM   EXTRAMAG T2, INSERTED T1
    WHERE  T2.CODART = T1.CODART and T2.UTENTEMODIFICA <>'PDM'

    RETURN

/*  ERRORS HANDLING  */
ERROR:
    raiserror (@errmsg, 1, 1)
    ROLLBACK  TRANSACTION
END
GO



---------------------------------------------------------
-- Aggiunte del 05/09/2012 - Daniele A                 --
---------------------------------------------------------
-- Aggiunta campo extra Origine in parametri documenti --
---------------------------------------------------------
IF NOT EXISTS (SELECT 1 FROM SYSOBJECTS WHERE ID = OBJECT_ID('TESTA_WIP') AND TYPE = 'U')
	CREATE TABLE TESTA_WIP
	(
		DESCRIZIONEWIP VARCHAR(100) NOT NULL,
		DATACALCOLO DATETIME NOT NULL,
		NRLISTINO DECIMAL (10,0),
		IDTESTACOMM decimal(10, 0) NOT NULL ,
		UTENTEMODIFICA varchar (25),
		DATAMODIFICA datetime NULL
		primary key (DESCRIZIONEWIP,IDTESTACOMM)
	)
GO

GRANT  REFERENCES ,  SELECT ,  UPDATE ,  INSERT ,  DELETE  ON TESTA_WIP to metodo98
go

IF NOT EXISTS (SELECT 1 FROM SYSOBJECTS WHERE ID = OBJECT_ID('RIGHE_WIP') AND TYPE = 'U')
CREATE TABLE RIGHE_WIP
(
	DESCRIZIONEWIP VARCHAR(100) NOT NULL ,
	IDTESTACOMM decimal(10, 0) NOT NULL ,
	IDRIGACOMM int NOT NULL ,
	RIFCOMM varchar (30),
	CODART varchar (50),
	TOTALEPX_A decimal(16, 6) NOT NULL ,
	TOTALEPX_B decimal(16, 6) NOT NULL ,
	TOTALEPX_B_BOLLE VARCHAR(250) NOT NULL ,
	TOTALEPXINT_B decimal(16, 6) NOT NULL ,
	TOTALEPXEST_B decimal(16, 6) NOT NULL ,
	TOTALEPX_C decimal(16, 6) NOT NULL ,
	TOTALEPX_GEN decimal(16, 6) NOT NULL ,
	UTENTEMODIFICA varchar (25),
	DATAMODIFICA datetime NULL
	primary key (DESCRIZIONEWIP,IdTestaComm,IdRigaComm)
)
GO
GRANT  REFERENCES ,  SELECT ,  UPDATE ,  INSERT ,  DELETE  ON RIGHE_WIP to metodo98
go

IF EXISTS (SELECT 1 FROM Sys.Objects SO WHERE SO.Name='VISTA_WIP' AND SO.Type='V')
	DROP VIEW VISTA_WIP
GO
Create view VISTA_WIP as
	Select
			DescrizioneWip,DataCalcolo,NrListino
		From
			TESTA_WIP
		group by
			DescrizioneWip,DataCalcolo,NrListino
go

grant select on VISTA_WIP to metodo98
go



---------------------------------------------------------
-- Fine aggiunte del 05/09/2012 - Daniele A            --
---------------------------------------------------------



----------------------------------------------------------------------------------------------------
-- 07/12/2012
-- Script per agente modifica legami ciclo lavortazione
-- Per anticipo correzione anomalia #11643
-- Query di inserimento legami mancanti
IF EXISTS(SELECT 1 FROM SysObjects WHERE SysObjects.ID=object_id('AGGLEGAMICMPCICLO') AND SysObjects.Type='P')
	DROP PROCEDURE AGGLEGAMICMPCICLO
GO
CREATE PROCEDURE AGGLEGAMICMPCICLO @IDTESTACICLO DECIMAL(10,0) AS
BEGIN
	INSERT INTO TABCOMPONENTIDBACICLOORD
		SELECT TCO.PROGRESSIVO,
				(SELECT TOP 1 NUMEROFASE FROM RIGHECICLOORDINE WHERE RIGHECICLOORDINE.PROGRESSIVO = TCO.PROGRESSIVO ORDER BY RIGHECICLOORDINE.POSIZIONE ASC) AS NUMEROFASE,
				IOP.IDIMPEGNO AS IDRIGADBA,
				'UPDATE#11643' AS UTENTEMODIFICA,
				GETDATE() AS DATAMODIFICA
			FROM
				TESTEORDINIPROD TOR
				INNER JOIN RIGHEORDPROD ROP ON TOR.PROGRESSIVO = ROP.IDTESTA
				INNER JOIN IMPEGNIORDPROD IOP ON ROP.IDTESTA = IOP.IDTESTA AND ROP.IDRIGA = IOP.IDRIGA
				INNER JOIN TESTACICLOORDINE TCO ON ROP.IDTESTA = TCO.IDTESTACOMM AND ROP.IDRIGA = TCO.IDRIGACOMM
				LEFT OUTER JOIN TABCOMPONENTIDBACICLOORD DBC ON TCO.PROGRESSIVO = DBC.PROGRESSIVO AND IOP.IDIMPEGNO = DBC.IDRIGADBA
			WHERE
				DBC.NUMEROFASE IS NULL
--				ESCLUDO I CASI ANOMALI, DI CICLI D'ORDINE SENZA ALCUNA FASE
				AND (SELECT TOP 1 NUMEROFASE FROM RIGHECICLOORDINE WHERE RIGHECICLOORDINE.PROGRESSIVO = TCO.PROGRESSIVO) IS NOT NULL
--				AGGIUNGERE IL FILTRO SUL NUMERO DI COMMESSA REGISTRATO
				AND TCO.PROGRESSIVO = @IDTESTACICLO
END
GO
GRANT EXECUTE ON AGGLEGAMICMPCICLO TO METODO98
GO
-----------------------------------------------------------------------------------------------------



---------------------------------------------------------
-- Aggiunte del 07/12/2012 - Daniele R                 --
---------------------------------------------------------
-- VISTE PER RIGHE DOCUMENTI COLLEGATE AL PIANO PRODUZIONE
---------------------------------------------------------
IF EXISTS (SELECT 1 FROM Sys.Objects SO WHERE SO.Name='MET_VISTA_RIGHEDOCPIANO_COLLEGATE' AND SO.Type='V')
	DROP VIEW MET_VISTA_RIGHEDOCPIANO_COLLEGATE
GO
CREATE VIEW MET_VISTA_RIGHEDOCPIANO_COLLEGATE AS
SELECT
	PP.IDTESTADOC AS RIFTESTADOC,
	PP.IDRIGADOC AS RIFRIGADOC,
	PP.IDIMPEGNO AS RIFIMPEGNO,
	ISNULL((SELECT TOP 1 CODUBICAZIONE FROM UBICAZIONIARTICOLI WHERE CODICEART=PP.CODART AND CODDEPOSITO='100' ORDER BY CODUBICAZIONE),'') AS UBIC100,
	PP1.*
FROM
	PROGPRODUZIONE PP
	INNER JOIN PROGPRODUZIONEDOC PPD ON PP.PROG_ID=PPD.RIF_ID AND PP.NOMEPIANIF=PPD.NOMEPIANIF
	INNER JOIN PROGPRODUZIONE PP1 ON PPD.PROG_ID=PP1.PROG_ID AND PPD.NOMEPIANIF=PP1.NOMEPIANIF
/*
WHERE
PP.NOMEPIANIF='02_pianificazione_ricambi'AND
PP.IDTESTADOC=131103 AND PP.IDRIGADOC=1 AND PP.TIPO=3
*/
GO
GRANT SELECT ON MET_VISTA_RIGHEDOCPIANO_COLLEGATE TO METODO98
GO

IF EXISTS (SELECT 1 FROM Sys.Objects SO WHERE SO.Name='MET_VISTA_RIGHEDOCPIANO' AND SO.Type='V')
	DROP VIEW MET_VISTA_RIGHEDOCPIANO
GO
CREATE VIEW MET_VISTA_RIGHEDOCPIANO AS
SELECT
	MRM.RIFPROGRESSIVO AS PROGRMISSIONE,
	PP.NOMEPIANIF,
	RD.IDTESTA,
	RD.IDRIGA,
	(SELECT TOP 1 SITUAZIONE+QTAIMP-QTAORD FROM PROGPRODUZIONE WHERE NOMEPIANIF=PP.NOMEPIANIF AND CODART=RD.CODART ORDER BY ORDINELETTURA) AS GIACENZA,
	-- 23/04/2015 ELIMINATA SCMIMINA DAL CALCOLO GIACENZA  REBELLATO
	--(SELECT TOP 1 SITUAZIONE+QTAIMP-QTAORD+SCMINIMA FROM PROGPRODUZIONE WHERE NOMEPIANIF=PP.NOMEPIANIF AND CODART=RD.CODART ORDER BY ORDINELETTURA) AS GIACENZA,
	--11/04/2017 Modificato Barcodedoc Con Campo Idtesta Dell'ordine Invece Che Rifprogressivo Della Missione (Reffo D)
	--'*'+RIGHT('0000000000'+CAST(MRM.RIFPROGRESSIVO AS VARCHAR),10)+'*' AS BARCODEDOC,
	'*'+RIGHT('0000000000'+CAST(RD.IDTESTA AS VARCHAR),10)+'*' AS BARCODEDOC,
	ISNULL((SELECT TOP 1 CODUBICAZIONE FROM UBICAZIONIARTICOLI WHERE CODICEART=RD.CODART AND CODDEPOSITO='020' ORDER BY CODUBICAZIONE),'') AS UBIC020
FROM
	RIGHEDOCUMENTI RD
	LEFT OUTER JOIN MOXWA_RigheMissione MRM ON RD.IDTESTA=MRM.IDTESTADOC AND RD.IDRIGA=MRM.IDRIGADOC
	inner JOIN PROGPRODUZIONE PP ON RD.IDTESTA=PP.IDTESTADOC AND RD.IDRIGA=PP.IDRIGADOC AND PP.TIPO=3
/*
WHERE RD.idtesta=131103 AND RD.IDRIGA=1 AND  PP.NOMEPIANIF='02_pianificazione_ricambi'
*/
GO
GRANT SELECT ON MET_VISTA_RIGHEDOCPIANO TO METODO98
GO

--VISTE STAMPA ANALISI PER IMPEGNI COMMESSA CLIENTE (91)
IF EXISTS (SELECT 1 FROM Sys.Objects SO WHERE SO.Name='MET_VISTAARTIMPCOMMCLI' AND SO.Type='V')
	DROP VIEW MET_VISTAARTIMPCOMMCLI
GO
CREATE VIEW MET_VISTAARTIMPCOMMCLI
AS
    SELECT DISTINCT
        PPR.NOMEPIANIF ,
        IOP.RIFCOMMCLI ,
        IOP.CODART ,
        ( CASE WHEN PPR.SITUAZIONE < 0 THEN 1
               ELSE 0
          END ) AS MANCANTE
    FROM
        IMPEGNIORDPROD IOP
        INNER JOIN PROGPRODUZIONE PPR ON IOP.IDTESTA = PPR.IDTESTADOC
                                         AND IOP.IDRIGA = PPR.IDRIGADOC
                                         AND IOP.IDIMPEGNO = PPR.IDIMPEGNO
                                         AND PPR.TIPO=7
GO
GRANT SELECT ON MET_VISTAARTIMPCOMMCLI TO METODO98
GO

IF EXISTS (SELECT 1 FROM Sys.Objects SO WHERE SO.Name='MET_VISTADOCIMPCOMMCLI' AND SO.Type='V')
	DROP VIEW MET_VISTADOCIMPCOMMCLI
GO
CREATE VIEW MET_VISTADOCIMPCOMMCLI AS
SELECT
    VIC.NOMEPIANIF,VIC.MANCANTE,VIC.RIFCOMMCLI AS RIFCOMMCLIIMP,
	ACF.CODCONTO,ACF.DSCCONTO1+' '+ACF.DSCCONTO2 AS RAGSOC,
	(CASE WHEN LTRIM(TD.BIS)='' THEN
	 TD.TIPODOC+'/'+CAST(TD.ESERCIZIO AS VARCHAR)+'/'+RIGHT('00000'+CAST(TD.NUMERODOC AS VARCHAR),5) ELSE
     TD.TIPODOC+'/'+CAST(TD.ESERCIZIO AS VARCHAR)+'/'+RIGHT('00000'+CAST(TD.NUMERODOC AS VARCHAR),5)+'/'+TD.BIS
	 END) AS RIFDOC,TD.DATADOC,XD.DataRich,
    RD.*
FROM
    RIGHEDOCUMENTI RD
	INNER JOIN EXTRARIGHEDOC XD ON RD.IDTESTA=XD.IDTESTA AND RD.IDRIGA=XD.IDRIGA
	INNER JOIN TESTEDOCUMENTI TD ON RD.IDTESTA=TD.PROGRESSIVO
	INNER JOIN PARAMETRIDOC AS PD ON TD.TIPODOC=PD.CODICE
	INNER JOIN ANAGRAFICACF ACF ON TD.CODCLIFOR=ACF.CODCONTO
    INNER JOIN MET_VISTAARTIMPCOMMCLI VIC ON RD.CODART = VIC.CODART
WHERE
    PD.TIPO='O' AND PD.CLIFOR='F' AND LEFT(PD.CODICE,1)='O' AND RD.QTAGESTRES<>0 AND VIC.MANCANTE=1
GO
GRANT SELECT ON MET_VISTADOCIMPCOMMCLI TO METODO98
GO

---------------------------------------------------------
-- Fine aggiunte del 07/12/2012 - Daniele R            --
---------------------------------------------------------



---------------------------------------------------------
-- Aggiunte del 28/02/2013 - Daniele A            	   --
---------------------------------------------------------
-- PROCEDURA DI RISCHEDULAZIONE PER UNA SINGOLA COMMESSA -----------------------------
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'dbo.RISCHEDCOMMCLI') AND type in (N'P', N'PC'))
DROP PROCEDURE dbo.RISCHEDCOMMCLI
GO

-- PROCEDURA DI RISCHEDULAZIONE PER UNA SINGOLA COMMESSA -----------------------------
CREATE PROCEDURE dbo.RISCHEDCOMMCLI @RIFCOMMCLI VARCHAR(30),@DELTAGGRISCHED INT,@PUTENTE VARCHAR(25)
as
-- Procedura di rischedulazione ordini clienti
-- Rischedula tutti gli ordini che referenziano la commessa cliente @RIFCOMMCLI
-- di un numero di giorni LAVORATIVI pari a @DELTAGGRISCHED
BEGIN
	-- Righe ordini produzione
	update
			RIGHEORDPROD
		set
			DATAINIZIORICH	=	DBO.MET_DATAFINERICH(@DeltaGGRisched,CAST(rop.DATAINIZIORICH AS DATE)),
			DATAFINERICH	=	DBO.MET_DATAFINERICH(@DeltaGGRisched,CAST(rop.DATAFINERICH AS DATE)),
			UTENTEMODIFICA	=	@PUTENTE,
			DATAMODIFICA	=	GETDATE()
		from
			RIGHEORDPROD rop
		where
			rop.STATOORDINE <> 3
			and rop.RifCommCli = @RIFCOMMCLI


	-- Impegni ordini produzione
	update
			IMPEGNIORDPROD
		set
			DATAIMPEGNORICH =	DBO.MET_DATAFINERICH(@DeltaGGRisched,CAST(iop.DATAIMPEGNORICH AS DATE)),
			DATAIMPEGNOSCH =	DBO.MET_DATAFINERICH(@DeltaGGRisched,CAST(iop.DATAIMPEGNOSCH AS DATE)),
			UTENTEMODIFICA	=	@PUTENTE,
			DATAMODIFICA	=	GETDATE()
		from
			IMPEGNIORDPROD iop
			inner join RIGHEORDPROD rop on iop.idtesta = rop.idtesta and iop.IDRIGA = rop.IDRIGA
		where
			iop.STATOIMPEGNO <> 2
			and rop.RifCommCli = @RIFCOMMCLI

	-- storico magazzino ordinato
	update
			STORICOMAG
		set
			DATADISP = rop.DATAFINERICH,
			UTENTEMODIFICA	=	@PUTENTE,
			DATAMODIFICA	=	GETDATE()
		from
			RIGHEORDPROD rop
			inner join STORICOMAG sma on rop.IDTESTA = sma.IDTESTA and rop.IDRIGA = sma.RIGADOC
									  and sma.TIPOMOV in (5, 6)
		where
			rop.STATOORDINE <> 3
			and rop.RifCommCli = @RIFCOMMCLI

	-- storico magazzino impegnato

	update
			STORICOMAG
		set
			DATADISP = iop.DATAIMPEGNORICH,
			UTENTEMODIFICA	=	@PUTENTE,
			DATAMODIFICA	=	GETDATE()
		from
			IMPEGNIORDPROD iop
			inner join RIGHEORDPROD rop on iop.idtesta = rop.idtesta and iop.IDRIGA = rop.IDRIGA
			inner join STORICOMAG sma on iop.IDTESTA = sma.IDTESTA and iop.IDRIGA = sma.RIGADOC and iop.IDIMPEGNO = sma.RIGACOMP
									  and sma.TIPOMOV in (7, 8)
		where
			iop.STATOIMPEGNO <> 2
			and rop.RifCommCli = @RIFCOMMCLI

	-- Righe fasi ciclo d'ordine

	update
			RIGHECICLOORDINE
		set
			DATAINIZIOOPSCHEDULATA = DBO.MET_DATAFINERICH(@DeltaGGRisched,CAST(rco.DATAINIZIOOPSCHEDULATA AS DATE)),
			ORAINIZIOOPSCHEDULATA =	DBO.MET_DATAFINERICH(@DeltaGGRisched,CAST(rco.ORAINIZIOOPSCHEDULATA AS DATE)),
			DATAFINEOPSCHEDULATA =	DBO.MET_DATAFINERICH(@DeltaGGRisched,CAST(rco.DATAFINEOPSCHEDULATA AS DATE)),
			ORAFINEOPSCHEDULATA = DBO.MET_DATAFINERICH(@DeltaGGRisched,CAST(rco.ORAFINEOPSCHEDULATA AS DATE)),
			UTENTEMODIFICA	=	@PUTENTE,
			DATAMODIFICA	=	GETDATE()
		from
			RIGHECICLOORDINE rco
			inner join TESTACICLOORDINE tco on rco.PROGRESSIVO = tco.PROGRESSIVO
			inner join RIGHEORDPROD rop on tco.IDTESTACOMM = rop.IDTESTA and tco.IDRIGACOMM = rop.IDRIGA
		where
			rco.STATOOPERAZIONE <> 2
			and rop.STATOORDINE <> 3
			and rop.RifCommCli = @RIFCOMMCLI

	-- Date schedulazione negli ordini di produzione
	update
			RIGHEORDPROD
		set
			DATAINIZIOSCHED	=	isnull(
								(select top 1 DATAINIZIOOPSCHEDULATA
									from
										TESTACICLOORDINE tco
										inner join RIGHECICLOORDINE rco on tco.PROGRESSIVO = rco.PROGRESSIVO
									where
										tco.IDTESTACOMM = IDTESTA and tco.IDRIGACOMM = IDRIGA
									order by
										POSIZIONE asc),
								DATAINIZIORICH),
			DATAFINESCHED =		isnull(
								(select top 1 DATAFINEOPSCHEDULATA
									from
										TESTACICLOORDINE tco
										inner join RIGHECICLOORDINE rco on tco.PROGRESSIVO = rco.PROGRESSIVO
									where
										tco.IDTESTACOMM = IDTESTA and tco.IDRIGACOMM = IDRIGA
									order by
										POSIZIONE desc),
								DATAFINERICH),
			UTENTEMODIFICA	=	@PUTENTE,
			DATAMODIFICA	=	GETDATE()
		from
			RIGHEORDPROD rop
			inner join TESTACICLOORDINE tco on rop.idtesta =tco.IDTESTACOMM and rop.idriga = tco.IDRIGACOMM
		where
			STATOORDINE <> 3
			and RifCommCli = @RIFCOMMCLI
END
GO
GRANT EXECUTE ON DBO.RISCHEDCOMMCLI TO METODO98
GO
---------------------------------------------------------
-- Fine aggiunte del 28/12/2013 - Daniele A            --
---------------------------------------------------------



--------------------------------------------------------
-- Aggiunte del 28/02/2013 - DANIELE R
--------------------------------------------------------
IF NOT EXISTS(SELECT SYSCOLUMNS.NAME FROM SYSCOLUMNS WHERE SYSCOLUMNS.ID=(SELECT ID FROM SYSOBJECTS WHERE ID=object_id('IMPEGNIORDPROD') AND SYSOBJECTS.XTYPE='U') AND SYSCOLUMNS.NAME='Revisione')
	ALTER TABLE IMPEGNIORDPROD ADD REVISIONE INT
GO

DROP TRIGGER AGGREVISIONEIOP
GO
CREATE TRIGGER AGGREVISIONEIOP
   ON  STORICOMOVIMPPROD
   AFTER INSERT, UPDATE
AS
BEGIN
      SET NOCOUNT ON;

      UPDATE IMPEGNIORDPROD SET REVISIONE=E.REVISIONE FROM
      IMPEGNIORDPROD AS I
      INNER JOIN INSERTED AS S ON I.IDTESTA=S.RIFTESTA AND I.IDRIGA=S.RIFRIGA AND I.IDIMPEGNO=S.RIFIMPEGNO
      INNER JOIN EXTRAMAG AS E ON I.CODART=E.CODART
      WHERE I.IDTESTA=S.RIFTESTA AND I.IDRIGA=S.RIFRIGA AND I.IDIMPEGNO=S.RIFIMPEGNO AND S.QTAMOVGESTIONE>0
      AND I.REVISIONE IS NULL
END
GO

IF EXISTS (SELECT 1 FROM Sys.Objects SO WHERE SO.Name='MET_IMPORDPROD_REVISIONE' AND SO.Type='V')
	DROP VIEW MET_IMPORDPROD_REVISIONE
GO
CREATE VIEW MET_IMPORDPROD_REVISIONE AS
SELECT
	IDTESTA,IDRIGA,IDIMPEGNO,CODART,ISNULL(CAST(REVISIONE AS VARCHAR),'N.D.') AS REVISIONE
FROM
	IMPEGNIORDPROD
GO
GRANT SELECT ON MET_IMPORDPROD_REVISIONE TO METODO98
GO
--------------------------------------------------------
-- Fine Aggiunte del 28/02/2013 - DANIELE R
--------------------------------------------------------



--------------------------------------------------------
-- Aggiunte del 06/03/2013 - DANIELE R
--------------------------------------------------------
IF NOT EXISTS (SELECT 1 FROM SysColumns WHERE SysColumns.ID=(SELECT ID FROM SysObjects WHERE ID=object_id('EXTRAMAG') AND SysObjects.XType='U') AND SysColumns.Name='CRITICITA')
	ALTER TABLE EXTRAMAG ADD CRITICITA DECIMAL(5,0) DEFAULT 0
GO
IF NOT EXISTS (SELECT 1 FROM SYSOBJECTS WHERE ID = OBJECT_ID('MET_TABCRITICITA') AND TYPE = 'U')
CREATE TABLE MET_TABCRITICITA
(
	CODICE decimal(5,0) NOT NULL ,
	DESCRIZIONE varchar (255)  NULL ,
	UTENTEMODIFICA VARCHAR(25) NOT NULL,
	DATAMODIFICA DATETIME NOT NULL
	PRIMARY KEY(CODICE)
)
GO
GRANT  REFERENCES ,  SELECT ,  UPDATE ,  INSERT ,  DELETE  ON MET_TABCRITICITA  TO Metodo98
GO

IF NOT EXISTS (SELECT 1 FROM SysColumns WHERE SysColumns.ID=(SELECT ID FROM SysObjects WHERE ID=object_id('EXTRAMAG') AND SysObjects.XType='U') AND SysColumns.Name='CATRICAMBI')
	ALTER TABLE EXTRAMAG ADD CATRICAMBI DECIMAL(5,0) DEFAULT 0
GO
IF NOT EXISTS (SELECT 1 FROM SYSOBJECTS WHERE ID = OBJECT_ID('MET_TABCATRICAMBI') AND TYPE = 'U')
CREATE TABLE MET_TABCATRICAMBI
(
	CODICE decimal(5,0) NOT NULL ,
	DESCRIZIONE varchar (255)  NULL ,
	UTENTEMODIFICA VARCHAR(25) NOT NULL,
	DATAMODIFICA DATETIME NOT NULL
	PRIMARY KEY(CODICE)
)
GO
GRANT  REFERENCES ,  SELECT ,  UPDATE ,  INSERT ,  DELETE  ON MET_TABCATRICAMBI TO Metodo98
GO
--------------------------------------------------------
-- Fine Aggiunte del 28/02/2013 - DANIELE R
--------------------------------------------------------



--------------------------------------------------------
-- Aggiunte del 16/07/2013 - DANIELE A (REPORT COSTI MATERIALI DI ACQUISTO)
--------------------------------------------------------
IF EXISTS (SELECT 1 FROM Sys.Objects SO WHERE SO.Name='MET_VISTALISTINIXARTICOLO' AND SO.Type='V')
	DROP VIEW MET_VISTALISTINIXARTICOLO
GO
CREATE VIEW MET_VISTALISTINIXARTICOLO AS
SELECT
	AA.CODICE,AA.DESCRIZIONE,TL.NRLISTINO
FROM
	ANAGRAFICAARTICOLI AA, TABLISTINI TL
GO
GRANT SELECT ON MET_VISTALISTINIXARTICOLO TO METODO98
GO
IF EXISTS (SELECT 1 FROM Sys.Objects SO WHERE SO.Name='MET_VISTALISTINIARTICOLI_PREZZI' AND SO.Type='V')
	DROP VIEW MET_VISTALISTINIARTICOLI_PREZZI
GO
CREATE VIEW MET_VISTALISTINIARTICOLI_PREZZI AS
SELECT
	AA.CODICE,
	AA.DESCRIZIONE,
	ISNULL(AA.NRLISTINO, 0) AS NRLISTINO,
	A.UM,
	ISNULL(LA.PREZZOEURO,0) AS PREZZOEURO
FROM
	MET_VISTALISTINIXARTICOLO AA
	LEFT OUTER JOIN ARTICOLIUMPREFERITE AS A ON AA.CODICE=A.CODART AND A.TIPOUM=1
	LEFT OUTER JOIN LISTINIARTICOLI LA ON AA.CODICE=LA.CODART AND AA.NRLISTINO=LA.NRLISTINO AND A.UM=LA.UM
GO
GRANT SELECT ON MET_VISTALISTINIARTICOLI_PREZZI TO METODO98
GO
--------------------------------------------------------
-- Fine Aggiunte del 16/07/2013 - DANIELE A
--------------------------------------------------------



--------------------------------------------------------
-- Aggiunte del 28/08/2013 - DANIELE R
--------------------------------------------------------
IF NOT EXISTS (SELECT 1 FROM SysColumns WHERE SysColumns.ID=(SELECT ID FROM SysObjects WHERE ID=object_id('RIGHE_WIP') AND SysObjects.XType='U') AND SysColumns.Name='WIP_MAT')
	ALTER TABLE RIGHE_WIP ADD WIP_MAT DECIMAL(16, 6) NOT NULL DEFAULT 0
GO
IF NOT EXISTS (SELECT 1 FROM SysColumns WHERE SysColumns.ID=(SELECT ID FROM SysObjects WHERE ID=object_id('RIGHE_WIP') AND SysObjects.XType='U') AND SysColumns.Name='WIP_LAVINT')
	ALTER TABLE RIGHE_WIP ADD WIP_LAVINT DECIMAL(16, 6) NOT NULL DEFAULT 0
GO
IF NOT EXISTS (SELECT 1 FROM SysColumns WHERE SysColumns.ID=(SELECT ID FROM SysObjects WHERE ID=object_id('RIGHE_WIP') AND SysObjects.XType='U') AND SysColumns.Name='WIP_LAVEST')
	ALTER TABLE RIGHE_WIP ADD WIP_LAVEST DECIMAL(16, 6) NOT NULL DEFAULT 0
GO

IF EXISTS (SELECT 1 FROM Sys.Objects SO WHERE SO.Name='MET_VISTA_TOTALEPX_A' AND SO.Type='V')
	DROP VIEW MET_VISTA_TOTALEPX_A
GO
CREATE VIEW MET_VISTA_TOTALEPX_A AS
SELECT
	STI.RIFTESTA,
    STI.RIFRIGA,
    SUM(ISNULL(STI.COSTOTOTMOVEURO, 0)) AS TOTALEPX_A
FROM
    STORICOMOVIMPPROD STI
    INNER JOIN STORICOMOVPROD STM ON STM.PROGRESSIVO = STI.RIFPROGRESSIVO
GROUP BY
    STI.RIFTESTA,
    STI.RIFRIGA
GO
GRANT SELECT ON MET_VISTA_TOTALEPX_A TO METODO98
GO

IF EXISTS (SELECT 1 FROM Sys.Objects SO WHERE SO.Name='MET_VISTA_TOTALEPX_B' AND SO.Type='V')
	DROP VIEW MET_VISTA_TOTALEPX_B
GO
CREATE VIEW	MET_VISTA_TOTALEPX_B AS
SELECT
	VS.IDTESTACOMM,
	VS.IDRIGACOMM,
	SUM(VS.COSTOTOTALEEURO) AS TOTALEPX_B,
	SUM(VS.COSTOTOTALEINTERNOEURO) AS TOTALEPXINT_B,
	SUM(COSTOTOTALEESTERNOEURO) AS TOTALEPXEST_B
FROM
	VISTASTORICOAVANZAMENTI VS
GROUP BY
	VS.IDTESTACOMM,
	VS.IDRIGACOMM
GO
GRANT SELECT ON MET_VISTA_TOTALEPX_B TO METODO98
GO

IF EXISTS (SELECT 1 FROM Sys.Objects SO WHERE SO.Name='MET_VISTA_TOTALEPX_C' AND SO.Type='V')
	DROP VIEW MET_VISTA_TOTALEPX_C
GO
CREATE VIEW MET_VISTA_TOTALEPX_C AS
SELECT
    STO.RIFTESTA,
    STO.RIFRIGA,
    SUM(ISNULL(STO.COSTOTOTMOVEURO, 0)) AS TOTALEPX_C
FROM
    STORICOMOVORDPROD STO
    INNER JOIN STORICOMOVPROD STM ON STM.PROGRESSIVO = STO.RIFPROGRESSIVO
WHERE
    STM.TIPOMOV IN (0,2)
GROUP BY
    STO.RIFTESTA,
    STO.RIFRIGA
GO
GRANT SELECT ON MET_VISTA_TOTALEPX_C TO METODO98
GO
--------------------------------------------------------
-- Fine Aggiunte del 28/08/2013 - DANIELE R
--------------------------------------------------------



--------------------------------------------------------
-- Aggiunte del 04/04/2014 - DANIELE R
--------------------------------------------------------
IF EXISTS (SELECT 1 FROM Sys.Objects SO WHERE SO.Name='MET_VISTA_IMPEGNIPIANO' AND SO.Type='V')
	DROP VIEW MET_VISTA_IMPEGNIPIANO
GO
CREATE VIEW MET_VISTA_IMPEGNIPIANO AS
SELECT
	PP.NOMEPIANIF,
    IOP.IDTESTA,
    IOP.IDRIGA,
    IOP.IDIMPEGNO,
	(SELECT TOP 1 SITUAZIONE+QTAIMP-QTAORD+SCMINIMA FROM PROGPRODUZIONE WHERE NOMEPIANIF=PP.NOMEPIANIF AND CODART=IOP.CODART ORDER BY ORDINELETTURA) AS GIACENZA,
	ISNULL((SELECT TOP 1 CODUBICAZIONE FROM UBICAZIONIARTICOLI WHERE CODICEART=IOP.CODART AND CODDEPOSITO='020' ORDER BY CODUBICAZIONE),'') AS UBIC020
FROM
	IMPEGNIORDPROD IOP
	INNER JOIN PROGPRODUZIONE PP ON IOP.IDTESTA=PP.IDTESTADOC AND IOP.IDRIGA=PP.IDRIGADOC AND IOP.IDIMPEGNO = PP.IDIMPEGNO AND PP.TIPO=7
GO
GRANT SELECT ON MET_VISTA_IMPEGNIPIANO TO METODO98
GO
--------------------------------------------------------
-- Fine Aggiunte del 04/04/2014 - DANIELE R
--------------------------------------------------------



--------------------------------------------------------
-- Aggiunte del 11/04/2014 - DANIELE R
--------------------------------------------------------
IF EXISTS (SELECT 1 FROM Sys.Objects SO WHERE SO.Name='MET_VISTA_ARTICOLIUBIC' AND SO.Type='V')
	DROP VIEW MET_VISTA_ARTICOLIUBIC
GO
CREATE VIEW MET_VISTA_ARTICOLIUBIC AS
SELECT
	A2.ESERCIZIO,
	A.CODICE,
	A.DESCRIZIONE,
	A.GRUPPO,
	A.CATEGORIA,
	A.CODCATEGORIASTAT,
	U.CODDEPOSITO,
	ISNULL(U.CODUBICAZIONE,'') AS CODUBICAZIONE,
	(CASE WHEN ISNULL(BARCODESTRING,'')='' THEN '*'+A.CODICE+'*' ELSE A2.BARCODESTRING END) AS BARCODESTRING
FROM
	ANAGRAFICAARTICOLI AS A
	INNER JOIN ANAGRAFICAARTICOLICOMM AS A2 ON A.CODICE=A2.CODICEART
	INNER JOIN UBICAZIONIARTICOLI AS U ON A.CODICE=U.CODICEART --AND A.CODDEPOSITO=U.CODDEPOSITO
WHERE
	A.ARTTIPOLOGIA=0 --AND A2.ESERCIZIO=2014
GO
GRANT SELECT ON MET_VISTA_ARTICOLIUBIC TO METODO98
GO--------------------------------------------------------
-- Fine Aggiunte del 11/04/2014 - DANIELE R
--------------------------------------------------------



--------------------------------------------
-- Aggiunte del 10/06/2014 - Gildo        --
--------------------------------------------
-- Vista per visione listini lavagna AIOT --
--------------------------------------------

	IF EXISTS (SELECT 1 FROM Sys.Objects SO WHERE SO.Object_ID=object_id('BCEA_VistaListiniArticoli') AND SO.Type='V')
		DROP VIEW BCEA_VistaListiniArticoli
	GO

	CREATE VIEW BCEA_VistaListiniArticoli AS
		SELECT	VLA.CodArt, VLA.Descrizione, VLA.NrListino, VLA.UM, VLA.VincolaUM,
				VLA.Divisa, VLA.DescrDivisa, VLA.CodCambio, VLA.Prezzo, VLA.PrezzoEuro,
				VF.CodConto AS CodFor, VF.DscConto1 AS DscFor,
				((100-isnull(MVL.PercScontoUnico, 0))*(100-isnull(MVL.PercScontoAgg, 0))*VLA.PrezzoEuro/10000) AS PrzNettoEuro,
				(right('00'+cast(day(LA.DataModifica) AS varchar), 2)+'/'+right('00'+cast(month(LA.DataModifica) AS varchar), 2)+'/'+right('0000'+cast(year(LA.DataModifica) AS varchar), 4)+' '+right('00'+cast(datepart(hour, LA.DataModifica) AS varchar), 2)+':'+right('00'+cast(datepart(minute, LA.DataModifica) AS varchar), 2)+':'+right('00'+cast(datepart(second, LA.DataModifica) AS varchar), 2)) AS DataModifica,
				isnull(VCF.Listino, 0) AS ListForn
		FROM VistaListiniArticoli VLA
			LEFT OUTER JOIN VistaCliFor VF ON VLA.NrListino=VF.Listino AND VF.TipoConto='F'
			LEFT OUTER JOIN Met_VistaListini_CliFor_UltPrezzo MVL ON VLA.CodArt=MVL.CodArt AND VF.CodConto=MVL.CodCliFor
			LEFT OUTER JOIN ListiniArticoli LA ON VLA.CodArt=LA.CodArt AND VLA.NrListino=LA.NrListino AND VLA.UM=LA.UM

			LEFT OUTER JOIN (VistaAnagraficaArticoli VAA
				INNER JOIN VistaCliFor VCF ON VAA.FornPrefAcq=VCF.CodConto
			) ON VLA.CodArt=VAA.Codice
	GO

	GRANT SELECT ON BCEA_VistaListiniArticoli TO Metodo98
	GO

--------------------------------------------
-- Fine aggiunte del 10/06/2014 - Gildo   --
--------------------------------------------



--------------------------------------------
-- Aggiunte del 16/09/2014 - Daniele R    --
--------------------------------------------
-- Gestione invio Mail Documenti          --
--------------------------------------------

IF NOT EXISTS (SELECT 1 FROM SysColumns WHERE SysColumns.ID=(SELECT ID FROM SysObjects WHERE ID=object_id('EXTRAPARDOC') AND SysObjects.XType='U') AND SysColumns.Name='INVIOMAIL_DOC')
	ALTER TABLE EXTRAPARDOC ADD INVIOMAIL_DOC SMALLINT NOT NULL DEFAULT 0
GO
ALTER TABLE EXTRAPARDOC WITH NOCHECK ADD
	CONSTRAINT [CKC_INVIOMAIL_DOC_EXTRAPARDOC] CHECK ([INVIOMAIL_DOC] = 1 OR [INVIOMAIL_DOC] = 0)
GO

IF NOT EXISTS (SELECT 1 FROM SysColumns WHERE SysColumns.ID=(SELECT ID FROM SysObjects WHERE ID=object_id('EXTRACLIENTI') AND SysObjects.XType='U') AND SysColumns.Name='INVIOMAIL_CLI')
	ALTER TABLE EXTRACLIENTI ADD INVIOMAIL_CLI SMALLINT NOT NULL DEFAULT 0
GO
ALTER TABLE EXTRACLIENTI WITH NOCHECK ADD
	CONSTRAINT [CKC_INVIOMAIL_CLI_EXTRACLIENTI] CHECK ([INVIOMAIL_CLI] = 1 OR [INVIOMAIL_CLI] = 0)
GO
--------------------------------------------
-- Fine aggiunte 16/09/2014 - Daniele R   --
--------------------------------------------



--------------------------------------------
-- Aggiunte del 23/09/2014 - Daniele R    --
--------------------------------------------
-- Valutazione Fornitori                  --
--------------------------------------------
IF NOT EXISTS (SELECT 1 FROM SysColumns WHERE SysColumns.ID=(SELECT ID FROM SysObjects WHERE ID=object_id('EXTRAFORNITORI') AND SysObjects.XType='U') AND SysColumns.Name='FLG_INVALUTAZIONE')
	ALTER TABLE EXTRAFORNITORI ADD FLG_INVALUTAZIONE SMALLINT DEFAULT 0
GO
--UPDATE EXTRAFORNITORI SET FLG_INVALUTAZIONE=0
--------------------------------------------
-- Fine aggiunte   23/09/2014 - Daniele R --
--------------------------------------------



-----------------------------------------------------------------------------------
-- Aggiunte del 09/10/2014 - Gildo                                               --
-----------------------------------------------------------------------------------
-- Vista per stampa liquidazione provvigioni documenti con scadenze tutte pagate --
-----------------------------------------------------------------------------------

	IF EXISTS (SELECT 1 FROM Sys.Objects SO WHERE SO.Object_ID=object_id('BCEA_VistaDocScad') AND SO.Type='V')
		DROP VIEW BCEA_VistaDocScad
	GO

	CREATE VIEW BCEA_VistaDocScad AS
		SELECT	AnnoDoc AS DS_AnnoDoc, TipoDoc AS DS_TipoDoc, NumDoc AS DS_NumDoc, Bis AS DS_Bis,
				count(*) AS NrScadXDoc,
				sum(CASE WHEN Esito IN (2, 4) THEN 0 ELSE 1 END) AS NrScadAperte
		FROM TabScadenze
		GROUP BY AnnoDoc, TipoDoc, NumDoc, Bis
	GO

	GRANT SELECT ON BCEA_VistaDocScad TO Metodo98
	GO

-----------------------------------------------------------------------------------
-- Fine aggiunte del 09/10/2014 - Gildo                                          --
-----------------------------------------------------------------------------------



-----------------------------------------------------------------------------------
-- Aggiunte del 08/04/2015 - daniele r
-----------------------------------------------------------------------------------
-- Vista per stampa liquidazione provvigioni documenti con scadenze tutte pagate --
-----------------------------------------------------------------------------------
	IF EXISTS (SELECT 1 FROM Sys.Objects SO WHERE SO.Object_ID=object_id('MET_VISTA_ESITOFATTURE') AND SO.Type='V')
		DROP VIEW MET_VISTA_ESITOFATTURE
	GO

	CREATE VIEW MET_VISTA_ESITOFATTURE AS
	SELECT
		T.CODCLIFOR AS CODCF,
		T.ESERCIZIO,
		T.TIPODOC,
		T.NUMDOC,
		T.BIS,
		SUM((CASE WHEN T.ESITO IN (0,1,3) THEN 1 ELSE 0 END)) AS NUMSCAD_NONPAGATE
	FROM
		TABSCADENZE T
	GROUP BY
		T.CODCLIFOR,
		T.ESERCIZIO,
		T.TIPODOC,
		T.NUMDOC,
		T.BIS
	GO
	GRANT SELECT ON MET_VISTA_ESITOFATTURE TO METODO98
	GO

-----------------------------------------------------------------------------------
-- Fine aggiunte del 08/04/2015 - daniele r
-----------------------------------------------------------------------------------



------------------------------------------------------------------
-- Aggiunte del 16/04/2015 - Gildo                              --
------------------------------------------------------------------
-- Modifiche originali del 13/11/2009 - Gildo                   --
-- Personalizzazione visione scadenze per righe valore negative --
------------------------------------------------------------------
-- Aggiunta campi per visione AIOT Controllo Scadenze/Insoluti  --
------------------------------------------------------------------

	IF EXISTS(SELECT 1 FROM SysObjects WHERE ID=object_id('BCEA_VistaScadenze') AND Type='V')
		DROP VIEW BCEA_VistaScadenze
	GO

	CREATE VIEW BCEA_VistaScadenze AS
		SELECT	VS.*, TD.Progressivo AS ProgDoc, TD.DataRifDoc,DATEDIFF(DD,datascadenza,GETDATE()) AS GIORNIDIFF,
				(CASE WHEN rtrim(TD.Bis)='' THEN (TD.TipoDoc + ' / ' + cast(TD.Esercizio AS varchar) + ' / ' + cast(TD.NumeroDoc AS varchar))
					ELSE (TD.TipoDoc + ' / ' + cast(TD.Esercizio AS varchar) + ' / ' + cast(TD.NumeroDoc AS varchar) + ' / ' + TD.Bis) END) AS RifDoc,
				(VS.ImpFattLit - (isnull((SELECT sum(TotNettoRigaEuro) FROM RigheDocumenti RD WHERE RD.IDTesta=TD.Progressivo AND RD.TipoRiga='V' AND RD.TotNettoRiga<0), 0) * (SELECT TC.CambioEuro FROM TabCambi TC WHERE TC.Codice=(SELECT VG.DivisaLire FROM TabVincoliGIC VG WHERE VG.Esercizio=TD.Esercizio)))) AS ImponLitDoc,
				(VS.ImpFattEuro - isnull((SELECT sum(TotNettoRigaEuro) FROM RigheDocumenti RD WHERE RD.IDTesta=TD.Progressivo AND RD.TipoRiga='V' AND RD.TotNettoRiga<0), 0)) AS ImponEuroDoc,
				(VS.ImpFattVal - isnull((SELECT sum(TotNettoRiga) FROM RigheDocumenti RD WHERE RD.IDTesta=TD.Progressivo AND RD.TipoRiga='V' AND RD.TotNettoRiga<0), 0)) AS ImponValDoc,
				ACF.Localita AS Citta, ACF.CodNazione AS CodNaz, TNZ.Descrizione AS DesNaz
		FROM VistaScadenze VS
			LEFT OUTER JOIN TesteDocumenti TD ON VS.Esercizio=TD.Esercizio AND VS.TipoDoc=TD.TipoDoc AND VS.NumDoc=TD.NumeroDoc AND VS.Bis=TD.Bis AND VS.CodCliFor=TD.CodCliFor
			LEFT OUTER JOIN AnagraficaCF AS ACF ON VS.CodCliFor=ACF.CodConto
			LEFT OUTER JOIN TabNazioni TNZ ON ACF.CodNazione=TNZ.Codice
	GO

	GRANT SELECT ON BCEA_VistaScadenze TO Metodo98
	GO

------------------------------------------------------------------
-- Fine aggiunte del 16/04/2015 - Gildo                         --
------------------------------------------------------------------



------------------------------------------------------------------
-- Aggiunte del 30/07/2015 - Elena N.                           --
------------------------------------------------------------------
-- Allungato campo Note AnagraficaCF	(2000)			--
------------------------------------------------------------------

ALTER TABLE ANAGRAFICACF ALTER COLUMN NOTE VARCHAR(2000)
GO



-----------------------------------------------------------------------------------
-- Aggiunte del 06/08/2015 - daniele r
-----------------------------------------------------------------------------------
	IF NOT EXISTS (SELECT 1 FROM SysColumns WHERE SysColumns.ID=(SELECT ID FROM SysObjects WHERE SysObjects.ID=object_id('EXTRARIGHEDOC') AND SysObjects.XType='U') AND SysColumns.Name='CodArtProdRD')
		ALTER TABLE EXTRARIGHEDOC ADD
			CODARTPRODRD					varchar(25)		NULL
	GO
-----------------------------------------------------------------------------------
-- Fine aggiunte del 06/08/2015 - daniele r
-----------------------------------------------------------------------------------



-----------------------------------------------------------------------------------
-- Aggiunte del 10/09/2015 - daniele r
-----------------------------------------------------------------------------------
IF NOT EXISTS(SELECT 1 FROM SysObjects WHERE SysObjects.ID=object_id('MET_TMP_EXPORTEX') AND SysObjects.Type='U')
CREATE TABLE MET_TMP_EXPORTEX
(
	CODICE [VARCHAR](50) NOT NULL,
	DESCRIZIONE [VARCHAR](80) NULL,
	PREZZOEURO [DECIMAL](19, 6) NULL,
	NOMEPROD [VARCHAR](80) NOT NULL,
	CODARTPROD [VARCHAR](25) NOT NULL,
	ESAURITO [SMALLINT] NULL,
	INESAURIMENTO [SMALLINT] NULL,
	ARTALTERNATIVO [VARCHAR](50) NULL,
	LEADTIME [SMALLINT] NULL,
	VERRICAMBIO [VARCHAR](15) NULL,
	PRIMARY KEY(CODICE)
)
GO
GRANT REFERENCES, SELECT, UPDATE, INSERT, DELETE ON MET_TMP_EXPORTEX TO METODO98
GO

IF EXISTS(SELECT 1 FROM SysObjects WHERE SysObjects.ID=object_id('MET_VISTA_EXPORTEX') AND SysObjects.Type='V')
	DROP VIEW MET_VISTA_EXPORTEX
GO
CREATE VIEW MET_VISTA_EXPORTEX AS
SELECT
	T.PROGRESSIVO,T.ESERCIZIO,T.TIPODOC,T.NUMERODOC,T.BIS,T.DATADOC,T.NUMRIFDOC,T.DATARIFDOC,T.CODCLIFOR,
	A.CODICE,A.DESCRIZIONE,
	L.NRLISTINO,
	L.PREZZOEURO,
	ISNULL(E.NOMEPROD,'') AS NOMEPROD, ISNULL(E.CODARTPROD,'') AS CODARTPROD,
	A2.ESAURITO,A2.INESAURIMENTO,ISNULL(A3.ARTALTERNATIVO,'') AS ARTALTERNATIVO,
	(SELECT MAX(V) FROM (VALUES (ISNULL(E.LTCUMULATO,0)), (ISNULL(A3.TAPPRONTACQ,0)), (ISNULL(A3.TAPPRONTPROD,0))) AS VALUE(V)) AS LEADTIME,
	ISNULL(E.LTCUMULATO,0) AS LTCUMULATO,ISNULL(A3.TAPPRONTACQ,0) AS TAPPRONTACQ,ISNULL(A3.TAPPRONTPROD,0) AS TAPPRONTPROD,
	ISNULL(E.VERRICAMBIO,'') AS VERRICAMBIO
FROM
	TESTEDOCUMENTI AS T
	INNER JOIN RIGHEDOCUMENTI AS R ON T.PROGRESSIVO=R.IDTESTA
	INNER JOIN ANAGRAFICAARTICOLI AS A ON R.CODART=A.CODICE
	INNER JOIN ANAGRAFICAARTICOLICOMM AS A2 ON A.CODICE=A2.CODICEART AND A2.ESERCIZIO=YEAR(GETDATE())
	INNER JOIN ANAGRAFICAARTICOLIPROD AS A3 ON A2.CODICEART=A3.CODICEART AND A2.ESERCIZIO=A3.ESERCIZIO
	INNER JOIN EXTRAMAG AS E ON A.CODICE=E.CODART
	INNER JOIN LISTINIARTICOLI AS L ON A.CODICE=L.CODART
GO
GRANT SELECT ON MET_VISTA_EXPORTEX TO METODO98
GO
-----------------------------------------------------------------------------------
-- Fine aggiunte del 10/09/2015 - daniele r
-----------------------------------------------------------------------------------



-----------------------------------------------------------------------------------
-- Aggiunte del 15/10/2015 - daniele r
-----------------------------------------------------------------------------------
INSERT INTO BCEA_PARAMETRITDA (PAR_MODULO, PAR_CODICE, PAR_DESC, PAR_TIPO, PAR_LUNGH, PAR_VALORE) VALUES ('TAB_EXPORTRADAR', 'NOMEPIANO', 'Tabella export radar', 'varchar', 50, '01_PIANIFICAZIONE_GENERALE')
GO

IF EXISTS(SELECT 1 FROM SYSOBJECTS WHERE SYSOBJECTS.ID=OBJECT_ID('MET_SEL_EXPORTRADAR') AND SYSOBJECTS.TYPE='V')
	DROP VIEW MET_SEL_EXPORTRADAR
GO
CREATE VIEW MET_SEL_EXPORTRADAR AS
SELECT
	PP.PROG_ID, PP.TIPO, PP.RIFERIMENTI AS ORDINE,
	PP.IDTESTADOC,PP.IDRIGADOC,ISNULL(R.STATOORDINE,0) AS STATOORDINE,T.TIPOCOM,
	PP.CODART, AA.DESCRIZIONE, PP.RIFCOMMCLI, PP.DATAORD, PP.DATACONS,
	(CASE TIPO
		WHEN 3
		THEN
			ISNULL((SELECT CONCAT(TD.CODCLIFOR, ' - ', ACF.DSCCONTO1) FROM TESTEDOCUMENTI TD INNER JOIN ANAGRAFICACF ACF ON TD.CODCLIFOR = ACF.CODCONTO WHERE TD.PROGRESSIVO = PP.IDTESTADOC), '')
		ELSE
			ISNULL((SELECT CONCAT(TOR.CODCLIDEST, ' - ', ACF.DSCCONTO1) FROM RIGHEORDPROD TOR INNER JOIN ANAGRAFICACF ACF ON TOR.CODCLIDEST = ACF.CODCONTO WHERE TOR.IDTESTA = PP.IDTESTADOC AND TOR.IDRIGA = PP.IDRIGADOC), '')
		END
	) AS CLIFOR,
	(CASE PP.TIPO WHEN 6
	THEN
		CONCAT(T.TIPOCOM,'\',T.ESERCIZIO,'\',T.NUMEROCOM,'\',PP.IDRIGADOC)
	ELSE
		CONCAT(T2.TIPODOC,'\',T2.ESERCIZIO,'\',T2.NUMERODOC,'\',PP.IDRIGADOC)
	END) AS RIFERIMENTI
FROM
	PROGPRODUZIONE PP
	LEFT OUTER JOIN RIGHEORDPROD AS R ON PP.IDTESTADOC=R.IDTESTA AND PP.IDRIGADOC=R.IDRIGA
	INNER JOIN ANAGRAFICAARTICOLI AA ON PP.CODART = AA.CODICE
	INNER JOIN BCEA_PARAMETRITDA PAR ON PP.NOMEPIANIF = PAR.PAR_VALORE AND PAR.PAR_MODULO = 'TAB_EXPORTRADAR' AND PAR.PAR_CODICE = 'NOMEPIANO'
	LEFT OUTER JOIN TESTEORDINIPROD AS T ON PP.IDTESTADOC=T.PROGRESSIVO AND PP.TIPO=6
	LEFT OUTER JOIN TESTEDOCUMENTI AS T2 ON PP.IDTESTADOC=T2.PROGRESSIVO AND PP.TIPO=3
WHERE
	TIPO IN (3,6)
GO
GRANT SELECT ON MET_SEL_EXPORTRADAR TO METODO98
GO

IF NOT EXISTS (SELECT 1 FROM SYSOBJECTS WHERE ID = OBJECT_ID('MET_TAB_EXPORTRADAR') AND TYPE = 'U')
CREATE TABLE MET_TAB_EXPORTRADAR
(
	FLGSEL SMALLINT NOT NULL CONSTRAINT CK_FLGSEL CHECK (FLGSEL <=1 ),
	IDTESTADOC DECIMAL(10, 0) NULL,
	IDRIGADOC INT NULL,
	RIFERIMENTI VARCHAR(42) NOT NULL,
	TIPO SMALLINT NULL,
	NOTE VARCHAR(255) NULL,
	UTENTEMODIFICA VARCHAR(25) NOT NULL,
	DATAMODIFICA DATETIME NOT NULL,
	PRIMARY KEY(IDTESTADOC,IDRIGADOC,TIPO)
)
GO
GRANT REFERENCES,SELECT,UPDATE,INSERT,DELETE ON MET_TAB_EXPORTRADAR TO METODO98
GO

DROP TABLE MET_EXPORTRADAR
GO
IF NOT EXISTS (SELECT 1 FROM SYSOBJECTS WHERE ID = OBJECT_ID('MET_EXPORTRADAR') AND TYPE = 'U')
CREATE TABLE MET_EXPORTRADAR
(
	ORDINE VARCHAR(42) NULL,
	ORDINAMENTO INT NULL,
	LIVELLO INT NULL,
	PROG_ID DECIMAL(10, 0) NULL,
	RIF_ID DECIMAL(10, 0) NULL,
	RIFERIMENTI VARCHAR(100) NULL,
	RIFCOMMCLI VARCHAR(30) NULL,
	TIPO VARCHAR(16) NULL,
	CODART VARCHAR(50) NULL,
	DSCARTICOLO VARCHAR(80) NULL,
	UMBASE VARCHAR(3) NOT NULL,
	QTABASE DECIMAL(16, 6) NULL,
	DATARICH DATETIME NOT NULL,
	CONFERMATO VARCHAR(2) NULL,
	DATAORD DATETIME NULL,
	DATACONS DATETIME NOT NULL,
	CODCLIFOR VARCHAR(7) NULL,
	RAGIONESOCIALE VARCHAR(80) NULL,
	ECCEZIONI INT NULL,
	CODPIANIFICATORE DECIMAL(5,0) NULL,
	DATAMODIFICA DATETIME
)
GO
GRANT REFERENCES,SELECT,UPDATE,INSERT,DELETE ON MET_EXPORTRADAR TO METODO98
GO

IF EXISTS(SELECT 1 FROM SYSOBJECTS WHERE SYSOBJECTS.ID=OBJECT_ID('MET_VISTA_EXPORTRADAR') AND SYSOBJECTS.TYPE='V')
	DROP VIEW MET_VISTA_EXPORTRADAR
GO
CREATE VIEW MET_VISTA_EXPORTRADAR AS
SELECT
	PP.NOMEPIANIF,
	MTE.RIFERIMENTI AS ORDINE,
	PP.PROG_ID,
	PP.TIPO
FROM
	MET_TAB_EXPORTRADAR AS MTE
	INNER JOIN PROGPRODUZIONE PP ON MTE.IDTESTADOC=PP.IDTESTADOC AND MTE.IDRIGADOC=PP.IDRIGADOC AND MTE.TIPO=PP.TIPO AND PP.NOMEPIANIF = MTE.NOMEPIANIF
	--INNER JOIN BCEA_PARAMETRITDA PAR ON PP.NOMEPIANIF = PAR.PAR_VALORE AND PAR.PAR_MODULO = 'TAB_EXPORTRADAR' AND PAR.PAR_CODICE = 'NOMEPIANO'
WHERE
	MTE.FLGSEL=1
GO
GRANT SELECT ON MET_VISTA_EXPORTRADAR TO METODO98
GO

IF EXISTS(SELECT 1 FROM SYSOBJECTS WHERE SYSOBJECTS.ID=OBJECT_ID('MET_VISTA_ORD_EXPORTRADAR') AND SYSOBJECTS.TYPE='V')
	DROP VIEW MET_VISTA_ORD_EXPORTRADAR
GO
CREATE VIEW MET_VISTA_ORD_EXPORTRADAR AS
SELECT
	ROW_NUMBER() OVER (PARTITION BY T1.ORDINE ORDER BY
	LEFT(
		ISNULL(RIGHT(REPLICATE('0',10)+CAST(T12.PROG_ID AS VARCHAR) ,10),'') +
		ISNULL(RIGHT(REPLICATE('0',10)+CAST(T11.PROG_ID AS VARCHAR) ,10),'') +
		ISNULL(RIGHT(REPLICATE('0',10)+CAST(T10.PROG_ID AS VARCHAR) ,10),'') +
		ISNULL(RIGHT(REPLICATE('0',10)+CAST(T9.PROG_ID AS VARCHAR) ,10),'') +
		ISNULL(RIGHT(REPLICATE('0',10)+CAST(T8.PROG_ID AS VARCHAR) ,10),'') +
		ISNULL(RIGHT(REPLICATE('0',10)+CAST(T7.PROG_ID AS VARCHAR) ,10),'') +
		ISNULL(RIGHT(REPLICATE('0',10)+CAST(T6.PROG_ID AS VARCHAR) ,10),'') +
		ISNULL(RIGHT(REPLICATE('0',10)+CAST(T5.PROG_ID AS VARCHAR) ,10),'') +
		ISNULL(RIGHT(REPLICATE('0',10)+CAST(T4.PROG_ID AS VARCHAR) ,10),'') +
		ISNULL(RIGHT(REPLICATE('0',10)+CAST(T3.PROG_ID AS VARCHAR) ,10),'') +
		ISNULL(RIGHT(REPLICATE('0',10)+CAST(T2.PROG_ID AS VARCHAR) ,10),'') +
		ISNULL(RIGHT(REPLICATE('0',10)+CAST(T1.PROG_ID AS VARCHAR) ,10),'') +
		REPLICATE('0',120), 120)) AS ORDINA,
	LEFT(
		ISNULL(RIGHT(REPLICATE('0',10)+CAST(T12.PROG_ID AS VARCHAR) ,10),'') +
		ISNULL(RIGHT(REPLICATE('0',10)+CAST(T11.PROG_ID AS VARCHAR) ,10),'') +
		ISNULL(RIGHT(REPLICATE('0',10)+CAST(T10.PROG_ID AS VARCHAR) ,10),'') +
		ISNULL(RIGHT(REPLICATE('0',10)+CAST(T9.PROG_ID AS VARCHAR) ,10),'') +
		ISNULL(RIGHT(REPLICATE('0',10)+CAST(T8.PROG_ID AS VARCHAR) ,10),'') +
		ISNULL(RIGHT(REPLICATE('0',10)+CAST(T7.PROG_ID AS VARCHAR) ,10),'') +
		ISNULL(RIGHT(REPLICATE('0',10)+CAST(T6.PROG_ID AS VARCHAR) ,10),'') +
		ISNULL(RIGHT(REPLICATE('0',10)+CAST(T5.PROG_ID AS VARCHAR) ,10),'') +
		ISNULL(RIGHT(REPLICATE('0',10)+CAST(T4.PROG_ID AS VARCHAR) ,10),'') +
		ISNULL(RIGHT(REPLICATE('0',10)+CAST(T3.PROG_ID AS VARCHAR) ,10),'') +
		ISNULL(RIGHT(REPLICATE('0',10)+CAST(T2.PROG_ID AS VARCHAR) ,10),'') +
		ISNULL(RIGHT(REPLICATE('0',10)+CAST(T1.PROG_ID AS VARCHAR) ,10),'') +
		REPLICATE('0',120), 120
	) AS ORDINA2,
	T1.*
FROM
	MET_EXPORTRADAR T1
	LEFT OUTER JOIN MET_EXPORTRADAR T2 ON T1.RIF_ID = T2.PROG_ID AND T1.ORDINE = T2.ORDINE
	LEFT OUTER JOIN MET_EXPORTRADAR T3 ON T2.RIF_ID = T3.PROG_ID AND T2.ORDINE = T3.ORDINE
	LEFT OUTER JOIN MET_EXPORTRADAR T4 ON T3.RIF_ID = T4.PROG_ID AND T3.ORDINE = T4.ORDINE
	LEFT OUTER JOIN MET_EXPORTRADAR T5 ON T4.RIF_ID = T5.PROG_ID AND T4.ORDINE = T5.ORDINE
	LEFT OUTER JOIN MET_EXPORTRADAR T6 ON T5.RIF_ID = T6.PROG_ID AND T5.ORDINE = T6.ORDINE
	LEFT OUTER JOIN MET_EXPORTRADAR T7 ON T6.RIF_ID = T7.PROG_ID AND T6.ORDINE = T7.ORDINE
	LEFT OUTER JOIN MET_EXPORTRADAR T8 ON T7.RIF_ID = T8.PROG_ID AND T7.ORDINE = T8.ORDINE
	LEFT OUTER JOIN MET_EXPORTRADAR T9 ON T8.RIF_ID = T9.PROG_ID AND T8.ORDINE = T9.ORDINE
	LEFT OUTER JOIN MET_EXPORTRADAR T10 ON T9.RIF_ID = T10.PROG_ID AND T9.ORDINE = T10.ORDINE
	LEFT OUTER JOIN MET_EXPORTRADAR T11 ON T10.RIF_ID = T11.PROG_ID AND T10.ORDINE = T11.ORDINE
	LEFT OUTER JOIN MET_EXPORTRADAR T12 ON T11.RIF_ID = T12.PROG_ID AND T11.ORDINE = T12.ORDINE
GO
GRANT SELECT ON MET_VISTA_ORD_EXPORTRADAR TO METODO98
GO

IF EXISTS(SELECT 1 FROM SYSOBJECTS WHERE SYSOBJECTS.ID=OBJECT_ID('MET_PROC_EXPORTRADAR') AND SYSOBJECTS.TYPE='P')
	DROP PROCEDURE MET_PROC_EXPORTRADAR
GO
CREATE PROCEDURE MET_PROC_EXPORTRADAR (@NOMEPIANIF VARCHAR(50),@ORDINE VARCHAR(42),@IDPIANO INT,@TIPO SMALLINT)
AS
INSERT INTO MET_EXPORTRADAR
SELECT DISTINCT
		@ORDINE AS ORDINE,
		0 AS ORDINAMENTO,
		LEG.LIVELLO, LEG.PROG_ID, LEG.RIF_ID,
		PP.RIFERIMENTI,
		PP.RIFCOMMCLI,
		(CASE PP.TIPORECORD
				WHEN 0 THEN 'FABBISOGNO'
				WHEN 1 THEN 'PROP. ACQUISTO'
				WHEN 2 THEN 'PROP. PRODUZIONE'
				WHEN 3 THEN 'ORD. CLIENTE'
				WHEN 4 THEN 'ORD. C/L'
				WHEN 5 THEN 'ORD. FORNITORE'
				WHEN 6 THEN 'ORD. PRODUZIONE'
				WHEN 7 THEN 'IMP. PRODUZIONE'
				WHEN 10 THEN 'FABB. MPS'
			ELSE
				'---'
		END) AS TIPO,
		PP.CODART, PP.DSCARTICOLO, PP.UMBASE, PP.QTABASE,
		CASE WHEN
				PP.TIPORECORD = 5
			THEN
				(SELECT EXD.DATARICH FROM extrarighedoc EXD WHERE EXD.IDTESTA = PP.IDTESTADOC AND EXD.IDRIGA = PP.IDRIGADOC)
			ELSE
				''
		END AS DATARICH,
		CASE WHEN
				PP.TIPORECORD = 5
			THEN
				CAST((SELECT EXD.CHKCONF FROM EXTRARIGHEDOC EXD WHERE EXD.IDTESTA = PP.IDTESTADOC AND EXD.IDRIGA = PP.IDRIGADOC) AS VARCHAR(1))
			ELSE
				'NA'
		END AS CONFERMATO,
		ISNULL(PP.DATAORD, '') AS DATAORD,
		PP.DATACONS,
		PP.CODCLIFOR, ISNULL(PP.RAGSOCCLIFOR, '') AS RAGIONESOCIALE,
		(CASE WHEN (SELECT ISNULL(COUNT(1), 0) FROM ECCEZIONIPROGPROD EPP WHERE LEG.PROG_ID = EPP.RIFID) > 0 THEN 1 ELSE 0 END) AS ECCEZIONI,
		ISNULL(E.CODPIANIFICATORE,0) AS CODPIANIFICATORE,
		GETDATE() AS DATAMODIFICA
	FROM
		VISTASITUAZIONEPROGPROD PP
		LEFT OUTER JOIN EXTRAMAG AS E ON PP.CODART=E.CODART
		INNER JOIN DBO.[MAPS_NAVIGAPROGPRODVALLE](@NOMEPIANIF,  @IDPIANO) LEG ON PP.NOMEPIANIF=LEG.NOMEPIANIF AND PP.PROG_ID=LEG.PROG_ID
GO
GRANT EXECUTE ON MET_PROC_EXPORTRADAR TO METODO98
GO

--vista utilizzata dall'agente LISTACOMM_ER.AGT per popolare la tabella MET_TAB_EXPORTRADAR con Synapse
IF EXISTS(SELECT 1 FROM SYSOBJECTS WHERE SYSOBJECTS.ID=OBJECT_ID('MET_LISTACOMM_EXPORTRADAR') AND SYSOBJECTS.TYPE='V')
	DROP VIEW MET_LISTACOMM_EXPORTRADAR
GO
CREATE VIEW MET_LISTACOMM_EXPORTRADAR AS
SELECT DISTINCT
	1 AS FLGSEL,
	MSE.IDTESTADOC,
	MSE.IDRIGADOC,
	MSE.RIFERIMENTI,
	MSE.TIPO,
	''AS NOTE,
	'IMPORT' AS UTENTEMODIFICA,
	GETDATE() AS DATAMODIFICA
FROM
	MET_SEL_EXPORTRADAR MSE
WHERE
	MSE.STATOORDINE<>3 AND MSE.TIPOCOM='CAM'
	--MSE.STATOORDINE<>3 AND ((MSE.TIPOCOM='CAM' AND tipo=6) OR tipo = 3)
GO
GRANT SELECT ON MET_LISTACOMM_EXPORTRADAR TO METODO98
GO
-----------------------------------------------------------------------------------
-- Fine aggiunte del 15/10/2015 - daniele r
-----------------------------------------------------------------------------------



-----------------------------------------------------------------------------------
-- Aggiunte del 23/02/2016 - daniele r
-----------------------------------------------------------------------------------
IF NOT EXISTS (SELECT 1 FROM SysColumns WHERE SysColumns.ID=(SELECT ID FROM SysObjects WHERE ID=object_id('EXTRAMAG') AND SysObjects.XType='U') AND SysColumns.Name='RICAMBIO')
	ALTER TABLE EXTRAMAG ADD RICAMBIO INT DEFAULT 0 NOT NULL
GO
IF NOT EXISTS(SELECT 1 FROM SysObjects WHERE SysObjects.ID=object_id('RICAMBIO_CHECK') AND SysObjects.Type='C')
	ALTER TABLE EXTRAMAG ADD CONSTRAINT RICAMBIO_CHECK CHECK(RICAMBIO In (0,1))
GO
-----------------------------------------------------------------------------------
-- Fine Aggiunte del 23/02/2016 - daniele r
-----------------------------------------------------------------------------------



--------------------------------------------------------
-- Aggiunte del 03/11/2016 - Gildo                    --
--------------------------------------------------------
-- Creazione vista visione avanzamenti per dipendente --
--------------------------------------------------------

	IF EXISTS (SELECT 1 FROM Sys.Objects SO WHERE SO.Name='BCEA_VistaAvanzamentoMovimenti' AND SO.Type='V')
		DROP VIEW BCEA_VistaAvanzamentoMovimenti
	GO

	CREATE VIEW BCEA_VistaAvanzamentoMovimenti AS
		SELECT	VSA.*,
				rtrim(rtrim(isnull(TD.Cognome, '')) + ' ' + isnull(TD.Nome, '')) AS Dip,
				isnull(TD.Codice, '') AS CodDip,
				rtrim(isnull(TD.Cognome, '')) AS CognDip,
				isnull(TR.Descrizione, '') AS DescRep,
				isnull(TCA.Descrizione, '') AS DescCaus,
				isnull(EA.NoteLav, '') AS NoteLav
		FROM VistaStoricoAvanzamenti VSA
			LEFT OUTER JOIN DipendentiMovimento DM ON VSA.Progressivo=DM.RifProgressivo
			LEFT OUTER JOIN TabellaDipendenti TD ON DM.Dipendente=TD.Codice
			LEFT OUTER JOIN TabellaReparti TR ON VSA.CodReparto=TR.Codice
			LEFT OUTER JOIN TabCausaliAvanzamento TCA ON VSA.CodCausale=TCA.Codice
			LEFT OUTER JOIN ExtraAvanzamenti EA ON VSA.Progressivo=EA.RifProgressivo
	GO

	GRANT SELECT ON BCEA_VistaAvanzamentoMovimenti TO Metodo98
	GO

--------------------------------------------------------
-- Fine aggiunte del 03/11/2016 - Gildo               --
--------------------------------------------------------

-----------------------------------------------------------------------------------
-- Aggiunte del 21/03/2017 - daniele r
-----------------------------------------------------------------------------------
IF EXISTS (SELECT 1 FROM Sys.Objects SO WHERE SO.Name='MET_MOXMES_VISTA_TOTLETTURE' AND SO.Type='V')
	DROP VIEW MET_MOXMES_VISTA_TOTLETTURE
GO
CREATE VIEW MET_MOXMES_VISTA_TOTLETTURE AS
SELECT
	RL.IDTESTA AS IDTESTALISTA
	,RL.IDRIGA AS IDRIGALISTA
	,RL.QTAORIGGEST AS QTADATRASFERIRE
	,COALESCE(TRA.QTATRASFERITA,0) AS QTATRASFERITA
	,RL.QTAORIGGEST - COALESCE(TRA.QTATRASFERITA,0) AS QTARESIDUA
FROM
	RIGHELISTATRASF RL
	LEFT OUTER JOIN
	(
		SELECT
			RT.IDLISTA
			,RT.IDRIGALISTA
			,SUM(LT.QTATRASFERITA) AS QTATRASFERITA
		FROM MOXMES_RIGHETRASFERIMENTO RT
			INNER JOIN MOXMES_LETTURETRASFERIMENTO LT ON LT.RIFTRASFERIMENTO=RT.RIFTRASFERIMENTO AND LT.RIFRIGA=RT.IDRIGA
		GROUP BY
			RT.IDLISTA
			,RT.IDRIGALISTA
	) TRA ON TRA.IDLISTA=RL.IDTESTA AND TRA.IDRIGALISTA=RL.IDRIGA
GO
GRANT SELECT ON MET_MOXMES_VISTA_TOTLETTURE TO METODO98
GO

IF EXISTS (SELECT 1 FROM Sys.Objects SO WHERE SO.Name='MOXMES_VISTARESIDUITRASFERIMENTO' AND SO.Type='V')
	DROP VIEW MOXMES_VISTARESIDUITRASFERIMENTO
GO
CREATE VIEW MOXMES_VISTARESIDUITRASFERIMENTO AS
SELECT
	mtt.IDTRASFERIMENTO
	,TP.TIPOCOM
	,TP.ESERCIZIO
	,TP.NUMEROCOM
	,TP.TIPOCOM+'/'+CAST(TP.ESERCIZIO AS VARCHAR)+'/'+RIGHT('0000000000'+CAST(TP.NUMEROCOM AS VARCHAR),10)+'/'+RIGHT('00000'+CAST(RP.IDRIGA AS VARCHAR),5) AS RIFORDINE
	,CONCAT('*',RIGHT(REPLICATE('0',8)+CAST(rP.IDTESTA AS varchar),8),'.',RIGHT(REPLICATE('0',4)+CAST(rP.IDRIGA AS varchar),4),'*') AS BARCODEORDINE
	,RP.CODART AS CODARTORD
	,RP.DESCRIZIONEART
	,RP.DATAEMISSIONE AS DATAEMISSIONEORD
	,RP.DATAINIZIORICH
	,RP.DATAFINERICH
	,RP.UMGEST
	,RP.QTAGESTIONE
	,RP.DEPOSITO
	,RP.NOTE
	,RP.RIFDOCUMENTO
	,RP.RIFCOMMCLI
	,IP.CODART AS CODARTIMP
	,IP.DESCRIZIONEART AS DESCRIZIONEARTIMP
	,IP.SEQASSEMBLAGGIO
	,IP.UMGEST AS UMGESTIMP
	,IP.QTAUNITARIA
	,IP.QTAGESTIONETRASF
	,IP.QTAGESTIONE AS QTAGESTIONEIMP
	,MLT.QTADATRASFERIRE
	,MLT.QTATRASFERITA
	,(CASE WHEN MLT.QTARESIDUA<0 THEN 0 ELSE MLT.QTARESIDUA END) AS QTARESIDUA
	,IP.DEPOSITO AS DEPOSITOCOLLIMP
FROM
	MOXMES_TestaTrasferimento AS MTT
	INNER JOIN  MOXMES_RigheTrasferimento AS MRT ON mtt.IDTRASFERIMENTO=mrt.RIFTRASFERIMENTO
	INNER JOIN  MET_MOXMES_VISTA_TOTLETTURE AS MLT ON MLT.IDTESTALISTA=MRT.IDLISTA AND MLT.IDRIGALISTA=MRT.IDRIGALISTA
	INNER JOIN TESTEORDINIPROD TP ON TP.PROGRESSIVO=MRT.IDCOMMESSA
	INNER JOIN RIGHEORDPROD RP ON RP.IDTESTA=MRT.IDCOMMESSA AND RP.IDRIGA=MRT.IDORDINE
	INNER JOIN IMPEGNIORDPROD IP ON IP.IDTESTA=MRT.IDCOMMESSA AND IP.IDRIGA=MRT.IDORDINE AND IP.IDIMPEGNO=MRT.IDIMPEGNO
GO
GRANT SELECT ON MOXMES_VISTARESIDUITRASFERIMENTO TO METODO98
GO

IF EXISTS (SELECT 1 FROM Sys.Objects SO WHERE SO.Name='MET_VISTADOC_PRELEVANTI' AND SO.Type='V')
	DROP VIEW MET_VISTADOC_PRELEVANTI
GO
CREATE VIEW MET_VISTADOC_PRELEVANTI AS
SELECT DISTINCT
	R.IDTESTARP,
	T.PROGRESSIVO,
	T.ESERCIZIO,
	T.TIPODOC,
	T.NUMERODOC,
	T.BIS,
	T.DATADOC,
	T.DOCCHIUSO AS BOLLASPEDITA
FROM
	RIGHEDOCUMENTI AS R
	INNER JOIN TESTEDOCUMENTI AS T ON R.IDTESTA=T.PROGRESSIVO
WHERE
	R.IDTESTARP>0
GO
GRANT SELECT ON MET_VISTADOC_PRELEVANTI TO METODO98
GO

IF EXISTS (SELECT 1 FROM Sys.Objects SO WHERE SO.Name='MET_VISTATESTEDOC_PREL' AND SO.Type='V')
	DROP VIEW MET_VISTATESTEDOC_PREL
go
CREATE VIEW MET_VISTATESTEDOC_PREL AS
SELECT
	VTD.*,
	TN.DESCRIZIONE AS DSCNAZIONE,
	MVP.PROGRESSIVO AS IDTESTA_DEST,MVP.ESERCIZIO AS ESERCIZIO_DEST,MVP.TIPODOC AS TIPODOC_DEST,MVP.NUMERODOC AS NUMERODOC_DEST,MVP.BIS AS BIS_DEST,MVP.DATADOC AS DATADOC_DEST,MVP.BOLLASPEDITA,T3.ASPETTOBENI AS ASPETTOBENI_DEST,T3.TOTPESONETTO AS PESONETTO_DEST,T3.TOTPESOLORDO AS PESOLORDO_DEST,
	(CASE WHEN ARCF.STATOCONTABILITA+ARCF.STATOMAGAZZINO+ARCF.STATOORDINI+ARCF.STATOBOLLE+ARCF.STATOFATTURE+ARCF.STATONOTEACCREDITO>0 THEN 'BLOCCATO' ELSE '' END) AS STATOTOT,
	ARCF.STATOCONTABILITA+ARCF.STATOMAGAZZINO+ARCF.STATOORDINI+ARCF.STATOBOLLE+ARCF.STATOFATTURE+ARCF.STATONOTEACCREDITO AS VALSTATOTOT

FROM
	VISTATESTEDOC VTD
	LEFT OUTER JOIN TABNAZIONI TN ON TN.CODICE=VTD.CODNAZIONE
	LEFT OUTER JOIN ANAGRAFICARISERVATICF ARCF ON ARCF.CODCONTO=VTD.CODCLIFOR AND ARCF.ESERCIZIO=VTD.ESERCIZIO
	LEFT OUTER JOIN MET_VISTADOC_PRELEVANTI AS MVP ON vtd.progressivo=MVP.IDTESTARP
	LEFT OUTER JOIN TESTEDOCUMENTI AS T3 ON MVP.PROGRESSIVO=T3.PROGRESSIVO
GO
GRANT SELECT ON MET_VISTATESTEDOC_PREL TO METODO98
GO

-----------------------------------------------------------------------------------
-- Fine Aggiunte del 21/03/2017 - daniele r
-----------------------------------------------------------------------------------



/*
richiesta Imerio del 30/03/2017
settimana consegna su testedocumenti
*/

IF EXISTS (SELECT 1 FROM SYSOBJECTS WHERE ID = OBJECT_ID('Met_Vista_Settimana_Consegna') AND TYPE = 'V')
	DROP VIEW Met_Vista_Settimana_Consegna;
GO

CREATE VIEW Met_Vista_Settimana_Consegna AS
WITH    cte
          AS (SELECT
                R.IDTESTA AS ID, DatePart(iso_week, Max(R.DATACONSEGNA)) AS MaxSettimanaConsegna
              FROM
                RIGHEDOCUMENTI AS R
              GROUP BY
                R.IDTESTA)
    SELECT
        T.PROGRESSIVO AS ID, cte.MaxSettimanaConsegna AS SettimanaConsegna
    FROM
        TESTEDOCUMENTI AS T
    JOIN cte
        ON cte.ID=T.PROGRESSIVO;
GO

GRANT SELECT ON Met_Vista_Settimana_Consegna TO Metodo98
GO


IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'MET_VISTATESTEDOC'))
DROP VIEW MET_VISTATESTEDOC
GO
CREATE VIEW MET_VISTATESTEDOC AS
SELECT
	VTD.*,
	MVSC.SettimanaConsegna,
	TN.DESCRIZIONE AS DSCNAZIONE,
	(CASE WHEN ARCF.STATOCONTABILITA+ARCF.STATOMAGAZZINO+ARCF.STATOORDINI+ARCF.STATOBOLLE+ARCF.STATOFATTURE+ARCF.STATONOTEACCREDITO>0 THEN 'BLOCCATO' ELSE '' END) AS STATOTOT,
	ARCF.STATOCONTABILITA+ARCF.STATOMAGAZZINO+ARCF.STATOORDINI+ARCF.STATOBOLLE+ARCF.STATOFATTURE+ARCF.STATONOTEACCREDITO AS VALSTATOTOT
FROM
	VISTATESTEDOC VTD
	LEFT OUTER JOIN TABNAZIONI TN ON TN.CODICE=VTD.CODNAZIONE
	LEFT OUTER JOIN ANAGRAFICARISERVATICF ARCF ON ARCF.CODCONTO=VTD.CODCLIFOR AND ARCF.ESERCIZIO=VTD.ESERCIZIO
	LEFT OUTER JOIN Met_Vista_Settimana_Consegna AS MVSC ON MVSC.ID = VTD.PROGRESSIVO;
GO
GRANT SELECT ON MET_VISTATESTEDOC TO METODO98
GO

--vista utilizzata dall'agente LISTACOMM_ER_SETT.AGT per popolare la tabella MET_TAB_EXPORTRADAR con Synapse
IF EXISTS(SELECT 1 FROM SYSOBJECTS WHERE SYSOBJECTS.ID=OBJECT_ID('MET_LISTACOMM_EXPORTRADAR_SETT') AND SYSOBJECTS.TYPE='V')
	DROP VIEW MET_LISTACOMM_EXPORTRADAR_SETT
GO
CREATE VIEW MET_LISTACOMM_EXPORTRADAR_SETT AS
SELECT DISTINCT
	1 AS FLGSEL,
	MSE.IDTESTADOC,
	MSE.IDRIGADOC,
	MSE.RIFERIMENTI,
	MSE.TIPO,
	''AS NOTE,
	'IMPORT' AS UTENTEMODIFICA,
	GETDATE() AS DATAMODIFICA
FROM
	MET_SEL_EXPORTRADAR MSE
WHERE
	--MSE.STATOORDINE<>3 AND MSE.TIPOCOM='CAM'
	MSE.STATOORDINE<>3 AND ((MSE.TIPOCOM='CAM' AND tipo=6) OR tipo = 3)
	AND LEFT(MSE.RIFERIMENTI,3)<>'\\\'
GO
GRANT SELECT ON MET_LISTACOMM_EXPORTRADAR_SETT TO METODO98
GO
-----------------------------------------------------------------------------------
-- Fine aggiunte del 23/05/2017 - daniele r
-----------------------------------------------------------------------------------



-----------------------------------------------------------------------------------
-- Aggiunte del 07/06/2017 - daniele r
-----------------------------------------------------------------------------------
CREATE INDEX MET_RIFID ON ECCEZIONIPROGPROD(NOMEPIANIF ASC,RIFID ASC)
GO

IF EXISTS(SELECT 1 FROM SYSOBJECTS WHERE SYSOBJECTS.ID=OBJECT_ID('MET_VISTA_EXPORTRADAR_ECCEZIONI') AND SYSOBJECTS.TYPE='V')
	DROP VIEW MET_VISTA_EXPORTRADAR_ECCEZIONI
GO
CREATE VIEW MET_VISTA_EXPORTRADAR_ECCEZIONI AS
	SELECT
		NOMEPIANIF, RIFID, CONVERT(VARCHAR,MIN(NUOVADATA),103) AS NUOVADATA
	FROM
		ECCEZIONIPROGPROD EP
	WHERE
		EP.TIPO IN (5, 6)
	GROUP BY
		NOMEPIANIF, RIFID
GO
GRANT SELECT ON MET_VISTA_EXPORTRADAR_ECCEZIONI TO METODO98
GO

ALTER TABLE MET_EXPORTRADAR ADD NUOVADATA VARCHAR(10)
GO

IF EXISTS(SELECT 1 FROM SYSOBJECTS WHERE SYSOBJECTS.ID=OBJECT_ID('MET_PROC_EXPORTRADAR') AND SYSOBJECTS.TYPE='P')
	DROP PROCEDURE MET_PROC_EXPORTRADAR
GO
CREATE PROCEDURE MET_PROC_EXPORTRADAR (@NOMEPIANIF VARCHAR(50),@ORDINE VARCHAR(42),@IDPIANO INT,@TIPO SMALLINT)
AS
INSERT INTO MET_EXPORTRADAR
SELECT DISTINCT
		@ORDINE AS ORDINE,
		0 AS ORDINAMENTO,
		LEG.LIVELLO, LEG.PROG_ID, LEG.RIF_ID,
		PP.RIFERIMENTI,
		PP.RIFCOMMCLI,
		(CASE PP.TIPORECORD
				WHEN 0 THEN 'FABBISOGNO'
				WHEN 1 THEN 'PROP. ACQUISTO'
				WHEN 2 THEN 'PROP. PRODUZIONE'
				WHEN 3 THEN 'ORD. CLIENTE'
				WHEN 4 THEN 'ORD. C/L'
				WHEN 5 THEN 'ORD. FORNITORE'
				WHEN 6 THEN 'ORD. PRODUZIONE'
				WHEN 7 THEN 'IMP. PRODUZIONE'
				WHEN 10 THEN 'FABB. MPS'
			ELSE
				'---'
		END) AS TIPO,
		PP.CODART, PP.DSCARTICOLO, PP.UMBASE, PP.QTABASE,
		CASE WHEN
				PP.TIPORECORD = 5
			THEN
				(SELECT RD.DATACONSEGNARICHIESTA FROM RIGHEDOCUMENTI RD WHERE RD.IDTESTA = PP.IDTESTADOC AND RD.IDRIGA = PP.IDRIGADOC)
			ELSE
				''
		END AS DATARICH,
		CASE WHEN
				PP.TIPORECORD = 5
			THEN
				CAST((SELECT EXD.CHKCONF FROM EXTRARIGHEDOC EXD WHERE EXD.IDTESTA = PP.IDTESTADOC AND EXD.IDRIGA = PP.IDRIGADOC) AS VARCHAR(1))
			ELSE
				'NA'
		END AS CONFERMATO,
		ISNULL(PP.DATAORD, '') AS DATAORD,
		PP.DATACONS,
		PP.CODCLIFOR, ISNULL(PP.RAGSOCCLIFOR, '') AS RAGIONESOCIALE,
		(CASE WHEN (SELECT ISNULL(COUNT(1), 0) FROM ECCEZIONIPROGPROD EPP WHERE LEG.PROG_ID = EPP.RIFID) > 0 THEN 1 ELSE 0 END) AS ECCEZIONI,
		ISNULL(E.CODPIANIFICATORE,0) AS CODPIANIFICATORE,
		GETDATE() AS DATAMODIFICA,
		ISNULL(EE.NUOVADATA, '') AS NUOVADATA
	FROM
		VISTASITUAZIONEPROGPROD PP
		LEFT OUTER JOIN MET_VISTA_EXPORTRADAR_ECCEZIONI EE ON PP.NOMEPIANIF = EE.NOMEPIANIF AND PP.PROG_ID = EE.RIFID
		LEFT OUTER JOIN EXTRAMAG AS E ON PP.CODART=E.CODART
		INNER JOIN DBO.[MAPS_NAVIGAPROGPRODVALLE](@NOMEPIANIF,  @IDPIANO) LEG ON PP.NOMEPIANIF=LEG.NOMEPIANIF AND PP.PROG_ID=LEG.PROG_ID
GO
GRANT EXECUTE ON MET_PROC_EXPORTRADAR TO METODO98
GO

IF EXISTS(SELECT 1 FROM SYSOBJECTS WHERE SYSOBJECTS.ID=OBJECT_ID('MET_VISTA_ORD_EXPORTRADAR') AND SYSOBJECTS.TYPE='V')
	DROP VIEW MET_VISTA_ORD_EXPORTRADAR
GO
CREATE VIEW MET_VISTA_ORD_EXPORTRADAR AS
SELECT
	ROW_NUMBER() OVER (PARTITION BY T1.ORDINE ORDER BY
	LEFT(
		ISNULL(RIGHT(REPLICATE('0',10)+CAST(T12.PROG_ID AS VARCHAR) ,10),'') +
		ISNULL(RIGHT(REPLICATE('0',10)+CAST(T11.PROG_ID AS VARCHAR) ,10),'') +
		ISNULL(RIGHT(REPLICATE('0',10)+CAST(T10.PROG_ID AS VARCHAR) ,10),'') +
		ISNULL(RIGHT(REPLICATE('0',10)+CAST(T9.PROG_ID AS VARCHAR) ,10),'') +
		ISNULL(RIGHT(REPLICATE('0',10)+CAST(T8.PROG_ID AS VARCHAR) ,10),'') +
		ISNULL(RIGHT(REPLICATE('0',10)+CAST(T7.PROG_ID AS VARCHAR) ,10),'') +
		ISNULL(RIGHT(REPLICATE('0',10)+CAST(T6.PROG_ID AS VARCHAR) ,10),'') +
		ISNULL(RIGHT(REPLICATE('0',10)+CAST(T5.PROG_ID AS VARCHAR) ,10),'') +
		ISNULL(RIGHT(REPLICATE('0',10)+CAST(T4.PROG_ID AS VARCHAR) ,10),'') +
		ISNULL(RIGHT(REPLICATE('0',10)+CAST(T3.PROG_ID AS VARCHAR) ,10),'') +
		ISNULL(RIGHT(REPLICATE('0',10)+CAST(T2.PROG_ID AS VARCHAR) ,10),'') +
		ISNULL(RIGHT(REPLICATE('0',10)+CAST(T1.PROG_ID AS VARCHAR) ,10),'') +
		REPLICATE('0',120), 120)) AS ORDINA,
	LEFT(
		ISNULL(RIGHT(REPLICATE('0',10)+CAST(T12.PROG_ID AS VARCHAR) ,10),'') +
		ISNULL(RIGHT(REPLICATE('0',10)+CAST(T11.PROG_ID AS VARCHAR) ,10),'') +
		ISNULL(RIGHT(REPLICATE('0',10)+CAST(T10.PROG_ID AS VARCHAR) ,10),'') +
		ISNULL(RIGHT(REPLICATE('0',10)+CAST(T9.PROG_ID AS VARCHAR) ,10),'') +
		ISNULL(RIGHT(REPLICATE('0',10)+CAST(T8.PROG_ID AS VARCHAR) ,10),'') +
		ISNULL(RIGHT(REPLICATE('0',10)+CAST(T7.PROG_ID AS VARCHAR) ,10),'') +
		ISNULL(RIGHT(REPLICATE('0',10)+CAST(T6.PROG_ID AS VARCHAR) ,10),'') +
		ISNULL(RIGHT(REPLICATE('0',10)+CAST(T5.PROG_ID AS VARCHAR) ,10),'') +
		ISNULL(RIGHT(REPLICATE('0',10)+CAST(T4.PROG_ID AS VARCHAR) ,10),'') +
		ISNULL(RIGHT(REPLICATE('0',10)+CAST(T3.PROG_ID AS VARCHAR) ,10),'') +
		ISNULL(RIGHT(REPLICATE('0',10)+CAST(T2.PROG_ID AS VARCHAR) ,10),'') +
		ISNULL(RIGHT(REPLICATE('0',10)+CAST(T1.PROG_ID AS VARCHAR) ,10),'') +
		REPLICATE('0',120), 120
	) AS ORDINA2,
	T1.*
FROM
	MET_EXPORTRADAR T1
	LEFT OUTER JOIN MET_EXPORTRADAR T2 ON T1.RIF_ID = T2.PROG_ID AND T1.ORDINE = T2.ORDINE
	LEFT OUTER JOIN MET_EXPORTRADAR T3 ON T2.RIF_ID = T3.PROG_ID AND T2.ORDINE = T3.ORDINE
	LEFT OUTER JOIN MET_EXPORTRADAR T4 ON T3.RIF_ID = T4.PROG_ID AND T3.ORDINE = T4.ORDINE
	LEFT OUTER JOIN MET_EXPORTRADAR T5 ON T4.RIF_ID = T5.PROG_ID AND T4.ORDINE = T5.ORDINE
	LEFT OUTER JOIN MET_EXPORTRADAR T6 ON T5.RIF_ID = T6.PROG_ID AND T5.ORDINE = T6.ORDINE
	LEFT OUTER JOIN MET_EXPORTRADAR T7 ON T6.RIF_ID = T7.PROG_ID AND T6.ORDINE = T7.ORDINE
	LEFT OUTER JOIN MET_EXPORTRADAR T8 ON T7.RIF_ID = T8.PROG_ID AND T7.ORDINE = T8.ORDINE
	LEFT OUTER JOIN MET_EXPORTRADAR T9 ON T8.RIF_ID = T9.PROG_ID AND T8.ORDINE = T9.ORDINE
	LEFT OUTER JOIN MET_EXPORTRADAR T10 ON T9.RIF_ID = T10.PROG_ID AND T9.ORDINE = T10.ORDINE
	LEFT OUTER JOIN MET_EXPORTRADAR T11 ON T10.RIF_ID = T11.PROG_ID AND T10.ORDINE = T11.ORDINE
	LEFT OUTER JOIN MET_EXPORTRADAR T12 ON T11.RIF_ID = T12.PROG_ID AND T11.ORDINE = T12.ORDINE
GO
GRANT SELECT ON MET_VISTA_ORD_EXPORTRADAR TO METODO98
GO
-----------------------------------------------------------------------------------
-- Fine aggiunte del 07/06/2017 - daniele r
-----------------------------------------------------------------------------------



/*

  AAAA   AAAA   AAAA   AAAA  RRRRR   GGGG  HH  HH  ######
 AA  AA AA  AA AA  AA AA  AA RR  RR GG  GG HH  HH  ######
 AA  AA AA  AA AA  AA AA  AA RR  RR GG     HH  HH   ####
 AAAAAA AAAAAA AAAAAA AAAAAA RRRRR  GG GGG HHHHHH    ##
 AA  AA AA  AA AA  AA AA  AA RR  RR GG  GG HH  HH
 AA  AA AA  AA AA  AA AA  AA RR  RR  GGG G HH  HH    ##

 14/06/2017
 vista per risoluzione problemi quest su visioni errate

*/

IF EXISTS(SELECT 1 FROM SYSOBJECTS WHERE SYSOBJECTS.ID=OBJECT_ID('BreCea_Articoli_Anag') AND SYSOBJECTS.TYPE='V')
	DROP VIEW BreCea_Articoli_Anag
GO
CREATE VIEW BreCea_Articoli_Anag
AS
SELECT ANAGRAFICAARTICOLI.*
     , ANAGRAFICAARTICOLICOMM.CODICEART
     , ANAGRAFICAARTICOLICOMM.ESERCIZIO
     , ANAGRAFICAARTICOLICOMM.CODIVA
     , ANAGRAFICAARTICOLICOMM.SCONTO1
     , ANAGRAFICAARTICOLICOMM.SCONTO2
     , ANAGRAFICAARTICOLICOMM.SCONTO3
     , ANAGRAFICAARTICOLICOMM.GRUPPOPRZPART
     , ANAGRAFICAARTICOLICOMM.GRUPPOPRVPART
     , ANAGRAFICAARTICOLICOMM.PROVV
     , ANAGRAFICAARTICOLICOMM.BARCODE
     , ANAGRAFICAARTICOLICOMM.BARCODETYPE
     , ANAGRAFICAARTICOLICOMM.BARCODESTRING
     , ANAGRAFICAARTICOLICOMM.CODICEALT1
     , ANAGRAFICAARTICOLICOMM.CODICEALT2
     , ANAGRAFICAARTICOLICOMM.SCGENVENDITEITA
     , ANAGRAFICAARTICOLICOMM.SCGENVENDITEEST
     , ANAGRAFICAARTICOLICOMM.SCGENACQUISTIITA
     , ANAGRAFICAARTICOLICOMM.SCGENACQUISTIEST
     , ANAGRAFICAARTICOLICOMM.INESAURIMENTO
     , ANAGRAFICAARTICOLICOMM.ESAURITO
     , ANAGRAFICAARTICOLICOMM.QTAMINCONS
     , ANAGRAFICAARTICOLICOMM.USAPREZZIPART
     , ANAGRAFICAARTICOLICOMM.FlagCauzioni
     , ANAGRAFICAARTICOLICOMM.FLGBARCODEGENDAPROCAUTOMSTD
     , ANAGRAFICAARTICOLICOMM.OLDBARCODE
     , ANAGRAFICAARTICOLICOMM.OLDBARCODETYPE
     , ANAGRAFICAARTICOLICOMM.OLDBARCODESTRING
     , ANAGRAFICAARTICOLICOMM.PEZZIPERPALLET
     , ANAGRAFICAARTICOLICOMM.EXPORTECOMMERCE
     , ANAGRAFICAARTICOLICOMM.CODIVAINTRA
     , ARTICOLIUMPREFERITE.CODART
     , ARTICOLIUMPREFERITE.TIPOUM
     , ARTICOLIUMPREFERITE.UM
FROM ANAGRAFICAARTICOLI
    LEFT OUTER JOIN ANAGRAFICAARTICOLICOMM
        ON ANAGRAFICAARTICOLI.CODICE = ANAGRAFICAARTICOLICOMM.CODICEART
           AND ANAGRAFICAARTICOLICOMM.ESERCIZIO =
               (SELECT T.ESERCIZIOATTIVO FROM dbo.TABUTENTI AS T WHERE User_Name() = T.USERDB)
    LEFT OUTER JOIN ARTICOLIUMPREFERITE
        ON ANAGRAFICAARTICOLI.CODICE = ARTICOLIUMPREFERITE.CODART
           AND TIPOUM = 1;
GO

GRANT SELECT ON BreCea_Articoli_Anag TO Metodo98;
GO



-----------------------------------------------------------------------------------
-- Aggiunte del 28/06/2017 - daniele r
-----------------------------------------------------------------------------------
DROP VIEW MET_LISTEPALMARI
GO
CREATE VIEW MET_LISTEPALMARI AS
-- QUESTA VISTA RITORNA PER IDTRASFERIMENTO (MOX), L'ELENCO DELLE LISTE DI TRASFERIMENTO (METODO) SPARATE DAL MAGAZZINIERE
SELECT DISTINCT
	XRT.RIFTRASFERIMENTO AS IDTRASFERIMENTO,
	XRT.IDLISTA AS IDLISTATRASF
FROM
	MOXMES_RIGHETRASFERIMENTO XRT
GO
GRANT SELECT ON MET_LISTEPALMARI TO METODO98
GO

DROP VIEW MET_LISTEPALMARILETTURE
GO
CREATE VIEW MET_LISTEPALMARILETTURE AS
-- QUESTA VISTA RITORNA PER RIGA LISTA TRASFERIMENTO, LA SOMMA DELLE QUANTITÀ SPARATE DAL MAGAZZINIERE
SELECT DISTINCT
	XRT.IDLISTA AS IDTESTALISTATRASF,
	XRT.IDRIGALISTA AS IDRIGALISTATRASF,
	SUM(XLT.QTATRASFERITA) AS QTALETTUREPALMARE
FROM
	MOXMES_RIGHETRASFERIMENTO XRT
	INNER JOIN MOXMES_LETTURETRASFERIMENTO XLT ON XRT.RIFTRASFERIMENTO = XLT.RIFTRASFERIMENTO AND XRT.IDRIGA = XLT.RIFRIGA
GROUP BY
	XRT.IDLISTA, XRT.IDRIGALISTA
GO
GRANT SELECT ON MET_LISTEPALMARILETTURE TO METODO98
GO

DROP VIEW MOXMES_VISTARESIDUITRASFERIMENTO
GO
CREATE VIEW MOXMES_VISTARESIDUITRASFERIMENTO AS
SELECT
	LP.IDTRASFERIMENTO,
	TL.PROGRESSIVO AS IDLISTATRASF,
	CONCAT('*',RIGHT('00000000'+CAST(TL.PROGRESSIVO AS VARCHAR),8),'*') AS BARCODELISTA,
	TL.CODICELISTA,
	TL.ESERCIZIO AS ESERCIZIOLISTA,
	TL.NUMEROLISTA,
	TL.CODICELISTA+'/'+CAST(TL.ESERCIZIO AS VARCHAR)+'/'+RIGHT('0000000000'+CAST(TL.NUMEROLISTA AS VARCHAR),10) AS RIFLISTA,
	TOR.TIPOCOM,
	TOR.ESERCIZIO,
	TOR.NUMEROCOM,
	TOR.TIPOCOM+'/'+CAST(TOR.ESERCIZIO AS VARCHAR)+'/'+RIGHT('0000000000'+CAST(TOR.NUMEROCOM AS VARCHAR),10)+'/'+RIGHT('00000'+CAST(ROP.IDRIGA AS VARCHAR),5) AS RIFORDINE,
	CONCAT('*',RIGHT(REPLICATE('0',8)+CAST(ROP.IDTESTA AS VARCHAR),8),'.',RIGHT(REPLICATE('0',4)+CAST(ROP.IDRIGA AS VARCHAR),4),'*') AS BARCODEORDINE,
	ROP.CODART AS CODARTORD,
	ROP.DESCRIZIONEART,
	ROP.DATAEMISSIONE AS DATAEMISSIONEORD,
	ROP.DATAINIZIORICH,
	ROP.DATAFINERICH,
	ROP.UMGEST,
	ROP.QTAGESTIONE,
	ROP.DEPOSITO,
	ROP.NOTE,
	ROP.RIFDOCUMENTO,
	ROP.RIFCOMMCLI,
	IOP.CODART AS CODARTIMP,
	IOP.DESCRIZIONEART AS DESCRIZIONEARTIMP,
	IOP.SEQASSEMBLAGGIO,
	IOP.UMGEST AS UMGESTIMP,
	IOP.QTAUNITARIA,
	IOP.QTAGESTIONETRASF,
	IOP.QTAGESTIONE AS QTAGESTIONEIMP,
	IOP.QTAGESTIONE AS QTADATRASFERIRE,	-- QTÀ ORIGINALE
	ISNULL(PL.QTALETTUREPALMARE, 0) AS QTATRASFERITA,	-- QTÀ TOTALE LETTA DA PALMARE (CONSOLIDATA E NON)
	IOP.QTAGESTIONE - RL.QTAORIGGEST AS QTADOCEMESSI,	-- QTÀ EMESSA
	(CASE WHEN (IOP.QTAGESTIONE - ISNULL(PL.QTALETTUREPALMARE, 0))<0 THEN 0 ELSE (IOP.QTAGESTIONE - ISNULL(PL.QTALETTUREPALMARE, 0)) END) AS QTARESIDUA,
	IOP.DEPOSITO AS DEPOSITOCOLLIMP
FROM
	MET_LISTEPALMARI LP
	INNER JOIN TESTELISTATRASF TL ON LP.IDLISTATRASF = TL.PROGRESSIVO
	INNER JOIN RIGHELISTATRASF RL ON TL.PROGRESSIVO = RL.IDTESTA
	INNER JOIN TESTEORDINIPROD TOR ON RL.RIFTESTACOMM = TOR.PROGRESSIVO
	INNER JOIN RIGHEORDPROD ROP ON RL.RIFTESTACOMM = ROP.IDTESTA AND RL.RIFRIGAORD = ROP.IDRIGA
	INNER JOIN IMPEGNIORDPROD IOP ON RL.RIFTESTACOMM = IOP.IDTESTA AND RL.RIFRIGAORD = IOP.IDRIGA AND RL.RIFRIGAIMP = IOP.IDIMPEGNO
	LEFT OUTER JOIN MET_LISTEPALMARILETTURE PL ON RL.IDTESTA = PL.IDTESTALISTATRASF AND RL.IDRIGA = PL.IDRIGALISTATRASF
GO
GRANT SELECT ON MOXMES_VISTARESIDUITRASFERIMENTO TO METODO98
GO
-----------------------------------------------------------------------------------
-- FINE Aggiunte del 28/06/2017 - daniele r
-----------------------------------------------------------------------------------



-----------------------------------------------------------------------------------
-- Aggiunte del 31/08/2017 - daniele r
-----------------------------------------------------------------------------------
IF NOT EXISTS (SELECT 1 FROM BCEA_PARAMETRITDA WHERE PAR_MODULO='TAB_EXPORTRADAR' AND PAR_CODICE='NOMEPIANO2')
	INSERT INTO BCEA_PARAMETRITDA (PAR_MODULO, PAR_CODICE, PAR_DESC, PAR_TIPO, PAR_LUNGH, PAR_VALORE)
	VALUES ('TAB_EXPORTRADAR', 'NOMEPIANO2', 'Tabella export radar', 'varchar', 50, '02_PIANIFICAZIONE_RICAMBI')
GO

IF NOT EXISTS (SELECT 1 FROM SysColumns WHERE SysColumns.ID=(SELECT ID FROM SysObjects WHERE ID=object_id('MET_TAB_EXPORTRADAR') AND SysObjects.XType='U') AND SysColumns.Name='NOMEPIANIF')
	ALTER TABLE MET_TAB_EXPORTRADAR ADD NOMEPIANIF VARCHAR(50)
GO
IF NOT EXISTS (SELECT 1 FROM SysColumns WHERE SysColumns.ID=(SELECT ID FROM SysObjects WHERE ID=object_id('MET_EXPORTRADAR') AND SysObjects.XType='U') AND SysColumns.Name='NOMEPIANIF')
	ALTER TABLE MET_EXPORTRADAR ADD NOMEPIANIF VARCHAR(50)
GO

IF EXISTS(SELECT 1 FROM SYSOBJECTS WHERE SYSOBJECTS.ID=OBJECT_ID('MET_SEL_EXPORTRADAR') AND SYSOBJECTS.TYPE='V')
	DROP VIEW MET_SEL_EXPORTRADAR
GO
CREATE VIEW MET_SEL_EXPORTRADAR AS
SELECT
	PP.NOMEPIANIF,
	PP.PROG_ID, PP.TIPO, PP.RIFERIMENTI AS ORDINE,
	PP.IDTESTADOC,PP.IDRIGADOC,ISNULL(R.STATOORDINE,0) AS STATOORDINE,T.TIPOCOM,
	PP.CODART, AA.DESCRIZIONE, PP.RIFCOMMCLI, PP.DATAORD, PP.DATACONS,
	(CASE TIPO
		WHEN 3
		THEN
			ISNULL((SELECT CONCAT(TD.CODCLIFOR, ' - ', ACF.DSCCONTO1) FROM TESTEDOCUMENTI TD INNER JOIN ANAGRAFICACF ACF ON TD.CODCLIFOR = ACF.CODCONTO WHERE TD.PROGRESSIVO = PP.IDTESTADOC), '')
		ELSE
			ISNULL((SELECT CONCAT(TOR.CODCLIDEST, ' - ', ACF.DSCCONTO1) FROM RIGHEORDPROD TOR INNER JOIN ANAGRAFICACF ACF ON TOR.CODCLIDEST = ACF.CODCONTO WHERE TOR.IDTESTA = PP.IDTESTADOC AND TOR.IDRIGA = PP.IDRIGADOC), '')
		END
	) AS CLIFOR,
	(CASE PP.TIPO WHEN 6
	THEN
		CONCAT(T.TIPOCOM,'\',T.ESERCIZIO,'\',T.NUMEROCOM,'\',PP.IDRIGADOC)
	ELSE
		CONCAT(T2.TIPODOC,'\',T2.ESERCIZIO,'\',T2.NUMERODOC,'\',PP.IDRIGADOC)
	END) AS RIFERIMENTI
FROM
	PROGPRODUZIONE PP
	LEFT OUTER JOIN RIGHEORDPROD AS R ON PP.IDTESTADOC=R.IDTESTA AND PP.IDRIGADOC=R.IDRIGA
	INNER JOIN ANAGRAFICAARTICOLI AA ON PP.CODART = AA.CODICE
	INNER JOIN BCEA_PARAMETRITDA PAR ON PP.NOMEPIANIF = PAR.PAR_VALORE AND PAR.PAR_MODULO = 'TAB_EXPORTRADAR' --AND PAR.PAR_CODICE = 'NOMEPIANO'
	LEFT OUTER JOIN TESTEORDINIPROD AS T ON PP.IDTESTADOC=T.PROGRESSIVO AND PP.TIPO=6
	LEFT OUTER JOIN TESTEDOCUMENTI AS T2 ON PP.IDTESTADOC=T2.PROGRESSIVO AND PP.TIPO=3
WHERE
	TIPO IN (3,6)
GO
GRANT SELECT ON MET_SEL_EXPORTRADAR TO METODO98
GO

IF EXISTS(SELECT 1 FROM SYSOBJECTS WHERE SYSOBJECTS.ID=OBJECT_ID('MET_LISTACOMM_EXPORTRADAR') AND SYSOBJECTS.TYPE='V')
	DROP VIEW MET_LISTACOMM_EXPORTRADAR
GO
CREATE VIEW MET_LISTACOMM_EXPORTRADAR AS
SELECT DISTINCT
	1 AS FLGSEL,
	MSE.NOMEPIANIF,
	MSE.IDTESTADOC,
	MSE.IDRIGADOC,
	MSE.RIFERIMENTI,
	MSE.TIPO,
	''AS NOTE,
	'IMPORT' AS UTENTEMODIFICA,
	GETDATE() AS DATAMODIFICA
FROM
	MET_SEL_EXPORTRADAR MSE
WHERE
	MSE.STATOORDINE<>3 AND MSE.TIPOCOM='CAM'
	--MSE.STATOORDINE<>3 AND ((MSE.TIPOCOM='CAM' AND tipo=6) OR tipo = 3)
GO
GRANT SELECT ON MET_LISTACOMM_EXPORTRADAR TO METODO98
GO

IF EXISTS(SELECT 1 FROM SYSOBJECTS WHERE SYSOBJECTS.ID=OBJECT_ID('MET_LISTACOMM_EXPORTRADAR_SETT') AND SYSOBJECTS.TYPE='V')
	DROP VIEW MET_LISTACOMM_EXPORTRADAR_SETT
GO
CREATE VIEW MET_LISTACOMM_EXPORTRADAR_SETT AS
SELECT DISTINCT
	1 AS FLGSEL,
	MSE.NOMEPIANIF,
	MSE.IDTESTADOC,
	MSE.IDRIGADOC,
	MSE.RIFERIMENTI,
	MSE.TIPO,
	''AS NOTE,
	'IMPORT' AS UTENTEMODIFICA,
	GETDATE() AS DATAMODIFICA
FROM
	MET_SEL_EXPORTRADAR MSE
WHERE
	--MSE.STATOORDINE<>3 AND MSE.TIPOCOM='CAM'
	MSE.STATOORDINE<>3 AND ((MSE.TIPOCOM='CAM' AND tipo=6) OR tipo=3)
	AND MSE.RIFERIMENTI NOT LIKE '%\\\%'
GO

ALTER VIEW MET_VISTA_EXPORTRADAR AS
SELECT
	MTE.NOMEPIANIF,
	MTE.RIFERIMENTI AS ORDINE,
	PP.PROG_ID,
	PP.TIPO
FROM
	MET_TAB_EXPORTRADAR AS MTE
	INNER JOIN PROGPRODUZIONE PP ON MTE.IDTESTADOC=PP.IDTESTADOC AND MTE.IDRIGADOC=PP.IDRIGADOC AND MTE.TIPO=PP.TIPO AND PP.NOMEPIANIF = MTE.NOMEPIANIF
--	INNER JOIN BCEA_PARAMETRITDA PAR ON PP.NOMEPIANIF = PAR.PAR_VALORE AND PAR.PAR_MODULO = 'TAB_EXPORTRADAR' --AND PAR.PAR_CODICE = 'NOMEPIANO'
WHERE
	MTE.FLGSEL=1
GO
GRANT SELECT ON MET_LISTACOMM_EXPORTRADAR_SETT TO METODO98
GO

IF EXISTS(SELECT 1 FROM SYSOBJECTS WHERE SYSOBJECTS.ID=OBJECT_ID('MET_VISTA_ORD_EXPORTRADAR') AND SYSOBJECTS.TYPE='V')
	DROP VIEW MET_VISTA_ORD_EXPORTRADAR
GO
CREATE VIEW MET_VISTA_ORD_EXPORTRADAR AS
SELECT
	ROW_NUMBER() OVER (PARTITION BY T1.NOMEPIANIF,T1.ORDINE ORDER BY
	LEFT(
		ISNULL(RIGHT(REPLICATE('0',10)+CAST(T12.PROG_ID AS VARCHAR) ,10),'') +
		ISNULL(RIGHT(REPLICATE('0',10)+CAST(T11.PROG_ID AS VARCHAR) ,10),'') +
		ISNULL(RIGHT(REPLICATE('0',10)+CAST(T10.PROG_ID AS VARCHAR) ,10),'') +
		ISNULL(RIGHT(REPLICATE('0',10)+CAST(T9.PROG_ID AS VARCHAR) ,10),'') +
		ISNULL(RIGHT(REPLICATE('0',10)+CAST(T8.PROG_ID AS VARCHAR) ,10),'') +
		ISNULL(RIGHT(REPLICATE('0',10)+CAST(T7.PROG_ID AS VARCHAR) ,10),'') +
		ISNULL(RIGHT(REPLICATE('0',10)+CAST(T6.PROG_ID AS VARCHAR) ,10),'') +
		ISNULL(RIGHT(REPLICATE('0',10)+CAST(T5.PROG_ID AS VARCHAR) ,10),'') +
		ISNULL(RIGHT(REPLICATE('0',10)+CAST(T4.PROG_ID AS VARCHAR) ,10),'') +
		ISNULL(RIGHT(REPLICATE('0',10)+CAST(T3.PROG_ID AS VARCHAR) ,10),'') +
		ISNULL(RIGHT(REPLICATE('0',10)+CAST(T2.PROG_ID AS VARCHAR) ,10),'') +
		ISNULL(RIGHT(REPLICATE('0',10)+CAST(T1.PROG_ID AS VARCHAR) ,10),'') +
		REPLICATE('0',120), 120)) AS ORDINA,
	LEFT(
		ISNULL(RIGHT(REPLICATE('0',10)+CAST(T12.PROG_ID AS VARCHAR) ,10),'') +
		ISNULL(RIGHT(REPLICATE('0',10)+CAST(T11.PROG_ID AS VARCHAR) ,10),'') +
		ISNULL(RIGHT(REPLICATE('0',10)+CAST(T10.PROG_ID AS VARCHAR) ,10),'') +
		ISNULL(RIGHT(REPLICATE('0',10)+CAST(T9.PROG_ID AS VARCHAR) ,10),'') +
		ISNULL(RIGHT(REPLICATE('0',10)+CAST(T8.PROG_ID AS VARCHAR) ,10),'') +
		ISNULL(RIGHT(REPLICATE('0',10)+CAST(T7.PROG_ID AS VARCHAR) ,10),'') +
		ISNULL(RIGHT(REPLICATE('0',10)+CAST(T6.PROG_ID AS VARCHAR) ,10),'') +
		ISNULL(RIGHT(REPLICATE('0',10)+CAST(T5.PROG_ID AS VARCHAR) ,10),'') +
		ISNULL(RIGHT(REPLICATE('0',10)+CAST(T4.PROG_ID AS VARCHAR) ,10),'') +
		ISNULL(RIGHT(REPLICATE('0',10)+CAST(T3.PROG_ID AS VARCHAR) ,10),'') +
		ISNULL(RIGHT(REPLICATE('0',10)+CAST(T2.PROG_ID AS VARCHAR) ,10),'') +
		ISNULL(RIGHT(REPLICATE('0',10)+CAST(T1.PROG_ID AS VARCHAR) ,10),'') +
		REPLICATE('0',120), 120
	) AS ORDINA2,
	T1.*
FROM
	MET_EXPORTRADAR T1
	LEFT OUTER JOIN MET_EXPORTRADAR T2 ON T1.RIF_ID = T2.PROG_ID AND T1.ORDINE = T2.ORDINE
	LEFT OUTER JOIN MET_EXPORTRADAR T3 ON T2.RIF_ID = T3.PROG_ID AND T2.ORDINE = T3.ORDINE
	LEFT OUTER JOIN MET_EXPORTRADAR T4 ON T3.RIF_ID = T4.PROG_ID AND T3.ORDINE = T4.ORDINE
	LEFT OUTER JOIN MET_EXPORTRADAR T5 ON T4.RIF_ID = T5.PROG_ID AND T4.ORDINE = T5.ORDINE
	LEFT OUTER JOIN MET_EXPORTRADAR T6 ON T5.RIF_ID = T6.PROG_ID AND T5.ORDINE = T6.ORDINE
	LEFT OUTER JOIN MET_EXPORTRADAR T7 ON T6.RIF_ID = T7.PROG_ID AND T6.ORDINE = T7.ORDINE
	LEFT OUTER JOIN MET_EXPORTRADAR T8 ON T7.RIF_ID = T8.PROG_ID AND T7.ORDINE = T8.ORDINE
	LEFT OUTER JOIN MET_EXPORTRADAR T9 ON T8.RIF_ID = T9.PROG_ID AND T8.ORDINE = T9.ORDINE
	LEFT OUTER JOIN MET_EXPORTRADAR T10 ON T9.RIF_ID = T10.PROG_ID AND T9.ORDINE = T10.ORDINE
	LEFT OUTER JOIN MET_EXPORTRADAR T11 ON T10.RIF_ID = T11.PROG_ID AND T10.ORDINE = T11.ORDINE
	LEFT OUTER JOIN MET_EXPORTRADAR T12 ON T11.RIF_ID = T12.PROG_ID AND T11.ORDINE = T12.ORDINE
GO
GRANT SELECT ON MET_VISTA_ORD_EXPORTRADAR TO METODO98
GO

IF EXISTS(SELECT 1 FROM SYSOBJECTS WHERE SYSOBJECTS.ID=OBJECT_ID('MET_PROC_EXPORTRADAR') AND SYSOBJECTS.TYPE='P')
	DROP PROCEDURE MET_PROC_EXPORTRADAR
GO
CREATE PROCEDURE MET_PROC_EXPORTRADAR (@NOMEPIANIF VARCHAR(50),@ORDINE VARCHAR(42),@IDPIANO INT,@TIPO SMALLINT)
AS
INSERT INTO MET_EXPORTRADAR
SELECT DISTINCT
		@ORDINE AS ORDINE,
		0 AS ORDINAMENTO,
		LEG.LIVELLO, LEG.PROG_ID, LEG.RIF_ID,
		PP.RIFERIMENTI,
		PP.RIFCOMMCLI,
		(CASE PP.TIPORECORD
				WHEN 0 THEN 'FABBISOGNO'
				WHEN 1 THEN 'PROP. ACQUISTO'
				WHEN 2 THEN 'PROP. PRODUZIONE'
				WHEN 3 THEN 'ORD. CLIENTE'
				WHEN 4 THEN 'ORD. C/L'
				WHEN 5 THEN 'ORD. FORNITORE'
				WHEN 6 THEN 'ORD. PRODUZIONE'
				WHEN 7 THEN 'IMP. PRODUZIONE'
				WHEN 10 THEN 'FABB. MPS'
			ELSE
				'---'
		END) AS TIPO,
		PP.CODART, PP.DSCARTICOLO, PP.UMBASE, PP.QTABASE,
		CASE WHEN
				PP.TIPORECORD = 5
			THEN
				(SELECT RD.DATACONSEGNARICHIESTA FROM RIGHEDOCUMENTI RD WHERE RD.IDTESTA = PP.IDTESTADOC AND RD.IDRIGA = PP.IDRIGADOC)
			ELSE
				''
		END AS DATARICH,
		CASE WHEN
				PP.TIPORECORD = 5
			THEN
				CAST((SELECT EXD.CHKCONF FROM EXTRARIGHEDOC EXD WHERE EXD.IDTESTA = PP.IDTESTADOC AND EXD.IDRIGA = PP.IDRIGADOC) AS VARCHAR(1))
			ELSE
				'NA'
		END AS CONFERMATO,
		ISNULL(PP.DATAORD, '') AS DATAORD,
		PP.DATACONS,
		PP.CODCLIFOR, ISNULL(PP.RAGSOCCLIFOR, '') AS RAGIONESOCIALE,
		(CASE WHEN (SELECT ISNULL(COUNT(1), 0) FROM ECCEZIONIPROGPROD EPP WHERE LEG.PROG_ID = EPP.RIFID) > 0 THEN 1 ELSE 0 END) AS ECCEZIONI,
		ISNULL(E.CODPIANIFICATORE,0) AS CODPIANIFICATORE,
		GETDATE() AS DATAMODIFICA,
		ISNULL(EE.NUOVADATA, '') AS NUOVADATA,
		@NOMEPIANIF AS NOMEPIANIF
	FROM
		VISTASITUAZIONEPROGPROD PP
		LEFT OUTER JOIN MET_VISTA_EXPORTRADAR_ECCEZIONI EE ON PP.NOMEPIANIF = EE.NOMEPIANIF AND PP.PROG_ID = EE.RIFID
		LEFT OUTER JOIN EXTRAMAG AS E ON PP.CODART=E.CODART
		INNER JOIN DBO.[MAPS_NAVIGAPROGPRODVALLE](@NOMEPIANIF,  @IDPIANO) LEG ON PP.NOMEPIANIF=LEG.NOMEPIANIF AND PP.PROG_ID=LEG.PROG_ID
GO
GRANT EXECUTE ON MET_PROC_EXPORTRADAR TO METODO98
GO
-----------------------------------------------------------------------------------
-- FINE Aggiunte del 31/08/2017 - daniele r
-----------------------------------------------------------------------------------



-------------------------------------------------------
-- Aggiunte del 07/02/2018 - Gildo                   --
-------------------------------------------------------
-- Correzione viste per riallineamento allo standard --
-------------------------------------------------------

IF EXISTS (SELECT 1 FROM Sys.Objects SO WHERE SO.Name='BRECEA_VistaClienti' AND SO.Type='V')
	DROP VIEW BRECEA_VistaClienti
GO

CREATE VIEW BRECEA_VistaClienti AS
	SELECT
		AC.*,
		RC.ESERCIZIO, RC.CODSETTORE, RC.CODZONA,
		RC.CODCATEGORIA, RC.CODSPED, RC.PRCTRASPORTO, RC.INOLTROTRASP, RC.CODPAG,
		RC.MESEESCL1, RC.GGESCL1, RC.MESEESCL2, RC.GGESCL2,
		(SELECT CAB FROM BANCAAPPCF WHERE CODCONTO=RC.CODCONTO AND CODICE=BANCAANAGR) AS CAB,
		(SELECT ABI FROM BANCAAPPCF WHERE CODCONTO=RC.CODCONTO AND CODICE=BANCAANAGR) AS ABI,
		RC.CODBANCA,
		RC.BANCAANAGR, RC.CODAGENTE1, RC.CODAGENTE2, RC.CODAGENTE3, RC.PROVV1, RC.PROVV2,
		RC.PROVV3, RC.SCONTO1, RC.CODIVA, RC.DICHESIVA, RC.LISTINO, RC.CODCAMBIO,
		RC.DESTDIVMERCI, RC.DESTDIVDOCUMENTI, RC.SPESEDOCUM, RC.SPESEEFFETTO,
		RC.SPESETRASPORTO, RC.SPESEIMBALLO, RC.FIDO, RC.FIDOEURO, RC.PORTO,
		RC.TRASPACURA, RC.APPLSCONTORIGA, RC.APPLSCONTOFINALE, RC.CODCONTOFATT,
		RC.FATTFINEMESE, RC.NONRAGGRUPPDOC, RC.CODDEPOSITO,
		RC.CODDEPOSITOCOLL, RC.CODDEPCOMP, RC.CODDEPCOMPCOLL, RC.RIVIVAOMAGGI,
		RC.NRCONTROPCONT, RC.USAPRZPRVPART, RC.CCDEBITORE, RC.CODDEBITORE, RC.NOTE1,
		RC.STATOCONTABILITA, RC.STATOMAGAZZINO,RC.STATOORDINI, RC.STATOBOLLE, RC.STATOFATTURE, RC.STATONOTEACCREDITO, RC.STATOALTRO,
		RC.CODGRUPPOPREZZIPART, RC.CODGRUPPOPROVPART,RC.RAGGSCADENZE,RC.PROGDICHINTENTO,RC.SPLITPAYMENT,

		TM.Descrizione AS DscMastro,
		TN.Descrizione AS DscNazione,
		CAT.DscCategoria,
		(CASE WHEN (RC.StatoContabilita + RC.StatoMagazzino + RC.StatoOrdini + RC.StatoBolle + RC.StatoFatture + RC.StatoNoteAccredito)>0 THEN 'BLOCCATO' ELSE '' END) AS StatoTot,
		(RC.StatoContabilita + RC.StatoMagazzino + RC.StatoOrdini + RC.StatoBolle + RC.StatoFatture + RC.StatoNoteAccredito) AS ValStatoTot

	FROM AnagraficaCF AC
		LEFT OUTER JOIN AnagraficaRiservatiCF RC ON AC.CodConto=RC.CodConto AND RC.Esercizio=(SELECT EsercizioAttivo FROM TabUtenti WHERE UserDB=cast(user_name() AS varchar(25)))
		LEFT OUTER JOIN TabMastri TM ON AC.CodMastro=TM.Codice
		LEFT OUTER JOIN TabNazioni TN ON AC.CodNazione=TN.Codice
		LEFT OUTER JOIN CategorieCF CAT ON RC.CodCategoria=CAT.CodCategoria

	WHERE AC.TipoConto='C'
GO

GRANT SELECT ON BRECEA_VistaClienti TO Metodo98
GO



IF EXISTS (SELECT 1 FROM Sys.Objects SO WHERE SO.Name='BRECEA_VistaCliFor' AND SO.Type='V')
	DROP VIEW BRECEA_VistaCliFor
GO

CREATE VIEW BRECEA_VistaCliFor AS
	SELECT
		AF.TIPOCONTO, AF.CODCONTO, AF.DSCCONTO1, AF.DSCCONTO2, AF.CODMASTRO,
		AF.INDIRIZZO, AF.CAP, AF.LOCALITA, AF.PROVINCIA, AF.TELEFONO, AF.FAX, AF.TELEX,
		AF.CODFISCALE, AF.PARTITAIVA, AF.CODNAZIONE, AF.CODICEISO, AF.CODLINGUA, AF.NOTE,
		AF.UTENTEMODIFICA, AF.DATAMODIFICA, AF.CODREGIONE, AF.FLGBLACKLIST,RF.ESERCIZIO, RF.CODSETTORE,
		AF.FLGPERSFISICA,AF.DATANASCITAPERSFIS,AF.COMNASCITAPERSFIS,AF.PROVNASCITAPERSFIS,AF.COGNOMEPERSFIS,AF.NOMEPERSFIS,AF.SESSOPERSFIS,
		AF.CODSTATOESTERO,AF.STATOPROVCONTEA,AF.INDIRIZZOESTERO,AF.CODDEST_EDI,
		AF.TIPOPROFESSIONISTA,AF.TIPODOCRTACC,AF.FLGELENCOCF,AF.FLGSISTRI,AF.FLGQUALITY,
		AF.LUOGONASCITA, AF.VERSPRESSO, AF.INDIRIZZOINTERNET, AF.CODFISCALERITACC, AF.PARTITAIVARITACC, AF.CAPRITACC, AF.PROVINCIARITACC,
		AF.LOCALITARITACC, AF.INDIRIZZORITACC, AF.ZONASPED, AF.DATANASCITA, AF.TIPOCLIENTEBUDGET, AF.CONSIDERABUDGET, AF.PERCORSODOCUMENTI,AF.FLGDOGANA,
		RF.CODZONA, RF.CODCATEGORIA, RF.CODSPED, RF.PRCTRASPORTO, RF.INOLTROTRASP, RF.CODPAG,
		RF.MESEESCL1, RF.GGESCL1, RF.MESEESCL2, RF.GGESCL2,
		(SELECT CAB FROM BANCAAPPCF WHERE CODCONTO=RF.CODCONTO AND CODICE=BANCAANAGR) AS CAB,
		(SELECT ABI FROM BANCAAPPCF WHERE CODCONTO=RF.CODCONTO AND CODICE=BANCAANAGR) AS ABI,
		(SELECT CONTOCORRENTE FROM BANCAAPPCF WHERE CODCONTO=RF.CODCONTO AND CODICE=BANCAANAGR) AS CCDEBITORE,
		RF.CODBANCA,
		RF.BANCAANAGR, RF.CODAGENTE1, RF.CODAGENTE2, RF.CODAGENTE3, RF.PROVV1, RF.PROVV2,
		RF.PROVV3, RF.SCONTO1, RF.CODIVA, RF.DICHESIVA, RF.LISTINO, RF.CODCAMBIO,
		RF.DESTDIVMERCI, RF.DESTDIVDOCUMENTI, RF.SPESEDOCUM, RF.SPESEEFFETTO,
		RF.SPESETRASPORTO, RF.SPESEIMBALLO, RF.FIDO, RF.FIDOEURO, RF.PORTO,
		RF.TRASPACURA, RF.APPLSCONTORIGA, RF.APPLSCONTOFINALE, RF.CODCONTOFATT,
		RF.FATTFINEMESE, RF.NONRAGGRUPPDOC, RF.CODDEPOSITO,
		RF.CODDEPOSITOCOLL, RF.CODDEPCOMP, RF.CODDEPCOMPCOLL, RF.RIVIVAOMAGGI,
		RF.NRCONTROPCONT, RF.USAPRZPRVPART, RF.CODDEBITORE, RF.NOTE1,
		RF.STATOCONTABILITA, RF.STATOMAGAZZINO,RF.STATOORDINI, RF.STATOBOLLE, RF.STATOFATTURE, RF.STATONOTEACCREDITO, RF.STATOALTRO,
		RF.CODGRUPPOPREZZIPART, RF.CODGRUPPOPROVPART,RF.RAGGSCADENZE,
		RF.EXPORTECOMMERCE, RF.USAPRZCOMMERCIALI,RF.PROGDICHINTENTO,RF.SPLITPAYMENT,

		TM.Descrizione AS DscMastro,
		TN.Descrizione AS DscNazione,
		CAT.DscCategoria,
		(CASE WHEN (RF.StatoContabilita + RF.StatoMagazzino + RF.StatoOrdini + RF.StatoBolle + RF.StatoFatture + RF.StatoNoteAccredito)>0 THEN 'BLOCCATO' ELSE '' END) AS StatoTot,
		(RF.StatoContabilita + RF.StatoMagazzino + RF.StatoOrdini + RF.StatoBolle + RF.StatoFatture + RF.StatoNoteAccredito) AS ValStatoTot

	FROM
		AnagraficaCF AF
		LEFT OUTER JOIN AnagraficaRiservatiCF RF ON AF.CodConto=RF.CodConto AND RF.Esercizio=(SELECT EsercizioAttivo FROM TabUtenti WHERE UserDB=cast(user_name() AS varchar(25)))
		LEFT OUTER JOIN TabMastri TM ON AF.CodMastro=TM.Codice
		LEFT OUTER JOIN TabNazioni TN ON AF.CodNazione=TN.Codice
		LEFT OUTER JOIN CategorieCF CAT ON RF.CodCategoria=CAT.CodCategoria
GO

GRANT SELECT ON BRECEA_VistaCliFor TO Metodo98
GO



IF EXISTS (SELECT 1 FROM Sys.Objects SO WHERE SO.Name='BRECEA_VistaGenerici' AND SO.Type='V')
	DROP VIEW BRECEA_VistaGenerici
GO

CREATE VIEW BRECEA_VistaGenerici AS
	SELECT
		ANAGRAFICAGENERICI.CODCONTO, ANAGRAFICAGENERICI.DSCCONTO1,
		ANAGRAFICAGENERICI.CODMASTRO, ANAGRAFICAGENERICI.DATAINIVALIDITA,
		ANAGRAFICAGENERICI.DATAFINEVALIDITA, ANAGRAFICAGENERICI.NOTE,
		ANAGRAFICAGENERICI.NOTE1,'' AS CODFISCALE,'' AS PARTITAIVA,
		'' AS CODBANCA,'' AS CODAGENTE1,'' AS CODAGENTE2,'' AS CODAGENTE3,0 AS CODCAMBIO,'' AS CODPAG,
		ANAGRAFICAGENERICI.GESTPARTITE,
		ANAGRAFICAGENERICI.CTRLQUADCDC,
		ANAGRAFICAGENERICI.FLGRATEIRISCONTI,
		ANAGRAFICAGENERICI.UTENTEMODIFICA,
		ANAGRAFICAGENERICI.DATAMODIFICA,
		0 AS PROGDICHINTENTO,

		TM.Descrizione AS DscMastro,
		'' AS DscNazione,
		'' AS DscCategoria,
		'' AS StatoTot,
		0 AS ValStatoTot

	FROM
		AnagraficaGenerici
		INNER JOIN TabEsercizi ON AnagraficaGenerici.DataFineValidita>=TabEsercizi.DataIniCont
			AND AnagraficaGenerici.DataIniValidita<=TabEsercizi.DataFineCont
			AND TabEsercizi.Codice=(SELECT EsercizioAttivo FROM TabUtenti WHERE UserDB=cast(user_name() AS varchar(25)))
		LEFT OUTER JOIN Tabmastri TM ON AnagraficaGenerici.CodMastro=TM.Codice
GO

GRANT SELECT ON BRECEA_VistaGenerici TO Metodo98
GO

-------------------------------------------------------
-- Fine aggiunte del 07/02/2018 - Gildo              --
-------------------------------------------------------

/*
ciano - export pdf
*/


-- aggancio agente su form pers export pdf
INSERT INTO TabAgentiUtente (CodUtente, FormID, Agente, UtenteModifica, DataModifica)
	SELECT UserID, 1565312, 'SelezionePercorsoSuForm.cmp', 'Input', GetDate() FROM TabUtenti	WHERE UserID NOT IN (SELECT CodUtente FROM TabAgentiUtente WHERE FormID=1565312)
GO

IF Col_Length ('EXTRATESTEDOC', 'ExportPDF') IS NULL
    ALTER TABLE dbo.EXTRATESTEDOC ADD ExportPDF Varchar(1) DEFAULT '';
GO



------------------------------------------
--            ATTENZIONE !!!            --
------------------------------------------
-- Lasciare queste righe alla fine!     --
-- Tutte le modifiche vanno aggiunte in --
-- coda alle altre, ma prima di queste. --
------------------------------------------

-- Inserimento record extra mancanti
INSERT INTO ExtraAvanzamenti (RifProgressivo, UtenteModifica, DataModifica)
	SELECT SA.Progressivo, SA.UtenteModifica, SA.DataModifica
		FROM StoricoAvanzamenti SA
		WHERE SA.Progressivo NOT IN (SELECT EA.RifProgressivo FROM ExtraAvanzamenti EA)
GO

INSERT INTO ExtraClienti (CodConto, UtenteModifica, DataModifica)
	SELECT ACF.CodConto, ACF.UtenteModifica, ACF.DataModifica
		FROM AnagraficaCF ACF
		WHERE ACF.TipoConto='C' AND ACF.CodConto NOT IN (SELECT EC.CodConto FROM ExtraClienti EC)
GO

INSERT INTO ExtraDepositi (CodDeposito, UtenteModifica, DataModifica)
	SELECT AD.Codice, AD.UtenteModifica, AD.DataModifica
		FROM AnagraficaDepositi AD
		WHERE AD.Codice NOT IN (SELECT ED.CodDeposito FROM ExtraDepositi ED)
GO

INSERT INTO ExtraDistinta (Progressivo, UtenteModifica, DataModifica)
	SELECT DAC.Progressivo, DAC.UtenteModifica, DAC.DataModifica
		FROM DistintaArtComposti DAC
		WHERE DAC.Progressivo NOT IN (SELECT ED.Progressivo FROM ExtraDistinta ED)
GO

INSERT INTO ExtraFornitori (CodConto, UtenteModifica, DataModifica)
	SELECT ACF.CodConto, ACF.UtenteModifica, ACF.DataModifica
		FROM AnagraficaCF ACF
		WHERE ACF.TipoConto='F' AND ACF.CodConto NOT IN (SELECT EF.CodConto FROM ExtraFornitori EF)
GO

INSERT INTO ExtraMag (CodArt, UtenteModifica, DataModifica)
	SELECT AA.Codice, AA.UtenteModifica, AA.DataModifica
		FROM AnagraficaArticoli AA
		WHERE AA.Codice NOT IN (SELECT EM.CodArt FROM ExtraMag EM)
GO

INSERT INTO ExtraParDoc (Codice, UtenteModifica, DataModifica)
	SELECT PD.Codice, PD.UtenteModifica, PD.DataModifica
		FROM ParametriDoc PD
		WHERE PD.Codice NOT IN (SELECT EPD.Codice FROM ExtraParDoc EPD)
GO



-- Refresh delle viste
EXEC RefreshAllView
GO
